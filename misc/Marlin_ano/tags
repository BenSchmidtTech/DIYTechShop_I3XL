!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS_PREHEAT_FAN_SPEED	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	189;"	d
ABS_PREHEAT_FAN_SPEED	src/Configuration.h	198;"	d
ABS_PREHEAT_HOTEND_TEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	187;"	d
ABS_PREHEAT_HOTEND_TEMP	src/Configuration.h	196;"	d
ABS_PREHEAT_HPB_TEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	188;"	d
ABS_PREHEAT_HPB_TEMP	src/Configuration.h	197;"	d
ACMD23	src/SdInfo.h	/^uint8_t const ACMD23 = 0X17;$/;"	v
ACMD41	src/SdInfo.h	/^uint8_t const ACMD41 = 0X29;$/;"	v
AIO0_DDR	src/fastio.h	2189;"	d
AIO0_DDR	src/fastio.h	655;"	d
AIO0_PIN	src/fastio.h	2185;"	d
AIO0_PIN	src/fastio.h	652;"	d
AIO0_PWM	src/fastio.h	2188;"	d
AIO0_PWM	src/fastio.h	656;"	d
AIO0_RPORT	src/fastio.h	2186;"	d
AIO0_RPORT	src/fastio.h	653;"	d
AIO0_WPORT	src/fastio.h	2187;"	d
AIO0_WPORT	src/fastio.h	654;"	d
AIO1_DDR	src/fastio.h	2195;"	d
AIO1_DDR	src/fastio.h	661;"	d
AIO1_PIN	src/fastio.h	2191;"	d
AIO1_PIN	src/fastio.h	658;"	d
AIO1_PWM	src/fastio.h	2194;"	d
AIO1_PWM	src/fastio.h	662;"	d
AIO1_RPORT	src/fastio.h	2192;"	d
AIO1_RPORT	src/fastio.h	659;"	d
AIO1_WPORT	src/fastio.h	2193;"	d
AIO1_WPORT	src/fastio.h	660;"	d
AIO2_DDR	src/fastio.h	2201;"	d
AIO2_DDR	src/fastio.h	667;"	d
AIO2_PIN	src/fastio.h	2197;"	d
AIO2_PIN	src/fastio.h	664;"	d
AIO2_PWM	src/fastio.h	2200;"	d
AIO2_PWM	src/fastio.h	668;"	d
AIO2_RPORT	src/fastio.h	2198;"	d
AIO2_RPORT	src/fastio.h	665;"	d
AIO2_WPORT	src/fastio.h	2199;"	d
AIO2_WPORT	src/fastio.h	666;"	d
AIO3_DDR	src/fastio.h	2207;"	d
AIO3_DDR	src/fastio.h	673;"	d
AIO3_PIN	src/fastio.h	2203;"	d
AIO3_PIN	src/fastio.h	670;"	d
AIO3_PWM	src/fastio.h	2206;"	d
AIO3_PWM	src/fastio.h	674;"	d
AIO3_RPORT	src/fastio.h	2204;"	d
AIO3_RPORT	src/fastio.h	671;"	d
AIO3_WPORT	src/fastio.h	2205;"	d
AIO3_WPORT	src/fastio.h	672;"	d
AIO4_DDR	src/fastio.h	2213;"	d
AIO4_DDR	src/fastio.h	679;"	d
AIO4_PIN	src/fastio.h	2209;"	d
AIO4_PIN	src/fastio.h	676;"	d
AIO4_PWM	src/fastio.h	2212;"	d
AIO4_PWM	src/fastio.h	680;"	d
AIO4_RPORT	src/fastio.h	2210;"	d
AIO4_RPORT	src/fastio.h	677;"	d
AIO4_WPORT	src/fastio.h	2211;"	d
AIO4_WPORT	src/fastio.h	678;"	d
AIO5_DDR	src/fastio.h	2219;"	d
AIO5_DDR	src/fastio.h	685;"	d
AIO5_PIN	src/fastio.h	2215;"	d
AIO5_PIN	src/fastio.h	682;"	d
AIO5_PWM	src/fastio.h	2218;"	d
AIO5_PWM	src/fastio.h	686;"	d
AIO5_RPORT	src/fastio.h	2216;"	d
AIO5_RPORT	src/fastio.h	683;"	d
AIO5_WPORT	src/fastio.h	2217;"	d
AIO5_WPORT	src/fastio.h	684;"	d
AIO6_DDR	src/fastio.h	2225;"	d
AIO6_DDR	src/fastio.h	691;"	d
AIO6_PIN	src/fastio.h	2221;"	d
AIO6_PIN	src/fastio.h	688;"	d
AIO6_PWM	src/fastio.h	2224;"	d
AIO6_PWM	src/fastio.h	692;"	d
AIO6_RPORT	src/fastio.h	2222;"	d
AIO6_RPORT	src/fastio.h	689;"	d
AIO6_WPORT	src/fastio.h	2223;"	d
AIO6_WPORT	src/fastio.h	690;"	d
AIO7_DDR	src/fastio.h	2231;"	d
AIO7_DDR	src/fastio.h	697;"	d
AIO7_PIN	src/fastio.h	2227;"	d
AIO7_PIN	src/fastio.h	694;"	d
AIO7_PWM	src/fastio.h	2230;"	d
AIO7_PWM	src/fastio.h	698;"	d
AIO7_RPORT	src/fastio.h	2228;"	d
AIO7_RPORT	src/fastio.h	695;"	d
AIO7_WPORT	src/fastio.h	2229;"	d
AIO7_WPORT	src/fastio.h	696;"	d
ALARM_PIN	src/pins.h	870;"	d
ALLOW_DEPRECATED_FUNCTIONS	src/SdFatConfig.h	62;"	d
ARDOBJ	src/Makefile	/^ARDOBJ = wiring_shift.o wiring.o wiring_digital.o wiring_analog.o WInterrupts.o wiring_pulse.o \\$/;"	m
AUTOTEMP_OLDWEIGHT	src/Configuration_adv.h	49;"	d
AXIS_RELATIVE_MODES	src/Configuration_adv.h	89;"	d
AxisEnum	src/Marlin.h	/^enum AxisEnum {X_AXIS=0, Y_AXIS=1, Z_AXIS=2, E_AXIS=3};$/;"	g
BAUD	src/Makefile	/^BAUD = 115200$/;"	m
BAUDRATE	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	9;"	d
BAUDRATE	src/Configuration.h	9;"	d
BED_CHECK_INTERVAL	src/Configuration_adv.h	16;"	d
BED_HYSTERESIS	src/Configuration_adv.h	14;"	d
BED_MAXTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	47;"	d
BED_MAXTEMP	src/Configuration.h	47;"	d
BED_MAXTEMP	src/Configuration_adv.h	233;"	d
BED_MINTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	39;"	d
BED_MINTEMP	src/Configuration.h	39;"	d
BED_MINTEMP	src/Configuration_adv.h	232;"	d
BED_USES_AD595	src/Configuration_adv.h	214;"	d
BED_USES_THERMISTOR	src/Configuration_adv.h	202;"	d
BEEPER	src/pins.h	205;"	d
BEEPER	src/pins.h	307;"	d
BEEPER	src/pins.h	335;"	d
BEEPER	src/pins.h	689;"	d
BEEPER	src/pins.h	716;"	d
BIN	src/MarlinSerial.h	30;"	d
BLEN_A	src/pins.h	224;"	d
BLEN_A	src/pins.h	323;"	d
BLEN_A	src/pins.h	368;"	d
BLEN_A	src/pins.h	705;"	d
BLEN_A	src/pins.h	748;"	d
BLEN_B	src/pins.h	223;"	d
BLEN_B	src/pins.h	322;"	d
BLEN_B	src/pins.h	367;"	d
BLEN_B	src/pins.h	704;"	d
BLEN_B	src/pins.h	747;"	d
BLEN_C	src/pins.h	222;"	d
BLEN_C	src/pins.h	321;"	d
BLEN_C	src/pins.h	703;"	d
BLOCK	src/ultralcd.h	148;"	d
BLOCK	src/ultralcd.h	22;"	d
BLOCK	src/ultralcd.h	44;"	d
BLOCK_BUFFER_SIZE	src/Configuration_adv.h	174;"	d
BLOCK_BUFFER_SIZE	src/Configuration_adv.h	176;"	d
BL_DW	src/pins.h	363;"	d
BL_DW	src/pins.h	743;"	d
BL_LE	src/pins.h	360;"	d
BL_LE	src/pins.h	740;"	d
BL_MI	src/pins.h	362;"	d
BL_MI	src/pins.h	742;"	d
BL_RI	src/pins.h	364;"	d
BL_RI	src/pins.h	744;"	d
BL_ST	src/pins.h	365;"	d
BL_ST	src/pins.h	745;"	d
BL_UP	src/pins.h	361;"	d
BL_UP	src/pins.h	741;"	d
BOGUS_TEMPERATURE_FAILSAFE_OVERRIDE	src/pins.h	127;"	d
BOOTSIG0	src/SdFatStructs.h	/^uint8_t const BOOTSIG0 = 0X55;$/;"	v
BOOTSIG1	src/SdFatStructs.h	/^uint8_t const BOOTSIG1 = 0XAA;$/;"	v
BTN_EN1	src/pins.h	218;"	d
BTN_EN1	src/pins.h	317;"	d
BTN_EN1	src/pins.h	699;"	d
BTN_EN2	src/pins.h	219;"	d
BTN_EN2	src/pins.h	318;"	d
BTN_EN2	src/pins.h	700;"	d
BTN_ENC	src/pins.h	220;"	d
BTN_ENC	src/pins.h	319;"	d
BTN_ENC	src/pins.h	701;"	d
BUFSIZE	src/Configuration_adv.h	182;"	d
BYTE	src/MarlinSerial.h	31;"	d
B_DW	src/ultralcd.h	37;"	d
B_LE	src/ultralcd.h	34;"	d
B_MI	src/ultralcd.h	36;"	d
B_RI	src/ultralcd.h	38;"	d
B_ST	src/ultralcd.h	39;"	d
B_UP	src/ultralcd.h	35;"	d
CACHE_FOR_READ	src/SdVolume.h	/^  static bool const CACHE_FOR_READ = false;$/;"	m	class:SdVolume
CACHE_FOR_WRITE	src/SdVolume.h	/^  static bool const CACHE_FOR_WRITE = true;$/;"	m	class:SdVolume
CARDINSERTED	src/ultralcd.h	25;"	d
CARDINSERTED	src/ultralcd.h	27;"	d
CFLAGS	src/Makefile	/^CFLAGS = -g -Os -Wall -fno-exceptions -ffunction-sections -fdata-sections -mmcu=$(MCU) \\$/;"	m
CHANGE	src/wiring.h	61;"	d
CHECK_ENDSTOPS	src/stepper.cpp	87;"	d	file:
CHECK_ENDSTOPS	src/stepper.cpp	89;"	d	file:
CID	src/SdInfo.h	/^typedef struct CID {$/;"	s
CLICKED	src/ultralcd.h	147;"	d
CLICKED	src/ultralcd.h	21;"	d
CLICKED	src/ultralcd.h	43;"	d
CMD0	src/SdInfo.h	/^uint8_t const CMD0 = 0X00;$/;"	v
CMD10	src/SdInfo.h	/^uint8_t const CMD10 = 0X0A;$/;"	v
CMD12	src/SdInfo.h	/^uint8_t const CMD12 = 0X0C;$/;"	v
CMD13	src/SdInfo.h	/^uint8_t const CMD13 = 0X0D;$/;"	v
CMD17	src/SdInfo.h	/^uint8_t const CMD17 = 0X11;$/;"	v
CMD18	src/SdInfo.h	/^uint8_t const CMD18 = 0X12;$/;"	v
CMD24	src/SdInfo.h	/^uint8_t const CMD24 = 0X18;$/;"	v
CMD25	src/SdInfo.h	/^uint8_t const CMD25 = 0X19;$/;"	v
CMD32	src/SdInfo.h	/^uint8_t const CMD32 = 0X20;$/;"	v
CMD33	src/SdInfo.h	/^uint8_t const CMD33 = 0X21;$/;"	v
CMD38	src/SdInfo.h	/^uint8_t const CMD38 = 0X26;$/;"	v
CMD55	src/SdInfo.h	/^uint8_t const CMD55 = 0X37;$/;"	v
CMD58	src/SdInfo.h	/^uint8_t const CMD58 = 0X3A;$/;"	v
CMD8	src/SdInfo.h	/^uint8_t const CMD8 = 0X08;$/;"	v
CMD9	src/SdInfo.h	/^uint8_t const CMD9 = 0X09;$/;"	v
CONTROLLERFAN_SEC	src/Configuration_adv.h	70;"	d
CPPFLAGS	src/Makefile	/^CPPFLAGS = $(CFLAGS)$/;"	m
CRITICAL_SECTION_END	src/Marlin.h	171;"	d
CRITICAL_SECTION_START	src/Marlin.h	170;"	d
CSDV1	src/SdInfo.h	/^typedef struct CSDV1 {$/;"	s
CSDV2	src/SdInfo.h	/^typedef struct CSDV2 {$/;"	s
CardReader	src/cardreader.cpp	/^CardReader::CardReader()$/;"	f	class:CardReader
CardReader	src/cardreader.h	/^class CardReader$/;"	c
ClearToSend	.build_ano/mega/src/Marlin.ino.cpp	/^void ClearToSend()$/;"	f
CooldownNoWait	src/Configuration_adv.h	28;"	d
DATA_RES_ACCEPTED	src/SdInfo.h	/^uint8_t const DATA_RES_ACCEPTED = 0X05;$/;"	v
DATA_RES_MASK	src/SdInfo.h	/^uint8_t const DATA_RES_MASK = 0X1F;$/;"	v
DATA_START_BLOCK	src/SdInfo.h	/^uint8_t const DATA_START_BLOCK = 0XFE;$/;"	v
DEBUG_LED	src/fastio.h	115;"	d
DEBUG_LED	src/fastio.h	1939;"	d
DEBUG_LED	src/fastio.h	455;"	d
DEBUG_LED	src/fastio.h	963;"	d
DEBUG_PIN	src/pins.h	131;"	d
DEBUG_PIN	src/pins.h	199;"	d
DEBUG_PIN	src/pins.h	544;"	d
DEC	src/MarlinSerial.h	27;"	d
DEFAULT	src/wiring.h	71;"	d
DEFAULT_ACCELERATION	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	147;"	d
DEFAULT_ACCELERATION	src/Configuration.h	156;"	d
DEFAULT_AXIS_STEPS_PER_UNIT	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	142;"	d
DEFAULT_AXIS_STEPS_PER_UNIT	src/Configuration.h	151;"	d
DEFAULT_EJERK	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	153;"	d
DEFAULT_EJERK	src/Configuration.h	162;"	d
DEFAULT_Kc	src/Configuration_adv.h	35;"	d
DEFAULT_Kd	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	65;"	d
DEFAULT_Kd	src/Configuration.h	75;"	d
DEFAULT_Ki	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	64;"	d
DEFAULT_Ki	src/Configuration.h	74;"	d
DEFAULT_Kp	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	63;"	d
DEFAULT_Kp	src/Configuration.h	73;"	d
DEFAULT_MAX_ACCELERATION	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	145;"	d
DEFAULT_MAX_ACCELERATION	src/Configuration.h	154;"	d
DEFAULT_MAX_FEEDRATE	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	144;"	d
DEFAULT_MAX_FEEDRATE	src/Configuration.h	153;"	d
DEFAULT_MINIMUMFEEDRATE	src/Configuration_adv.h	96;"	d
DEFAULT_MINSEGMENTTIME	src/Configuration_adv.h	100;"	d
DEFAULT_MINTRAVELFEEDRATE	src/Configuration_adv.h	97;"	d
DEFAULT_RETRACT_ACCELERATION	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	148;"	d
DEFAULT_RETRACT_ACCELERATION	src/Configuration.h	157;"	d
DEFAULT_STEPPER_DEACTIVE_TIME	src/Configuration_adv.h	94;"	d
DEFAULT_XYJERK	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	151;"	d
DEFAULT_XYJERK	src/Configuration.h	160;"	d
DEFAULT_ZJERK	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	152;"	d
DEFAULT_ZJERK	src/Configuration.h	161;"	d
DEG_TO_RAD	src/wiring.h	52;"	d
DIO0_DDR	src/fastio.h	124;"	d
DIO0_DDR	src/fastio.h	1948;"	d
DIO0_DDR	src/fastio.h	463;"	d
DIO0_DDR	src/fastio.h	971;"	d
DIO0_PIN	src/fastio.h	121;"	d
DIO0_PIN	src/fastio.h	1944;"	d
DIO0_PIN	src/fastio.h	460;"	d
DIO0_PIN	src/fastio.h	968;"	d
DIO0_PWM	src/fastio.h	125;"	d
DIO0_PWM	src/fastio.h	1947;"	d
DIO0_PWM	src/fastio.h	464;"	d
DIO0_PWM	src/fastio.h	972;"	d
DIO0_RPORT	src/fastio.h	122;"	d
DIO0_RPORT	src/fastio.h	1945;"	d
DIO0_RPORT	src/fastio.h	461;"	d
DIO0_RPORT	src/fastio.h	969;"	d
DIO0_WPORT	src/fastio.h	123;"	d
DIO0_WPORT	src/fastio.h	1946;"	d
DIO0_WPORT	src/fastio.h	462;"	d
DIO0_WPORT	src/fastio.h	970;"	d
DIO10_DDR	src/fastio.h	1031;"	d
DIO10_DDR	src/fastio.h	184;"	d
DIO10_DDR	src/fastio.h	2008;"	d
DIO10_DDR	src/fastio.h	523;"	d
DIO10_PIN	src/fastio.h	1028;"	d
DIO10_PIN	src/fastio.h	181;"	d
DIO10_PIN	src/fastio.h	2004;"	d
DIO10_PIN	src/fastio.h	520;"	d
DIO10_PWM	src/fastio.h	1032;"	d
DIO10_PWM	src/fastio.h	185;"	d
DIO10_PWM	src/fastio.h	2007;"	d
DIO10_PWM	src/fastio.h	524;"	d
DIO10_RPORT	src/fastio.h	1029;"	d
DIO10_RPORT	src/fastio.h	182;"	d
DIO10_RPORT	src/fastio.h	2005;"	d
DIO10_RPORT	src/fastio.h	521;"	d
DIO10_WPORT	src/fastio.h	1030;"	d
DIO10_WPORT	src/fastio.h	183;"	d
DIO10_WPORT	src/fastio.h	2006;"	d
DIO10_WPORT	src/fastio.h	522;"	d
DIO11_DDR	src/fastio.h	1037;"	d
DIO11_DDR	src/fastio.h	190;"	d
DIO11_DDR	src/fastio.h	2014;"	d
DIO11_DDR	src/fastio.h	529;"	d
DIO11_PIN	src/fastio.h	1034;"	d
DIO11_PIN	src/fastio.h	187;"	d
DIO11_PIN	src/fastio.h	2010;"	d
DIO11_PIN	src/fastio.h	526;"	d
DIO11_PWM	src/fastio.h	1038;"	d
DIO11_PWM	src/fastio.h	191;"	d
DIO11_PWM	src/fastio.h	2013;"	d
DIO11_PWM	src/fastio.h	530;"	d
DIO11_RPORT	src/fastio.h	1035;"	d
DIO11_RPORT	src/fastio.h	188;"	d
DIO11_RPORT	src/fastio.h	2011;"	d
DIO11_RPORT	src/fastio.h	527;"	d
DIO11_WPORT	src/fastio.h	1036;"	d
DIO11_WPORT	src/fastio.h	189;"	d
DIO11_WPORT	src/fastio.h	2012;"	d
DIO11_WPORT	src/fastio.h	528;"	d
DIO12_DDR	src/fastio.h	1043;"	d
DIO12_DDR	src/fastio.h	196;"	d
DIO12_DDR	src/fastio.h	2020;"	d
DIO12_DDR	src/fastio.h	535;"	d
DIO12_PIN	src/fastio.h	1040;"	d
DIO12_PIN	src/fastio.h	193;"	d
DIO12_PIN	src/fastio.h	2016;"	d
DIO12_PIN	src/fastio.h	532;"	d
DIO12_PWM	src/fastio.h	1044;"	d
DIO12_PWM	src/fastio.h	197;"	d
DIO12_PWM	src/fastio.h	2019;"	d
DIO12_PWM	src/fastio.h	536;"	d
DIO12_RPORT	src/fastio.h	1041;"	d
DIO12_RPORT	src/fastio.h	194;"	d
DIO12_RPORT	src/fastio.h	2017;"	d
DIO12_RPORT	src/fastio.h	533;"	d
DIO12_WPORT	src/fastio.h	1042;"	d
DIO12_WPORT	src/fastio.h	195;"	d
DIO12_WPORT	src/fastio.h	2018;"	d
DIO12_WPORT	src/fastio.h	534;"	d
DIO13_DDR	src/fastio.h	1049;"	d
DIO13_DDR	src/fastio.h	2026;"	d
DIO13_DDR	src/fastio.h	202;"	d
DIO13_DDR	src/fastio.h	541;"	d
DIO13_PIN	src/fastio.h	1046;"	d
DIO13_PIN	src/fastio.h	199;"	d
DIO13_PIN	src/fastio.h	2022;"	d
DIO13_PIN	src/fastio.h	538;"	d
DIO13_PWM	src/fastio.h	1050;"	d
DIO13_PWM	src/fastio.h	2025;"	d
DIO13_PWM	src/fastio.h	203;"	d
DIO13_PWM	src/fastio.h	542;"	d
DIO13_RPORT	src/fastio.h	1047;"	d
DIO13_RPORT	src/fastio.h	200;"	d
DIO13_RPORT	src/fastio.h	2023;"	d
DIO13_RPORT	src/fastio.h	539;"	d
DIO13_WPORT	src/fastio.h	1048;"	d
DIO13_WPORT	src/fastio.h	201;"	d
DIO13_WPORT	src/fastio.h	2024;"	d
DIO13_WPORT	src/fastio.h	540;"	d
DIO14_DDR	src/fastio.h	1055;"	d
DIO14_DDR	src/fastio.h	2032;"	d
DIO14_DDR	src/fastio.h	209;"	d
DIO14_DDR	src/fastio.h	547;"	d
DIO14_PIN	src/fastio.h	1052;"	d
DIO14_PIN	src/fastio.h	2028;"	d
DIO14_PIN	src/fastio.h	206;"	d
DIO14_PIN	src/fastio.h	544;"	d
DIO14_PWM	src/fastio.h	1056;"	d
DIO14_PWM	src/fastio.h	2031;"	d
DIO14_PWM	src/fastio.h	210;"	d
DIO14_PWM	src/fastio.h	548;"	d
DIO14_RPORT	src/fastio.h	1053;"	d
DIO14_RPORT	src/fastio.h	2029;"	d
DIO14_RPORT	src/fastio.h	207;"	d
DIO14_RPORT	src/fastio.h	545;"	d
DIO14_WPORT	src/fastio.h	1054;"	d
DIO14_WPORT	src/fastio.h	2030;"	d
DIO14_WPORT	src/fastio.h	208;"	d
DIO14_WPORT	src/fastio.h	546;"	d
DIO15_DDR	src/fastio.h	1061;"	d
DIO15_DDR	src/fastio.h	2038;"	d
DIO15_DDR	src/fastio.h	215;"	d
DIO15_DDR	src/fastio.h	553;"	d
DIO15_PIN	src/fastio.h	1058;"	d
DIO15_PIN	src/fastio.h	2034;"	d
DIO15_PIN	src/fastio.h	212;"	d
DIO15_PIN	src/fastio.h	550;"	d
DIO15_PWM	src/fastio.h	1062;"	d
DIO15_PWM	src/fastio.h	2037;"	d
DIO15_PWM	src/fastio.h	216;"	d
DIO15_PWM	src/fastio.h	554;"	d
DIO15_RPORT	src/fastio.h	1059;"	d
DIO15_RPORT	src/fastio.h	2035;"	d
DIO15_RPORT	src/fastio.h	213;"	d
DIO15_RPORT	src/fastio.h	551;"	d
DIO15_WPORT	src/fastio.h	1060;"	d
DIO15_WPORT	src/fastio.h	2036;"	d
DIO15_WPORT	src/fastio.h	214;"	d
DIO15_WPORT	src/fastio.h	552;"	d
DIO16_DDR	src/fastio.h	1067;"	d
DIO16_DDR	src/fastio.h	2044;"	d
DIO16_DDR	src/fastio.h	221;"	d
DIO16_DDR	src/fastio.h	559;"	d
DIO16_PIN	src/fastio.h	1064;"	d
DIO16_PIN	src/fastio.h	2040;"	d
DIO16_PIN	src/fastio.h	218;"	d
DIO16_PIN	src/fastio.h	556;"	d
DIO16_PWM	src/fastio.h	1068;"	d
DIO16_PWM	src/fastio.h	2043;"	d
DIO16_PWM	src/fastio.h	222;"	d
DIO16_PWM	src/fastio.h	560;"	d
DIO16_RPORT	src/fastio.h	1065;"	d
DIO16_RPORT	src/fastio.h	2041;"	d
DIO16_RPORT	src/fastio.h	219;"	d
DIO16_RPORT	src/fastio.h	557;"	d
DIO16_WPORT	src/fastio.h	1066;"	d
DIO16_WPORT	src/fastio.h	2042;"	d
DIO16_WPORT	src/fastio.h	220;"	d
DIO16_WPORT	src/fastio.h	558;"	d
DIO17_DDR	src/fastio.h	1073;"	d
DIO17_DDR	src/fastio.h	2050;"	d
DIO17_DDR	src/fastio.h	227;"	d
DIO17_DDR	src/fastio.h	565;"	d
DIO17_PIN	src/fastio.h	1070;"	d
DIO17_PIN	src/fastio.h	2046;"	d
DIO17_PIN	src/fastio.h	224;"	d
DIO17_PIN	src/fastio.h	562;"	d
DIO17_PWM	src/fastio.h	1074;"	d
DIO17_PWM	src/fastio.h	2049;"	d
DIO17_PWM	src/fastio.h	228;"	d
DIO17_PWM	src/fastio.h	566;"	d
DIO17_RPORT	src/fastio.h	1071;"	d
DIO17_RPORT	src/fastio.h	2047;"	d
DIO17_RPORT	src/fastio.h	225;"	d
DIO17_RPORT	src/fastio.h	563;"	d
DIO17_WPORT	src/fastio.h	1072;"	d
DIO17_WPORT	src/fastio.h	2048;"	d
DIO17_WPORT	src/fastio.h	226;"	d
DIO17_WPORT	src/fastio.h	564;"	d
DIO18_DDR	src/fastio.h	1079;"	d
DIO18_DDR	src/fastio.h	2056;"	d
DIO18_DDR	src/fastio.h	233;"	d
DIO18_DDR	src/fastio.h	571;"	d
DIO18_PIN	src/fastio.h	1076;"	d
DIO18_PIN	src/fastio.h	2052;"	d
DIO18_PIN	src/fastio.h	230;"	d
DIO18_PIN	src/fastio.h	568;"	d
DIO18_PWM	src/fastio.h	1080;"	d
DIO18_PWM	src/fastio.h	2055;"	d
DIO18_PWM	src/fastio.h	234;"	d
DIO18_PWM	src/fastio.h	572;"	d
DIO18_RPORT	src/fastio.h	1077;"	d
DIO18_RPORT	src/fastio.h	2053;"	d
DIO18_RPORT	src/fastio.h	231;"	d
DIO18_RPORT	src/fastio.h	569;"	d
DIO18_WPORT	src/fastio.h	1078;"	d
DIO18_WPORT	src/fastio.h	2054;"	d
DIO18_WPORT	src/fastio.h	232;"	d
DIO18_WPORT	src/fastio.h	570;"	d
DIO19_DDR	src/fastio.h	1085;"	d
DIO19_DDR	src/fastio.h	2062;"	d
DIO19_DDR	src/fastio.h	239;"	d
DIO19_DDR	src/fastio.h	577;"	d
DIO19_PIN	src/fastio.h	1082;"	d
DIO19_PIN	src/fastio.h	2058;"	d
DIO19_PIN	src/fastio.h	236;"	d
DIO19_PIN	src/fastio.h	574;"	d
DIO19_PWM	src/fastio.h	1086;"	d
DIO19_PWM	src/fastio.h	2061;"	d
DIO19_PWM	src/fastio.h	240;"	d
DIO19_PWM	src/fastio.h	578;"	d
DIO19_RPORT	src/fastio.h	1083;"	d
DIO19_RPORT	src/fastio.h	2059;"	d
DIO19_RPORT	src/fastio.h	237;"	d
DIO19_RPORT	src/fastio.h	575;"	d
DIO19_WPORT	src/fastio.h	1084;"	d
DIO19_WPORT	src/fastio.h	2060;"	d
DIO19_WPORT	src/fastio.h	238;"	d
DIO19_WPORT	src/fastio.h	576;"	d
DIO1_DDR	src/fastio.h	130;"	d
DIO1_DDR	src/fastio.h	1954;"	d
DIO1_DDR	src/fastio.h	469;"	d
DIO1_DDR	src/fastio.h	977;"	d
DIO1_PIN	src/fastio.h	127;"	d
DIO1_PIN	src/fastio.h	1950;"	d
DIO1_PIN	src/fastio.h	466;"	d
DIO1_PIN	src/fastio.h	974;"	d
DIO1_PWM	src/fastio.h	131;"	d
DIO1_PWM	src/fastio.h	1953;"	d
DIO1_PWM	src/fastio.h	470;"	d
DIO1_PWM	src/fastio.h	978;"	d
DIO1_RPORT	src/fastio.h	128;"	d
DIO1_RPORT	src/fastio.h	1951;"	d
DIO1_RPORT	src/fastio.h	467;"	d
DIO1_RPORT	src/fastio.h	975;"	d
DIO1_WPORT	src/fastio.h	129;"	d
DIO1_WPORT	src/fastio.h	1952;"	d
DIO1_WPORT	src/fastio.h	468;"	d
DIO1_WPORT	src/fastio.h	976;"	d
DIO20_DDR	src/fastio.h	1091;"	d
DIO20_DDR	src/fastio.h	2068;"	d
DIO20_DDR	src/fastio.h	245;"	d
DIO20_DDR	src/fastio.h	583;"	d
DIO20_PIN	src/fastio.h	1088;"	d
DIO20_PIN	src/fastio.h	2064;"	d
DIO20_PIN	src/fastio.h	242;"	d
DIO20_PIN	src/fastio.h	580;"	d
DIO20_PWM	src/fastio.h	1092;"	d
DIO20_PWM	src/fastio.h	2067;"	d
DIO20_PWM	src/fastio.h	246;"	d
DIO20_PWM	src/fastio.h	584;"	d
DIO20_RPORT	src/fastio.h	1089;"	d
DIO20_RPORT	src/fastio.h	2065;"	d
DIO20_RPORT	src/fastio.h	243;"	d
DIO20_RPORT	src/fastio.h	581;"	d
DIO20_WPORT	src/fastio.h	1090;"	d
DIO20_WPORT	src/fastio.h	2066;"	d
DIO20_WPORT	src/fastio.h	244;"	d
DIO20_WPORT	src/fastio.h	582;"	d
DIO21_DDR	src/fastio.h	1097;"	d
DIO21_DDR	src/fastio.h	2074;"	d
DIO21_DDR	src/fastio.h	251;"	d
DIO21_DDR	src/fastio.h	589;"	d
DIO21_PIN	src/fastio.h	1094;"	d
DIO21_PIN	src/fastio.h	2070;"	d
DIO21_PIN	src/fastio.h	248;"	d
DIO21_PIN	src/fastio.h	586;"	d
DIO21_PWM	src/fastio.h	1098;"	d
DIO21_PWM	src/fastio.h	2073;"	d
DIO21_PWM	src/fastio.h	252;"	d
DIO21_PWM	src/fastio.h	590;"	d
DIO21_RPORT	src/fastio.h	1095;"	d
DIO21_RPORT	src/fastio.h	2071;"	d
DIO21_RPORT	src/fastio.h	249;"	d
DIO21_RPORT	src/fastio.h	587;"	d
DIO21_WPORT	src/fastio.h	1096;"	d
DIO21_WPORT	src/fastio.h	2072;"	d
DIO21_WPORT	src/fastio.h	250;"	d
DIO21_WPORT	src/fastio.h	588;"	d
DIO22_DDR	src/fastio.h	1103;"	d
DIO22_DDR	src/fastio.h	2080;"	d
DIO22_DDR	src/fastio.h	595;"	d
DIO22_PIN	src/fastio.h	1100;"	d
DIO22_PIN	src/fastio.h	2076;"	d
DIO22_PIN	src/fastio.h	592;"	d
DIO22_PWM	src/fastio.h	1104;"	d
DIO22_PWM	src/fastio.h	2079;"	d
DIO22_PWM	src/fastio.h	596;"	d
DIO22_RPORT	src/fastio.h	1101;"	d
DIO22_RPORT	src/fastio.h	2077;"	d
DIO22_RPORT	src/fastio.h	593;"	d
DIO22_WPORT	src/fastio.h	1102;"	d
DIO22_WPORT	src/fastio.h	2078;"	d
DIO22_WPORT	src/fastio.h	594;"	d
DIO23_DDR	src/fastio.h	1109;"	d
DIO23_DDR	src/fastio.h	2086;"	d
DIO23_DDR	src/fastio.h	601;"	d
DIO23_PIN	src/fastio.h	1106;"	d
DIO23_PIN	src/fastio.h	2082;"	d
DIO23_PIN	src/fastio.h	598;"	d
DIO23_PWM	src/fastio.h	1110;"	d
DIO23_PWM	src/fastio.h	2085;"	d
DIO23_PWM	src/fastio.h	602;"	d
DIO23_RPORT	src/fastio.h	1107;"	d
DIO23_RPORT	src/fastio.h	2083;"	d
DIO23_RPORT	src/fastio.h	599;"	d
DIO23_WPORT	src/fastio.h	1108;"	d
DIO23_WPORT	src/fastio.h	2084;"	d
DIO23_WPORT	src/fastio.h	600;"	d
DIO24_DDR	src/fastio.h	1115;"	d
DIO24_DDR	src/fastio.h	2092;"	d
DIO24_DDR	src/fastio.h	607;"	d
DIO24_PIN	src/fastio.h	1112;"	d
DIO24_PIN	src/fastio.h	2088;"	d
DIO24_PIN	src/fastio.h	604;"	d
DIO24_PWM	src/fastio.h	1116;"	d
DIO24_PWM	src/fastio.h	2091;"	d
DIO24_PWM	src/fastio.h	608;"	d
DIO24_RPORT	src/fastio.h	1113;"	d
DIO24_RPORT	src/fastio.h	2089;"	d
DIO24_RPORT	src/fastio.h	605;"	d
DIO24_WPORT	src/fastio.h	1114;"	d
DIO24_WPORT	src/fastio.h	2090;"	d
DIO24_WPORT	src/fastio.h	606;"	d
DIO25_DDR	src/fastio.h	1121;"	d
DIO25_DDR	src/fastio.h	2098;"	d
DIO25_DDR	src/fastio.h	613;"	d
DIO25_PIN	src/fastio.h	1118;"	d
DIO25_PIN	src/fastio.h	2094;"	d
DIO25_PIN	src/fastio.h	610;"	d
DIO25_PWM	src/fastio.h	1122;"	d
DIO25_PWM	src/fastio.h	2097;"	d
DIO25_PWM	src/fastio.h	614;"	d
DIO25_RPORT	src/fastio.h	1119;"	d
DIO25_RPORT	src/fastio.h	2095;"	d
DIO25_RPORT	src/fastio.h	611;"	d
DIO25_WPORT	src/fastio.h	1120;"	d
DIO25_WPORT	src/fastio.h	2096;"	d
DIO25_WPORT	src/fastio.h	612;"	d
DIO26_DDR	src/fastio.h	1127;"	d
DIO26_DDR	src/fastio.h	2104;"	d
DIO26_DDR	src/fastio.h	619;"	d
DIO26_PIN	src/fastio.h	1124;"	d
DIO26_PIN	src/fastio.h	2100;"	d
DIO26_PIN	src/fastio.h	616;"	d
DIO26_PWM	src/fastio.h	1128;"	d
DIO26_PWM	src/fastio.h	2103;"	d
DIO26_PWM	src/fastio.h	620;"	d
DIO26_RPORT	src/fastio.h	1125;"	d
DIO26_RPORT	src/fastio.h	2101;"	d
DIO26_RPORT	src/fastio.h	617;"	d
DIO26_WPORT	src/fastio.h	1126;"	d
DIO26_WPORT	src/fastio.h	2102;"	d
DIO26_WPORT	src/fastio.h	618;"	d
DIO27_DDR	src/fastio.h	1133;"	d
DIO27_DDR	src/fastio.h	2110;"	d
DIO27_DDR	src/fastio.h	625;"	d
DIO27_PIN	src/fastio.h	1130;"	d
DIO27_PIN	src/fastio.h	2106;"	d
DIO27_PIN	src/fastio.h	622;"	d
DIO27_PWM	src/fastio.h	1134;"	d
DIO27_PWM	src/fastio.h	2109;"	d
DIO27_PWM	src/fastio.h	626;"	d
DIO27_RPORT	src/fastio.h	1131;"	d
DIO27_RPORT	src/fastio.h	2107;"	d
DIO27_RPORT	src/fastio.h	623;"	d
DIO27_WPORT	src/fastio.h	1132;"	d
DIO27_WPORT	src/fastio.h	2108;"	d
DIO27_WPORT	src/fastio.h	624;"	d
DIO28_DDR	src/fastio.h	1139;"	d
DIO28_DDR	src/fastio.h	2116;"	d
DIO28_DDR	src/fastio.h	631;"	d
DIO28_PIN	src/fastio.h	1136;"	d
DIO28_PIN	src/fastio.h	2112;"	d
DIO28_PIN	src/fastio.h	628;"	d
DIO28_PWM	src/fastio.h	1140;"	d
DIO28_PWM	src/fastio.h	2115;"	d
DIO28_PWM	src/fastio.h	632;"	d
DIO28_RPORT	src/fastio.h	1137;"	d
DIO28_RPORT	src/fastio.h	2113;"	d
DIO28_RPORT	src/fastio.h	629;"	d
DIO28_WPORT	src/fastio.h	1138;"	d
DIO28_WPORT	src/fastio.h	2114;"	d
DIO28_WPORT	src/fastio.h	630;"	d
DIO29_DDR	src/fastio.h	1145;"	d
DIO29_DDR	src/fastio.h	2122;"	d
DIO29_DDR	src/fastio.h	637;"	d
DIO29_PIN	src/fastio.h	1142;"	d
DIO29_PIN	src/fastio.h	2118;"	d
DIO29_PIN	src/fastio.h	634;"	d
DIO29_PWM	src/fastio.h	1146;"	d
DIO29_PWM	src/fastio.h	2121;"	d
DIO29_PWM	src/fastio.h	638;"	d
DIO29_RPORT	src/fastio.h	1143;"	d
DIO29_RPORT	src/fastio.h	2119;"	d
DIO29_RPORT	src/fastio.h	635;"	d
DIO29_WPORT	src/fastio.h	1144;"	d
DIO29_WPORT	src/fastio.h	2120;"	d
DIO29_WPORT	src/fastio.h	636;"	d
DIO2_DDR	src/fastio.h	136;"	d
DIO2_DDR	src/fastio.h	1960;"	d
DIO2_DDR	src/fastio.h	475;"	d
DIO2_DDR	src/fastio.h	983;"	d
DIO2_PIN	src/fastio.h	133;"	d
DIO2_PIN	src/fastio.h	1956;"	d
DIO2_PIN	src/fastio.h	472;"	d
DIO2_PIN	src/fastio.h	980;"	d
DIO2_PWM	src/fastio.h	137;"	d
DIO2_PWM	src/fastio.h	1959;"	d
DIO2_PWM	src/fastio.h	476;"	d
DIO2_PWM	src/fastio.h	984;"	d
DIO2_RPORT	src/fastio.h	134;"	d
DIO2_RPORT	src/fastio.h	1957;"	d
DIO2_RPORT	src/fastio.h	473;"	d
DIO2_RPORT	src/fastio.h	981;"	d
DIO2_WPORT	src/fastio.h	135;"	d
DIO2_WPORT	src/fastio.h	1958;"	d
DIO2_WPORT	src/fastio.h	474;"	d
DIO2_WPORT	src/fastio.h	982;"	d
DIO30_DDR	src/fastio.h	1151;"	d
DIO30_DDR	src/fastio.h	2128;"	d
DIO30_DDR	src/fastio.h	643;"	d
DIO30_PIN	src/fastio.h	1148;"	d
DIO30_PIN	src/fastio.h	2124;"	d
DIO30_PIN	src/fastio.h	640;"	d
DIO30_PWM	src/fastio.h	1152;"	d
DIO30_PWM	src/fastio.h	2127;"	d
DIO30_PWM	src/fastio.h	644;"	d
DIO30_RPORT	src/fastio.h	1149;"	d
DIO30_RPORT	src/fastio.h	2125;"	d
DIO30_RPORT	src/fastio.h	641;"	d
DIO30_WPORT	src/fastio.h	1150;"	d
DIO30_WPORT	src/fastio.h	2126;"	d
DIO30_WPORT	src/fastio.h	642;"	d
DIO31_DDR	src/fastio.h	1157;"	d
DIO31_DDR	src/fastio.h	2134;"	d
DIO31_DDR	src/fastio.h	649;"	d
DIO31_PIN	src/fastio.h	1154;"	d
DIO31_PIN	src/fastio.h	2130;"	d
DIO31_PIN	src/fastio.h	646;"	d
DIO31_PWM	src/fastio.h	1158;"	d
DIO31_PWM	src/fastio.h	2133;"	d
DIO31_PWM	src/fastio.h	650;"	d
DIO31_RPORT	src/fastio.h	1155;"	d
DIO31_RPORT	src/fastio.h	2131;"	d
DIO31_RPORT	src/fastio.h	647;"	d
DIO31_WPORT	src/fastio.h	1156;"	d
DIO31_WPORT	src/fastio.h	2132;"	d
DIO31_WPORT	src/fastio.h	648;"	d
DIO32_DDR	src/fastio.h	1163;"	d
DIO32_DDR	src/fastio.h	2141;"	d
DIO32_PIN	src/fastio.h	1160;"	d
DIO32_PIN	src/fastio.h	2137;"	d
DIO32_PWM	src/fastio.h	1164;"	d
DIO32_PWM	src/fastio.h	2140;"	d
DIO32_RPORT	src/fastio.h	1161;"	d
DIO32_RPORT	src/fastio.h	2138;"	d
DIO32_WPORT	src/fastio.h	1162;"	d
DIO32_WPORT	src/fastio.h	2139;"	d
DIO33_DDR	src/fastio.h	1169;"	d
DIO33_DDR	src/fastio.h	2147;"	d
DIO33_PIN	src/fastio.h	1166;"	d
DIO33_PIN	src/fastio.h	2143;"	d
DIO33_PWM	src/fastio.h	1170;"	d
DIO33_PWM	src/fastio.h	2146;"	d
DIO33_RPORT	src/fastio.h	1167;"	d
DIO33_RPORT	src/fastio.h	2144;"	d
DIO33_WPORT	src/fastio.h	1168;"	d
DIO33_WPORT	src/fastio.h	2145;"	d
DIO34_DDR	src/fastio.h	1175;"	d
DIO34_DDR	src/fastio.h	2153;"	d
DIO34_PIN	src/fastio.h	1172;"	d
DIO34_PIN	src/fastio.h	2149;"	d
DIO34_PWM	src/fastio.h	1176;"	d
DIO34_PWM	src/fastio.h	2152;"	d
DIO34_RPORT	src/fastio.h	1173;"	d
DIO34_RPORT	src/fastio.h	2150;"	d
DIO34_WPORT	src/fastio.h	1174;"	d
DIO34_WPORT	src/fastio.h	2151;"	d
DIO35_DDR	src/fastio.h	1181;"	d
DIO35_DDR	src/fastio.h	2159;"	d
DIO35_PIN	src/fastio.h	1178;"	d
DIO35_PIN	src/fastio.h	2155;"	d
DIO35_PWM	src/fastio.h	1182;"	d
DIO35_PWM	src/fastio.h	2158;"	d
DIO35_RPORT	src/fastio.h	1179;"	d
DIO35_RPORT	src/fastio.h	2156;"	d
DIO35_WPORT	src/fastio.h	1180;"	d
DIO35_WPORT	src/fastio.h	2157;"	d
DIO36_DDR	src/fastio.h	1187;"	d
DIO36_DDR	src/fastio.h	2165;"	d
DIO36_PIN	src/fastio.h	1184;"	d
DIO36_PIN	src/fastio.h	2161;"	d
DIO36_PWM	src/fastio.h	1188;"	d
DIO36_PWM	src/fastio.h	2164;"	d
DIO36_RPORT	src/fastio.h	1185;"	d
DIO36_RPORT	src/fastio.h	2162;"	d
DIO36_WPORT	src/fastio.h	1186;"	d
DIO36_WPORT	src/fastio.h	2163;"	d
DIO37_DDR	src/fastio.h	1193;"	d
DIO37_DDR	src/fastio.h	2171;"	d
DIO37_PIN	src/fastio.h	1190;"	d
DIO37_PIN	src/fastio.h	2167;"	d
DIO37_PWM	src/fastio.h	1194;"	d
DIO37_PWM	src/fastio.h	2170;"	d
DIO37_RPORT	src/fastio.h	1191;"	d
DIO37_RPORT	src/fastio.h	2168;"	d
DIO37_WPORT	src/fastio.h	1192;"	d
DIO37_WPORT	src/fastio.h	2169;"	d
DIO38_DDR	src/fastio.h	1199;"	d
DIO38_DDR	src/fastio.h	2177;"	d
DIO38_PIN	src/fastio.h	1196;"	d
DIO38_PIN	src/fastio.h	2173;"	d
DIO38_PWM	src/fastio.h	1200;"	d
DIO38_PWM	src/fastio.h	2176;"	d
DIO38_RPORT	src/fastio.h	1197;"	d
DIO38_RPORT	src/fastio.h	2174;"	d
DIO38_WPORT	src/fastio.h	1198;"	d
DIO38_WPORT	src/fastio.h	2175;"	d
DIO39_DDR	src/fastio.h	1205;"	d
DIO39_DDR	src/fastio.h	2183;"	d
DIO39_PIN	src/fastio.h	1202;"	d
DIO39_PIN	src/fastio.h	2179;"	d
DIO39_PWM	src/fastio.h	1206;"	d
DIO39_PWM	src/fastio.h	2182;"	d
DIO39_RPORT	src/fastio.h	1203;"	d
DIO39_RPORT	src/fastio.h	2180;"	d
DIO39_WPORT	src/fastio.h	1204;"	d
DIO39_WPORT	src/fastio.h	2181;"	d
DIO3_DDR	src/fastio.h	142;"	d
DIO3_DDR	src/fastio.h	1966;"	d
DIO3_DDR	src/fastio.h	481;"	d
DIO3_DDR	src/fastio.h	989;"	d
DIO3_PIN	src/fastio.h	139;"	d
DIO3_PIN	src/fastio.h	1962;"	d
DIO3_PIN	src/fastio.h	478;"	d
DIO3_PIN	src/fastio.h	986;"	d
DIO3_PWM	src/fastio.h	143;"	d
DIO3_PWM	src/fastio.h	1965;"	d
DIO3_PWM	src/fastio.h	482;"	d
DIO3_PWM	src/fastio.h	990;"	d
DIO3_RPORT	src/fastio.h	140;"	d
DIO3_RPORT	src/fastio.h	1963;"	d
DIO3_RPORT	src/fastio.h	479;"	d
DIO3_RPORT	src/fastio.h	987;"	d
DIO3_WPORT	src/fastio.h	141;"	d
DIO3_WPORT	src/fastio.h	1964;"	d
DIO3_WPORT	src/fastio.h	480;"	d
DIO3_WPORT	src/fastio.h	988;"	d
DIO40_DDR	src/fastio.h	1211;"	d
DIO40_DDR	src/fastio.h	2237;"	d
DIO40_PIN	src/fastio.h	1208;"	d
DIO40_PIN	src/fastio.h	2233;"	d
DIO40_PWM	src/fastio.h	1212;"	d
DIO40_PWM	src/fastio.h	2236;"	d
DIO40_RPORT	src/fastio.h	1209;"	d
DIO40_RPORT	src/fastio.h	2234;"	d
DIO40_WPORT	src/fastio.h	1210;"	d
DIO40_WPORT	src/fastio.h	2235;"	d
DIO41_DDR	src/fastio.h	1217;"	d
DIO41_DDR	src/fastio.h	2243;"	d
DIO41_PIN	src/fastio.h	1214;"	d
DIO41_PIN	src/fastio.h	2239;"	d
DIO41_PWM	src/fastio.h	1218;"	d
DIO41_PWM	src/fastio.h	2242;"	d
DIO41_RPORT	src/fastio.h	1215;"	d
DIO41_RPORT	src/fastio.h	2240;"	d
DIO41_WPORT	src/fastio.h	1216;"	d
DIO41_WPORT	src/fastio.h	2241;"	d
DIO42_DDR	src/fastio.h	1223;"	d
DIO42_DDR	src/fastio.h	2249;"	d
DIO42_PIN	src/fastio.h	1220;"	d
DIO42_PIN	src/fastio.h	2245;"	d
DIO42_PWM	src/fastio.h	1224;"	d
DIO42_PWM	src/fastio.h	2248;"	d
DIO42_RPORT	src/fastio.h	1221;"	d
DIO42_RPORT	src/fastio.h	2246;"	d
DIO42_WPORT	src/fastio.h	1222;"	d
DIO42_WPORT	src/fastio.h	2247;"	d
DIO43_DDR	src/fastio.h	1229;"	d
DIO43_DDR	src/fastio.h	2255;"	d
DIO43_PIN	src/fastio.h	1226;"	d
DIO43_PIN	src/fastio.h	2251;"	d
DIO43_PWM	src/fastio.h	1230;"	d
DIO43_PWM	src/fastio.h	2254;"	d
DIO43_RPORT	src/fastio.h	1227;"	d
DIO43_RPORT	src/fastio.h	2252;"	d
DIO43_WPORT	src/fastio.h	1228;"	d
DIO43_WPORT	src/fastio.h	2253;"	d
DIO44_DDR	src/fastio.h	1235;"	d
DIO44_DDR	src/fastio.h	2261;"	d
DIO44_PIN	src/fastio.h	1232;"	d
DIO44_PIN	src/fastio.h	2257;"	d
DIO44_PWM	src/fastio.h	1236;"	d
DIO44_PWM	src/fastio.h	2260;"	d
DIO44_RPORT	src/fastio.h	1233;"	d
DIO44_RPORT	src/fastio.h	2258;"	d
DIO44_WPORT	src/fastio.h	1234;"	d
DIO44_WPORT	src/fastio.h	2259;"	d
DIO45_DDR	src/fastio.h	1241;"	d
DIO45_DDR	src/fastio.h	2267;"	d
DIO45_PIN	src/fastio.h	1238;"	d
DIO45_PIN	src/fastio.h	2263;"	d
DIO45_PWM	src/fastio.h	1242;"	d
DIO45_PWM	src/fastio.h	2266;"	d
DIO45_RPORT	src/fastio.h	1239;"	d
DIO45_RPORT	src/fastio.h	2264;"	d
DIO45_WPORT	src/fastio.h	1240;"	d
DIO45_WPORT	src/fastio.h	2265;"	d
DIO46_DDR	src/fastio.h	1247;"	d
DIO46_DDR	src/fastio.h	2273;"	d
DIO46_PIN	src/fastio.h	1244;"	d
DIO46_PIN	src/fastio.h	2269;"	d
DIO46_PWM	src/fastio.h	1248;"	d
DIO46_PWM	src/fastio.h	2272;"	d
DIO46_RPORT	src/fastio.h	1245;"	d
DIO46_RPORT	src/fastio.h	2270;"	d
DIO46_WPORT	src/fastio.h	1246;"	d
DIO46_WPORT	src/fastio.h	2271;"	d
DIO47_DDR	src/fastio.h	1253;"	d
DIO47_DDR	src/fastio.h	2279;"	d
DIO47_PIN	src/fastio.h	1250;"	d
DIO47_PIN	src/fastio.h	2275;"	d
DIO47_PWM	src/fastio.h	1254;"	d
DIO47_PWM	src/fastio.h	2278;"	d
DIO47_RPORT	src/fastio.h	1251;"	d
DIO47_RPORT	src/fastio.h	2276;"	d
DIO47_WPORT	src/fastio.h	1252;"	d
DIO47_WPORT	src/fastio.h	2277;"	d
DIO48_DDR	src/fastio.h	1259;"	d
DIO48_PIN	src/fastio.h	1256;"	d
DIO48_PWM	src/fastio.h	1260;"	d
DIO48_RPORT	src/fastio.h	1257;"	d
DIO48_WPORT	src/fastio.h	1258;"	d
DIO49_DDR	src/fastio.h	1265;"	d
DIO49_PIN	src/fastio.h	1262;"	d
DIO49_PWM	src/fastio.h	1266;"	d
DIO49_RPORT	src/fastio.h	1263;"	d
DIO49_WPORT	src/fastio.h	1264;"	d
DIO4_DDR	src/fastio.h	148;"	d
DIO4_DDR	src/fastio.h	1972;"	d
DIO4_DDR	src/fastio.h	487;"	d
DIO4_DDR	src/fastio.h	995;"	d
DIO4_PIN	src/fastio.h	145;"	d
DIO4_PIN	src/fastio.h	1968;"	d
DIO4_PIN	src/fastio.h	484;"	d
DIO4_PIN	src/fastio.h	992;"	d
DIO4_PWM	src/fastio.h	149;"	d
DIO4_PWM	src/fastio.h	1971;"	d
DIO4_PWM	src/fastio.h	488;"	d
DIO4_PWM	src/fastio.h	996;"	d
DIO4_RPORT	src/fastio.h	146;"	d
DIO4_RPORT	src/fastio.h	1969;"	d
DIO4_RPORT	src/fastio.h	485;"	d
DIO4_RPORT	src/fastio.h	993;"	d
DIO4_WPORT	src/fastio.h	147;"	d
DIO4_WPORT	src/fastio.h	1970;"	d
DIO4_WPORT	src/fastio.h	486;"	d
DIO4_WPORT	src/fastio.h	994;"	d
DIO50_DDR	src/fastio.h	1271;"	d
DIO50_PIN	src/fastio.h	1268;"	d
DIO50_PWM	src/fastio.h	1272;"	d
DIO50_RPORT	src/fastio.h	1269;"	d
DIO50_WPORT	src/fastio.h	1270;"	d
DIO51_DDR	src/fastio.h	1277;"	d
DIO51_PIN	src/fastio.h	1274;"	d
DIO51_PWM	src/fastio.h	1278;"	d
DIO51_RPORT	src/fastio.h	1275;"	d
DIO51_WPORT	src/fastio.h	1276;"	d
DIO52_DDR	src/fastio.h	1283;"	d
DIO52_PIN	src/fastio.h	1280;"	d
DIO52_PWM	src/fastio.h	1284;"	d
DIO52_RPORT	src/fastio.h	1281;"	d
DIO52_WPORT	src/fastio.h	1282;"	d
DIO53_DDR	src/fastio.h	1289;"	d
DIO53_PIN	src/fastio.h	1286;"	d
DIO53_PWM	src/fastio.h	1290;"	d
DIO53_RPORT	src/fastio.h	1287;"	d
DIO53_WPORT	src/fastio.h	1288;"	d
DIO54_DDR	src/fastio.h	1295;"	d
DIO54_PIN	src/fastio.h	1292;"	d
DIO54_PWM	src/fastio.h	1296;"	d
DIO54_RPORT	src/fastio.h	1293;"	d
DIO54_WPORT	src/fastio.h	1294;"	d
DIO55_DDR	src/fastio.h	1301;"	d
DIO55_PIN	src/fastio.h	1298;"	d
DIO55_PWM	src/fastio.h	1302;"	d
DIO55_RPORT	src/fastio.h	1299;"	d
DIO55_WPORT	src/fastio.h	1300;"	d
DIO56_DDR	src/fastio.h	1307;"	d
DIO56_PIN	src/fastio.h	1304;"	d
DIO56_PWM	src/fastio.h	1308;"	d
DIO56_RPORT	src/fastio.h	1305;"	d
DIO56_WPORT	src/fastio.h	1306;"	d
DIO57_DDR	src/fastio.h	1313;"	d
DIO57_PIN	src/fastio.h	1310;"	d
DIO57_PWM	src/fastio.h	1314;"	d
DIO57_RPORT	src/fastio.h	1311;"	d
DIO57_WPORT	src/fastio.h	1312;"	d
DIO58_DDR	src/fastio.h	1319;"	d
DIO58_PIN	src/fastio.h	1316;"	d
DIO58_PWM	src/fastio.h	1320;"	d
DIO58_RPORT	src/fastio.h	1317;"	d
DIO58_WPORT	src/fastio.h	1318;"	d
DIO59_DDR	src/fastio.h	1325;"	d
DIO59_PIN	src/fastio.h	1322;"	d
DIO59_PWM	src/fastio.h	1326;"	d
DIO59_RPORT	src/fastio.h	1323;"	d
DIO59_WPORT	src/fastio.h	1324;"	d
DIO5_DDR	src/fastio.h	1001;"	d
DIO5_DDR	src/fastio.h	154;"	d
DIO5_DDR	src/fastio.h	1978;"	d
DIO5_DDR	src/fastio.h	493;"	d
DIO5_PIN	src/fastio.h	151;"	d
DIO5_PIN	src/fastio.h	1974;"	d
DIO5_PIN	src/fastio.h	490;"	d
DIO5_PIN	src/fastio.h	998;"	d
DIO5_PWM	src/fastio.h	1002;"	d
DIO5_PWM	src/fastio.h	155;"	d
DIO5_PWM	src/fastio.h	1977;"	d
DIO5_PWM	src/fastio.h	494;"	d
DIO5_RPORT	src/fastio.h	152;"	d
DIO5_RPORT	src/fastio.h	1975;"	d
DIO5_RPORT	src/fastio.h	491;"	d
DIO5_RPORT	src/fastio.h	999;"	d
DIO5_WPORT	src/fastio.h	1000;"	d
DIO5_WPORT	src/fastio.h	153;"	d
DIO5_WPORT	src/fastio.h	1976;"	d
DIO5_WPORT	src/fastio.h	492;"	d
DIO60_DDR	src/fastio.h	1331;"	d
DIO60_PIN	src/fastio.h	1328;"	d
DIO60_PWM	src/fastio.h	1332;"	d
DIO60_RPORT	src/fastio.h	1329;"	d
DIO60_WPORT	src/fastio.h	1330;"	d
DIO61_DDR	src/fastio.h	1337;"	d
DIO61_PIN	src/fastio.h	1334;"	d
DIO61_PWM	src/fastio.h	1338;"	d
DIO61_RPORT	src/fastio.h	1335;"	d
DIO61_WPORT	src/fastio.h	1336;"	d
DIO62_DDR	src/fastio.h	1343;"	d
DIO62_PIN	src/fastio.h	1340;"	d
DIO62_PWM	src/fastio.h	1344;"	d
DIO62_RPORT	src/fastio.h	1341;"	d
DIO62_WPORT	src/fastio.h	1342;"	d
DIO63_DDR	src/fastio.h	1349;"	d
DIO63_PIN	src/fastio.h	1346;"	d
DIO63_PWM	src/fastio.h	1350;"	d
DIO63_RPORT	src/fastio.h	1347;"	d
DIO63_WPORT	src/fastio.h	1348;"	d
DIO64_DDR	src/fastio.h	1355;"	d
DIO64_PIN	src/fastio.h	1352;"	d
DIO64_PWM	src/fastio.h	1356;"	d
DIO64_RPORT	src/fastio.h	1353;"	d
DIO64_WPORT	src/fastio.h	1354;"	d
DIO65_DDR	src/fastio.h	1361;"	d
DIO65_PIN	src/fastio.h	1358;"	d
DIO65_PWM	src/fastio.h	1362;"	d
DIO65_RPORT	src/fastio.h	1359;"	d
DIO65_WPORT	src/fastio.h	1360;"	d
DIO66_DDR	src/fastio.h	1367;"	d
DIO66_PIN	src/fastio.h	1364;"	d
DIO66_PWM	src/fastio.h	1368;"	d
DIO66_RPORT	src/fastio.h	1365;"	d
DIO66_WPORT	src/fastio.h	1366;"	d
DIO67_DDR	src/fastio.h	1373;"	d
DIO67_PIN	src/fastio.h	1370;"	d
DIO67_PWM	src/fastio.h	1374;"	d
DIO67_RPORT	src/fastio.h	1371;"	d
DIO67_WPORT	src/fastio.h	1372;"	d
DIO68_DDR	src/fastio.h	1379;"	d
DIO68_PIN	src/fastio.h	1376;"	d
DIO68_PWM	src/fastio.h	1380;"	d
DIO68_RPORT	src/fastio.h	1377;"	d
DIO68_WPORT	src/fastio.h	1378;"	d
DIO69_DDR	src/fastio.h	1385;"	d
DIO69_PIN	src/fastio.h	1382;"	d
DIO69_PWM	src/fastio.h	1386;"	d
DIO69_RPORT	src/fastio.h	1383;"	d
DIO69_WPORT	src/fastio.h	1384;"	d
DIO6_DDR	src/fastio.h	1007;"	d
DIO6_DDR	src/fastio.h	160;"	d
DIO6_DDR	src/fastio.h	1984;"	d
DIO6_DDR	src/fastio.h	499;"	d
DIO6_PIN	src/fastio.h	1004;"	d
DIO6_PIN	src/fastio.h	157;"	d
DIO6_PIN	src/fastio.h	1980;"	d
DIO6_PIN	src/fastio.h	496;"	d
DIO6_PWM	src/fastio.h	1008;"	d
DIO6_PWM	src/fastio.h	161;"	d
DIO6_PWM	src/fastio.h	1983;"	d
DIO6_PWM	src/fastio.h	500;"	d
DIO6_RPORT	src/fastio.h	1005;"	d
DIO6_RPORT	src/fastio.h	158;"	d
DIO6_RPORT	src/fastio.h	1981;"	d
DIO6_RPORT	src/fastio.h	497;"	d
DIO6_WPORT	src/fastio.h	1006;"	d
DIO6_WPORT	src/fastio.h	159;"	d
DIO6_WPORT	src/fastio.h	1982;"	d
DIO6_WPORT	src/fastio.h	498;"	d
DIO7_DDR	src/fastio.h	1013;"	d
DIO7_DDR	src/fastio.h	166;"	d
DIO7_DDR	src/fastio.h	1990;"	d
DIO7_DDR	src/fastio.h	505;"	d
DIO7_PIN	src/fastio.h	1010;"	d
DIO7_PIN	src/fastio.h	163;"	d
DIO7_PIN	src/fastio.h	1986;"	d
DIO7_PIN	src/fastio.h	502;"	d
DIO7_PWM	src/fastio.h	1014;"	d
DIO7_PWM	src/fastio.h	167;"	d
DIO7_PWM	src/fastio.h	1989;"	d
DIO7_PWM	src/fastio.h	506;"	d
DIO7_RPORT	src/fastio.h	1011;"	d
DIO7_RPORT	src/fastio.h	164;"	d
DIO7_RPORT	src/fastio.h	1987;"	d
DIO7_RPORT	src/fastio.h	503;"	d
DIO7_WPORT	src/fastio.h	1012;"	d
DIO7_WPORT	src/fastio.h	165;"	d
DIO7_WPORT	src/fastio.h	1988;"	d
DIO7_WPORT	src/fastio.h	504;"	d
DIO8_DDR	src/fastio.h	1019;"	d
DIO8_DDR	src/fastio.h	172;"	d
DIO8_DDR	src/fastio.h	1996;"	d
DIO8_DDR	src/fastio.h	511;"	d
DIO8_PIN	src/fastio.h	1016;"	d
DIO8_PIN	src/fastio.h	169;"	d
DIO8_PIN	src/fastio.h	1992;"	d
DIO8_PIN	src/fastio.h	508;"	d
DIO8_PWM	src/fastio.h	1020;"	d
DIO8_PWM	src/fastio.h	173;"	d
DIO8_PWM	src/fastio.h	1995;"	d
DIO8_PWM	src/fastio.h	512;"	d
DIO8_RPORT	src/fastio.h	1017;"	d
DIO8_RPORT	src/fastio.h	170;"	d
DIO8_RPORT	src/fastio.h	1993;"	d
DIO8_RPORT	src/fastio.h	509;"	d
DIO8_WPORT	src/fastio.h	1018;"	d
DIO8_WPORT	src/fastio.h	171;"	d
DIO8_WPORT	src/fastio.h	1994;"	d
DIO8_WPORT	src/fastio.h	510;"	d
DIO9_DDR	src/fastio.h	1025;"	d
DIO9_DDR	src/fastio.h	178;"	d
DIO9_DDR	src/fastio.h	2002;"	d
DIO9_DDR	src/fastio.h	517;"	d
DIO9_PIN	src/fastio.h	1022;"	d
DIO9_PIN	src/fastio.h	175;"	d
DIO9_PIN	src/fastio.h	1998;"	d
DIO9_PIN	src/fastio.h	514;"	d
DIO9_PWM	src/fastio.h	1026;"	d
DIO9_PWM	src/fastio.h	179;"	d
DIO9_PWM	src/fastio.h	2001;"	d
DIO9_PWM	src/fastio.h	518;"	d
DIO9_RPORT	src/fastio.h	1023;"	d
DIO9_RPORT	src/fastio.h	176;"	d
DIO9_RPORT	src/fastio.h	1999;"	d
DIO9_RPORT	src/fastio.h	515;"	d
DIO9_WPORT	src/fastio.h	1024;"	d
DIO9_WPORT	src/fastio.h	177;"	d
DIO9_WPORT	src/fastio.h	2000;"	d
DIO9_WPORT	src/fastio.h	516;"	d
DIR_ATT_ARCHIVE	src/SdFatStructs.h	/^uint8_t const DIR_ATT_ARCHIVE = 0X20;$/;"	v
DIR_ATT_DEFINED_BITS	src/SdFatStructs.h	/^uint8_t const DIR_ATT_DEFINED_BITS = 0X3F;$/;"	v
DIR_ATT_DIRECTORY	src/SdFatStructs.h	/^uint8_t const DIR_ATT_DIRECTORY = 0X10;$/;"	v
DIR_ATT_FILE_TYPE_MASK	src/SdFatStructs.h	/^uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);$/;"	v
DIR_ATT_HIDDEN	src/SdFatStructs.h	/^uint8_t const DIR_ATT_HIDDEN = 0X02;$/;"	v
DIR_ATT_LONG_NAME	src/SdFatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME = 0X0F;$/;"	v
DIR_ATT_LONG_NAME_MASK	src/SdFatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME_MASK = 0X3F;$/;"	v
DIR_ATT_READ_ONLY	src/SdFatStructs.h	/^uint8_t const DIR_ATT_READ_ONLY = 0X01;$/;"	v
DIR_ATT_SYSTEM	src/SdFatStructs.h	/^uint8_t const DIR_ATT_SYSTEM = 0X04;$/;"	v
DIR_ATT_VOLUME_ID	src/SdFatStructs.h	/^uint8_t const DIR_ATT_VOLUME_ID = 0X08;$/;"	v
DIR_IS_FILE	src/SdFatStructs.h	/^static inline uint8_t DIR_IS_FILE(const dir_t* dir) {$/;"	f
DIR_IS_FILE_OR_SUBDIR	src/SdFatStructs.h	/^static inline uint8_t DIR_IS_FILE_OR_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_LONG_NAME	src/SdFatStructs.h	/^static inline uint8_t DIR_IS_LONG_NAME(const dir_t* dir) {$/;"	f
DIR_IS_SUBDIR	src/SdFatStructs.h	/^static inline uint8_t DIR_IS_SUBDIR(const dir_t* dir) {$/;"	f
DIR_NAME_0XE5	src/SdFatStructs.h	/^uint8_t const DIR_NAME_0XE5 = 0X05;$/;"	v
DIR_NAME_DELETED	src/SdFatStructs.h	/^uint8_t const DIR_NAME_DELETED = 0XE5;$/;"	v
DIR_NAME_FREE	src/SdFatStructs.h	/^uint8_t const DIR_NAME_FREE = 0X00;$/;"	v
DISABLE_E	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	107;"	d
DISABLE_E	src/Configuration.h	115;"	d
DISABLE_MAX_ENDSTOPS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	95;"	d
DISABLE_MAX_ENDSTOPS	src/Configuration.h	103;"	d
DISABLE_STEPPER_DRIVER_INTERRUPT	src/stepper.cpp	165;"	d	file:
DISABLE_X	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	104;"	d
DISABLE_X	src/Configuration.h	112;"	d
DISABLE_Y	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	105;"	d
DISABLE_Y	src/Configuration.h	113;"	d
DISABLE_Z	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	106;"	d
DISABLE_Z	src/Configuration.h	114;"	d
DISPLAY	src/wiring.h	56;"	d
D_FILAMENT	src/Configuration_adv.h	145;"	d
E0_DIR_PIN	src/pins.h	178;"	d
E0_DIR_PIN	src/pins.h	26;"	d
E0_DIR_PIN	src/pins.h	271;"	d
E0_DIR_PIN	src/pins.h	393;"	d
E0_DIR_PIN	src/pins.h	463;"	d
E0_DIR_PIN	src/pins.h	520;"	d
E0_DIR_PIN	src/pins.h	586;"	d
E0_DIR_PIN	src/pins.h	670;"	d
E0_DIR_PIN	src/pins.h	797;"	d
E0_DIR_PIN	src/pins.h	849;"	d
E0_DIR_PIN	src/pins.h	98;"	d
E0_ENABLE_PIN	src/pins.h	179;"	d
E0_ENABLE_PIN	src/pins.h	272;"	d
E0_ENABLE_PIN	src/pins.h	27;"	d
E0_ENABLE_PIN	src/pins.h	394;"	d
E0_ENABLE_PIN	src/pins.h	464;"	d
E0_ENABLE_PIN	src/pins.h	521;"	d
E0_ENABLE_PIN	src/pins.h	605;"	d
E0_ENABLE_PIN	src/pins.h	613;"	d
E0_ENABLE_PIN	src/pins.h	671;"	d
E0_ENABLE_PIN	src/pins.h	798;"	d
E0_ENABLE_PIN	src/pins.h	850;"	d
E0_ENABLE_PIN	src/pins.h	99;"	d
E0_STEP_PIN	src/pins.h	177;"	d
E0_STEP_PIN	src/pins.h	25;"	d
E0_STEP_PIN	src/pins.h	270;"	d
E0_STEP_PIN	src/pins.h	392;"	d
E0_STEP_PIN	src/pins.h	462;"	d
E0_STEP_PIN	src/pins.h	519;"	d
E0_STEP_PIN	src/pins.h	585;"	d
E0_STEP_PIN	src/pins.h	669;"	d
E0_STEP_PIN	src/pins.h	796;"	d
E0_STEP_PIN	src/pins.h	848;"	d
E0_STEP_PIN	src/pins.h	97;"	d
E1_DIR_PIN	src/pins.h	275;"	d
E1_DIR_PIN	src/pins.h	674;"	d
E1_DIR_PIN	src/pins.h	801;"	d
E1_ENABLE_PIN	src/pins.h	276;"	d
E1_ENABLE_PIN	src/pins.h	675;"	d
E1_ENABLE_PIN	src/pins.h	802;"	d
E1_STEP_PIN	src/pins.h	274;"	d
E1_STEP_PIN	src/pins.h	673;"	d
E1_STEP_PIN	src/pins.h	800;"	d
EEPROM_OFFSET	src/EEPROMwrite.h	33;"	d
EEPROM_RetrieveSettings	src/EEPROMwrite.h	/^inline void EEPROM_RetrieveSettings(bool def=false)$/;"	f
EEPROM_StoreSettings	src/EEPROMwrite.h	/^inline void EEPROM_StoreSettings() $/;"	f
EEPROM_VERSION	src/EEPROMwrite.h	41;"	d
EEPROM_printSettings	src/EEPROMwrite.h	/^inline void EEPROM_printSettings()$/;"	f
EEPROM_readAnything	src/EEPROMwrite.h	/^template <class T> int EEPROM_readAnything(int &ee, T& value)$/;"	f
EEPROM_writeAnything	src/EEPROMwrite.h	/^template <class T> int EEPROM_writeAnything(int &ee, const T& value)$/;"	f
ENABLE_STEPPER_DRIVER_INTERRUPT	src/stepper.cpp	164;"	d	file:
ENDL_CALLS_FLUSH	src/SdFatConfig.h	57;"	d
ENDSTOPPULLUPS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	89;"	d
ENDSTOPPULLUPS	src/Configuration.h	97;"	d
ENDSTOPS_ONLY_FOR_HOMING	src/Configuration_adv.h	79;"	d
EN_A	src/ultralcd.h	19;"	d
EN_A	src/ultralcd.h	41;"	d
EN_B	src/ultralcd.h	18;"	d
EN_B	src/ultralcd.h	40;"	d
EN_C	src/ultralcd.h	17;"	d
ER	src/Makefile	/^ER = \/dev\/ttyACM0$/;"	m
EXTENDED_BOOT_SIG	src/SdFatStructs.h	/^uint8_t const EXTENDED_BOOT_SIG = 0X29;$/;"	v
EXTERNAL	src/wiring.h	72;"	d
EXTRUDERS	src/Configuration_adv.h	77;"	d
EXTRUDER_ADVANCE_K	src/Configuration_adv.h	143;"	d
EXTRUDER_RUNOUT_ESTEPS	src/Configuration_adv.h	57;"	d
EXTRUDER_RUNOUT_EXTRUDE	src/Configuration_adv.h	59;"	d
EXTRUDER_RUNOUT_MINTEMP	src/Configuration_adv.h	55;"	d
EXTRUDER_RUNOUT_SECONDS	src/Configuration_adv.h	56;"	d
EXTRUDER_RUNOUT_SPEED	src/Configuration_adv.h	58;"	d
EXTRUDE_MAXLENGTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	82;"	d
EXTRUDE_MAXLENGTH	src/Configuration.h	90;"	d
EXTRUDE_MINTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	81;"	d
EXTRUDE_MINTEMP	src/Configuration.h	89;"	d
EXTRUTION_AREA	src/Configuration_adv.h	147;"	d
E_AXIS	src/Marlin.h	/^enum AxisEnum {X_AXIS=0, Y_AXIS=1, Z_AXIS=2, E_AXIS=3};$/;"	e	enum:AxisEnum
E_DIR_PIN	src/pins.h	909;"	d
E_ENABLE_ON	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	101;"	d
E_ENABLE_ON	src/Configuration.h	109;"	d
E_ENABLE_PIN	src/pins.h	924;"	d
E_STEP_PIN	src/pins.h	908;"	d
FALLING	src/wiring.h	62;"	d
FAN_PIN	src/pins.h	118;"	d
FAN_PIN	src/pins.h	120;"	d
FAN_PIN	src/pins.h	195;"	d
FAN_PIN	src/pins.h	283;"	d
FAN_PIN	src/pins.h	285;"	d
FAN_PIN	src/pins.h	32;"	d
FAN_PIN	src/pins.h	405;"	d
FAN_PIN	src/pins.h	409;"	d
FAN_PIN	src/pins.h	469;"	d
FAN_PIN	src/pins.h	540;"	d
FAN_PIN	src/pins.h	590;"	d
FAN_PIN	src/pins.h	680;"	d
FAN_PIN	src/pins.h	807;"	d
FAN_PIN	src/pins.h	858;"	d
FAN_PIN	src/pins.h	913;"	d
FAT12EOC	src/SdFatStructs.h	/^uint16_t const FAT12EOC = 0XFFF;$/;"	v
FAT12EOC_MIN	src/SdFatStructs.h	/^uint16_t const FAT12EOC_MIN = 0XFF8;$/;"	v
FAT12_SUPPORT	src/SdFatConfig.h	68;"	d
FAT16EOC	src/SdFatStructs.h	/^uint16_t const FAT16EOC = 0XFFFF;$/;"	v
FAT16EOC_MIN	src/SdFatStructs.h	/^uint16_t const FAT16EOC_MIN = 0XFFF8;$/;"	v
FAT32EOC	src/SdFatStructs.h	/^uint32_t const FAT32EOC = 0X0FFFFFFF;$/;"	v
FAT32EOC_MIN	src/SdFatStructs.h	/^uint32_t const FAT32EOC_MIN = 0X0FFFFFF8;$/;"	v
FAT32MASK	src/SdFatStructs.h	/^uint32_t const FAT32MASK = 0X0FFFFFFF;$/;"	v
FAT_DATE	src/SdBaseFile.h	/^static inline uint16_t FAT_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FAT_DAY	src/SdBaseFile.h	/^static inline uint8_t FAT_DAY(uint16_t fatDate) {$/;"	f
FAT_DEFAULT_DATE	src/SdBaseFile.h	/^uint16_t const FAT_DEFAULT_DATE = ((2000 - 1980) << 9) | (1 << 5) | 1;$/;"	v
FAT_DEFAULT_TIME	src/SdBaseFile.h	/^uint16_t const FAT_DEFAULT_TIME = (1 << 11);$/;"	v
FAT_FILE_TYPE_CLOSED	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_CLOSED = 0;$/;"	v
FAT_FILE_TYPE_MIN_DIR	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_MIN_DIR = FAT_FILE_TYPE_ROOT_FIXED;$/;"	v
FAT_FILE_TYPE_NORMAL	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_NORMAL = 1;$/;"	v
FAT_FILE_TYPE_ROOT32	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_ROOT32 = 3;$/;"	v
FAT_FILE_TYPE_ROOT_FIXED	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_ROOT_FIXED = 2;$/;"	v
FAT_FILE_TYPE_SUBDIR	src/SdBaseFile.h	/^uint8_t const FAT_FILE_TYPE_SUBDIR = 4;$/;"	v
FAT_HOUR	src/SdBaseFile.h	/^static inline uint8_t FAT_HOUR(uint16_t fatTime) {$/;"	f
FAT_MINUTE	src/SdBaseFile.h	/^static inline uint8_t FAT_MINUTE(uint16_t fatTime) {$/;"	f
FAT_MONTH	src/SdBaseFile.h	/^static inline uint8_t FAT_MONTH(uint16_t fatDate) {$/;"	f
FAT_SECOND	src/SdBaseFile.h	/^static inline uint8_t FAT_SECOND(uint16_t fatTime) {$/;"	f
FAT_TIME	src/SdBaseFile.h	/^static inline uint16_t FAT_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
FAT_YEAR	src/SdBaseFile.h	/^static inline uint16_t FAT_YEAR(uint16_t fatDate) {$/;"	f
FORCE_INLINE	src/Marlin.h	9;"	d
FSINFO_LEAD_SIG	src/SdFatStructs.h	/^uint32_t const FSINFO_LEAD_SIG = 0x41615252;$/;"	v
FSINFO_STRUCT_SIG	src/SdFatStructs.h	/^uint32_t const FSINFO_STRUCT_SIG = 0x61417272;$/;"	v
F_FILE_DIR_DIRTY	src/SdBaseFile.h	/^  static uint8_t const F_FILE_DIR_DIRTY = 0X80;$/;"	m	class:SdBaseFile
F_OFLAG	src/SdBaseFile.h	/^  static uint8_t const F_OFLAG = (O_ACCMODE | O_APPEND | O_SYNC);$/;"	m	class:SdBaseFile
FanSpeed	.build_ano/mega/src/Marlin.ino.cpp	/^unsigned char FanSpeed=0;$/;"	v
FlushSerialRequestResend	.build_ano/mega/src/Marlin.ino.cpp	/^void FlushSerialRequestResend()$/;"	f
FreeRam	src/SdFatUtil.cpp	/^int SdFatUtil::FreeRam() {$/;"	f	class:SdFatUtil
GEN7_VERSION	src/pins.h	55;"	d
GEN7_VERSION	src/pins.h	60;"	d
GEN7_VERSION	src/pins.h	72;"	d
GET_INPUT	src/fastio.h	79;"	d
GET_OUTPUT	src/fastio.h	81;"	d
GET_TIMER	src/fastio.h	84;"	d
HALF_PI	src/wiring.h	50;"	d
HEATER_0_MAXTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	44;"	d
HEATER_0_MAXTEMP	src/Configuration.h	44;"	d
HEATER_0_MAXTEMP	src/Configuration_adv.h	221;"	d
HEATER_0_MINTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	36;"	d
HEATER_0_MINTEMP	src/Configuration.h	36;"	d
HEATER_0_MINTEMP	src/Configuration_adv.h	220;"	d
HEATER_0_PIN	src/pins.h	106;"	d
HEATER_0_PIN	src/pins.h	186;"	d
HEATER_0_PIN	src/pins.h	290;"	d
HEATER_0_PIN	src/pins.h	36;"	d
HEATER_0_PIN	src/pins.h	403;"	d
HEATER_0_PIN	src/pins.h	407;"	d
HEATER_0_PIN	src/pins.h	473;"	d
HEATER_0_PIN	src/pins.h	527;"	d
HEATER_0_PIN	src/pins.h	595;"	d
HEATER_0_PIN	src/pins.h	660;"	d
HEATER_0_PIN	src/pins.h	787;"	d
HEATER_0_PIN	src/pins.h	854;"	d
HEATER_0_PIN	src/pins.h	918;"	d
HEATER_0_USES_AD595	src/Configuration_adv.h	205;"	d
HEATER_0_USES_MAX6675	src/Configuration_adv.h	217;"	d
HEATER_0_USES_THERMISTOR	src/Configuration_adv.h	190;"	d
HEATER_1_MAXTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	45;"	d
HEATER_1_MAXTEMP	src/Configuration.h	45;"	d
HEATER_1_MAXTEMP	src/Configuration_adv.h	225;"	d
HEATER_1_MINTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	37;"	d
HEATER_1_MINTEMP	src/Configuration.h	37;"	d
HEATER_1_MINTEMP	src/Configuration_adv.h	224;"	d
HEATER_1_PIN	src/pins.h	107;"	d
HEATER_1_PIN	src/pins.h	187;"	d
HEATER_1_PIN	src/pins.h	292;"	d
HEATER_1_PIN	src/pins.h	294;"	d
HEATER_1_PIN	src/pins.h	37;"	d
HEATER_1_PIN	src/pins.h	411;"	d
HEATER_1_PIN	src/pins.h	474;"	d
HEATER_1_PIN	src/pins.h	528;"	d
HEATER_1_PIN	src/pins.h	596;"	d
HEATER_1_PIN	src/pins.h	663;"	d
HEATER_1_PIN	src/pins.h	790;"	d
HEATER_1_PIN	src/pins.h	855;"	d
HEATER_1_PIN	src/pins.h	920;"	d
HEATER_1_USES_AD595	src/Configuration_adv.h	208;"	d
HEATER_1_USES_THERMISTOR	src/Configuration_adv.h	194;"	d
HEATER_2_MAXTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	46;"	d
HEATER_2_MAXTEMP	src/Configuration.h	46;"	d
HEATER_2_MAXTEMP	src/Configuration_adv.h	229;"	d
HEATER_2_MINTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	38;"	d
HEATER_2_MINTEMP	src/Configuration.h	38;"	d
HEATER_2_MINTEMP	src/Configuration_adv.h	228;"	d
HEATER_2_PIN	src/pins.h	108;"	d
HEATER_2_PIN	src/pins.h	188;"	d
HEATER_2_PIN	src/pins.h	296;"	d
HEATER_2_PIN	src/pins.h	38;"	d
HEATER_2_PIN	src/pins.h	412;"	d
HEATER_2_PIN	src/pins.h	475;"	d
HEATER_2_PIN	src/pins.h	529;"	d
HEATER_2_PIN	src/pins.h	597;"	d
HEATER_2_PIN	src/pins.h	666;"	d
HEATER_2_PIN	src/pins.h	793;"	d
HEATER_2_PIN	src/pins.h	856;"	d
HEATER_2_PIN	src/pins.h	931;"	d
HEATER_2_USES_AD595	src/Configuration_adv.h	211;"	d
HEATER_2_USES_THERMISTOR	src/Configuration_adv.h	198;"	d
HEATER_BED_PIN	src/pins.h	109;"	d
HEATER_BED_PIN	src/pins.h	189;"	d
HEATER_BED_PIN	src/pins.h	300;"	d
HEATER_BED_PIN	src/pins.h	404;"	d
HEATER_BED_PIN	src/pins.h	408;"	d
HEATER_BED_PIN	src/pins.h	42;"	d
HEATER_BED_PIN	src/pins.h	479;"	d
HEATER_BED_PIN	src/pins.h	531;"	d
HEATER_BED_PIN	src/pins.h	534;"	d
HEATER_BED_PIN	src/pins.h	601;"	d
HEATER_BED_PIN	src/pins.h	609;"	d
HEATER_BED_PIN	src/pins.h	657;"	d
HEATER_BED_PIN	src/pins.h	784;"	d
HEATER_BED_PIN	src/pins.h	857;"	d
HEAT_INTERVAL	src/temperature.cpp	729;"	d	file:
HEX	src/MarlinSerial.h	28;"	d
HIGH	src/wiring.h	40;"	d
HOMEAXIS	.build_ano/mega/src/Marlin.ino.cpp	536;"	d	file:
HOMING_FEEDRATE	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	136;"	d
HOMING_FEEDRATE	src/Configuration.h	145;"	d
HardwareSerial_h	src/Marlin.h	7;"	d
INPUT	src/wiring.h	43;"	d
INTERNAL	src/wiring.h	69;"	d
INTERNAL1V1	src/wiring.h	66;"	d
INTERNAL2V56	src/wiring.h	67;"	d
INVERT_E0_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	112;"	d
INVERT_E0_DIR	src/Configuration.h	120;"	d
INVERT_E1_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	113;"	d
INVERT_E1_DIR	src/Configuration.h	121;"	d
INVERT_E2_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	114;"	d
INVERT_E2_DIR	src/Configuration.h	122;"	d
INVERT_X_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	109;"	d
INVERT_X_DIR	src/Configuration.h	117;"	d
INVERT_Y_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	110;"	d
INVERT_Y_DIR	src/Configuration.h	118;"	d
INVERT_Z_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	111;"	d
INVERT_Z_DIR	src/Configuration.h	119;"	d
ISR	src/stepper.cpp	/^  ISR(TIMER0_COMPA_vect)$/;"	f
ISR	src/stepper.cpp	/^ISR(TIMER1_COMPA_vect)$/;"	f
ISR	src/temperature.cpp	/^ISR(TIMER0_COMPB_vect)$/;"	f
IS_SD_PRINTING	src/cardreader.h	68;"	d
IS_SD_PRINTING	src/cardreader.h	72;"	d
K1	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	58;"	d
K1	src/Configuration.h	58;"	d
K2	src/temperature.cpp	295;"	d	file:
KILL_PIN	src/pins.h	288;"	d
KILL_PIN	src/pins.h	34;"	d
KILL_PIN	src/pins.h	400;"	d
KILL_PIN	src/pins.h	471;"	d
KILL_PIN	src/pins.h	593;"	d
KILL_PIN	src/pins.h	682;"	d
KILL_PIN	src/pins.h	809;"	d
KILL_PIN	src/pins.h	869;"	d
KILL_PIN	src/pins.h	916;"	d
KNOWN_BOARD	src/pins.h	148;"	d
KNOWN_BOARD	src/pins.h	237;"	d
KNOWN_BOARD	src/pins.h	438;"	d
KNOWN_BOARD	src/pins.h	489;"	d
KNOWN_BOARD	src/pins.h	563;"	d
KNOWN_BOARD	src/pins.h	5;"	d
KNOWN_BOARD	src/pins.h	628;"	d
KNOWN_BOARD	src/pins.h	64;"	d
KNOWN_BOARD	src/pins.h	755;"	d
KNOWN_BOARD	src/pins.h	827;"	d
KNOWN_BOARD	src/pins.h	886;"	d
Kc	src/temperature.cpp	/^    float Kc=DEFAULT_Kc;$/;"	v
Kd	src/temperature.cpp	/^  float Kd=DEFAULT_Kd;$/;"	v
Ki	src/temperature.cpp	/^  float Ki=DEFAULT_Ki;$/;"	v
Kp	src/temperature.cpp	/^  float Kp=DEFAULT_Kp;$/;"	v
LANGUAGE_CHOICE	src/language.h	11;"	d
LANGUAGE_H	src/language.h	2;"	d
LCD_HEIGHT	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	180;"	d
LCD_HEIGHT	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	194;"	d
LCD_HEIGHT	src/Configuration.h	189;"	d
LCD_HEIGHT	src/Configuration.h	203;"	d
LCD_MESSAGE	src/ultralcd.h	138;"	d
LCD_MESSAGE	src/ultralcd.h	143;"	d
LCD_MESSAGEPGM	src/ultralcd.h	139;"	d
LCD_MESSAGEPGM	src/ultralcd.h	144;"	d
LCD_PINS_D4	src/pins.h	212;"	d
LCD_PINS_D4	src/pins.h	311;"	d
LCD_PINS_D4	src/pins.h	346;"	d
LCD_PINS_D4	src/pins.h	693;"	d
LCD_PINS_D4	src/pins.h	726;"	d
LCD_PINS_D4	src/pins.h	814;"	d
LCD_PINS_D5	src/pins.h	213;"	d
LCD_PINS_D5	src/pins.h	312;"	d
LCD_PINS_D5	src/pins.h	347;"	d
LCD_PINS_D5	src/pins.h	694;"	d
LCD_PINS_D5	src/pins.h	727;"	d
LCD_PINS_D5	src/pins.h	815;"	d
LCD_PINS_D6	src/pins.h	214;"	d
LCD_PINS_D6	src/pins.h	313;"	d
LCD_PINS_D6	src/pins.h	348;"	d
LCD_PINS_D6	src/pins.h	695;"	d
LCD_PINS_D6	src/pins.h	728;"	d
LCD_PINS_D6	src/pins.h	816;"	d
LCD_PINS_D7	src/pins.h	215;"	d
LCD_PINS_D7	src/pins.h	314;"	d
LCD_PINS_D7	src/pins.h	349;"	d
LCD_PINS_D7	src/pins.h	696;"	d
LCD_PINS_D7	src/pins.h	729;"	d
LCD_PINS_D7	src/pins.h	817;"	d
LCD_PINS_ENABLE	src/pins.h	211;"	d
LCD_PINS_ENABLE	src/pins.h	310;"	d
LCD_PINS_ENABLE	src/pins.h	345;"	d
LCD_PINS_ENABLE	src/pins.h	692;"	d
LCD_PINS_ENABLE	src/pins.h	725;"	d
LCD_PINS_ENABLE	src/pins.h	813;"	d
LCD_PINS_RS	src/pins.h	210;"	d
LCD_PINS_RS	src/pins.h	309;"	d
LCD_PINS_RS	src/pins.h	344;"	d
LCD_PINS_RS	src/pins.h	691;"	d
LCD_PINS_RS	src/pins.h	724;"	d
LCD_PINS_RS	src/pins.h	812;"	d
LCD_STATUS	src/ultralcd.h	140;"	d
LCD_STATUS	src/ultralcd.h	142;"	d
LCD_UPDATE_INTERVAL	src/ultralcd.h	12;"	d
LCD_WIDTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	179;"	d
LCD_WIDTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	193;"	d
LCD_WIDTH	src/Configuration.h	188;"	d
LCD_WIDTH	src/Configuration.h	202;"	d
LED_PIN	src/pins.h	114;"	d
LED_PIN	src/pins.h	193;"	d
LED_PIN	src/pins.h	280;"	d
LED_PIN	src/pins.h	31;"	d
LED_PIN	src/pins.h	398;"	d
LED_PIN	src/pins.h	468;"	d
LED_PIN	src/pins.h	539;"	d
LED_PIN	src/pins.h	588;"	d
LED_PIN	src/pins.h	679;"	d
LED_PIN	src/pins.h	806;"	d
LED_PIN	src/pins.h	867;"	d
LED_PIN	src/pins.h	911;"	d
LOW	src/wiring.h	41;"	d
LSBFIRST	src/wiring.h	58;"	d
LS_Count	src/cardreader.h	/^enum LsAction {LS_SerialPrint,LS_Count,LS_GetFilename};$/;"	e	enum:LsAction
LS_DATE	src/SdBaseFile.h	/^uint8_t const LS_DATE = 1;$/;"	v
LS_GetFilename	src/cardreader.h	/^enum LsAction {LS_SerialPrint,LS_Count,LS_GetFilename};$/;"	e	enum:LsAction
LS_R	src/SdBaseFile.h	/^uint8_t const LS_R = 4;$/;"	v
LS_SIZE	src/SdBaseFile.h	/^uint8_t const LS_SIZE = 2;$/;"	v
LS_SerialPrint	src/cardreader.h	/^enum LsAction {LS_SerialPrint,LS_Count,LS_GetFilename};$/;"	e	enum:LsAction
LsAction	src/cardreader.h	/^enum LsAction {LS_SerialPrint,LS_Count,LS_GetFilename};$/;"	g
MASK	src/fastio.h	17;"	d
MAX6675_SS	src/pins.h	426;"	d
MAX6675_SS	src/pins.h	428;"	d
MAX_CMD_SIZE	src/Configuration_adv.h	181;"	d
MAX_FREQ_TIME	src/planner.cpp	601;"	d	file:
MAX_MISO_PIN	src/pins.h	424;"	d
MAX_MOSI_PIN	src/pins.h	425;"	d
MAX_SCK_PIN	src/pins.h	423;"	d
MAX_STEP_FREQUENCY	src/Configuration_adv.h	91;"	d
MCU	src/Makefile	/^MCU = atmega2560$/;"	m
MEGA_SOFT_SPI	src/SdFatConfig.h	90;"	d
MINIMUM_PLANNER_SPEED	src/Configuration_adv.h	113;"	d
MISO	src/fastio.h	1934;"	d
MISO	src/fastio.h	439;"	d
MISO	src/fastio.h	937;"	d
MISO	src/fastio.h	99;"	d
MISO_PIN	src/Sd2PinMap.h	/^uint8_t const MISO_PIN = 12;  \/\/ B4$/;"	v
MISO_PIN	src/Sd2PinMap.h	/^uint8_t const MISO_PIN = 23;  \/\/ B3$/;"	v
MISO_PIN	src/Sd2PinMap.h	/^uint8_t const MISO_PIN = 3;  \/\/ B3$/;"	v
MISO_PIN	src/Sd2PinMap.h	/^uint8_t const MISO_PIN = 50;  \/\/ B3$/;"	v
MISO_PIN	src/Sd2PinMap.h	/^uint8_t const MISO_PIN = 6;  \/\/ B6$/;"	v
MISO_PIN	src/Sd2PinMap.h	45;"	d
MISO_PIN	src/pins.h	875;"	d
MM_PER_ARC_SEGMENT	src/Configuration_adv.h	156;"	d
MOSI	src/fastio.h	100;"	d
MOSI	src/fastio.h	1935;"	d
MOSI	src/fastio.h	440;"	d
MOSI	src/fastio.h	938;"	d
MOSI_PIN	src/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 11;  \/\/ B3$/;"	v
MOSI_PIN	src/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 22;  \/\/ B2$/;"	v
MOSI_PIN	src/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 2;  \/\/ B2$/;"	v
MOSI_PIN	src/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 51;  \/\/ B2$/;"	v
MOSI_PIN	src/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 5;  \/\/ B5$/;"	v
MOSI_PIN	src/Sd2PinMap.h	44;"	d
MOSI_PIN	src/pins.h	876;"	d
MOTHERBOARD	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	15;"	d
MOTHERBOARD	src/Configuration.h	15;"	d
MOTHERBOARD	src/pins.h	54;"	d
MOTHERBOARD	src/pins.h	558;"	d
MOTHERBOARD	src/pins.h	559;"	d
MOTHERBOARD	src/pins.h	59;"	d
MOTHERBOARD	src/pins.h	826;"	d
MOTHERBOARD	src/pins.h	885;"	d
MSBFIRST	src/wiring.h	59;"	d
MSG_ACC	src/language.h	189;"	d
MSG_ACC	src/language.h	46;"	d
MSG_ACTIVE_EXTRUDER	src/language.h	121;"	d
MSG_ACTIVE_EXTRUDER	src/language.h	264;"	d
MSG_AMAX	src/language.h	198;"	d
MSG_AMAX	src/language.h	55;"	d
MSG_AUTHOR	src/language.h	238;"	d
MSG_AUTHOR	src/language.h	95;"	d
MSG_AUTOSTART	src/language.h	161;"	d
MSG_AUTOSTART	src/language.h	21;"	d
MSG_AUTOTEMP	src/language.h	182;"	d
MSG_AUTOTEMP	src/language.h	39;"	d
MSG_AUTO_HOME	src/language.h	163;"	d
MSG_AUTO_HOME	src/language.h	23;"	d
MSG_A_RETRACT	src/language.h	199;"	d
MSG_A_RETRACT	src/language.h	56;"	d
MSG_BED	src/language.h	175;"	d
MSG_BED	src/language.h	32;"	d
MSG_BED_DONE	src/language.h	115;"	d
MSG_BED_DONE	src/language.h	258;"	d
MSG_BED_HEATING	src/language.h	114;"	d
MSG_BED_HEATING	src/language.h	257;"	d
MSG_BEGIN_FILE_LIST	src/language.h	106;"	d
MSG_BEGIN_FILE_LIST	src/language.h	249;"	d
MSG_BROWNOUT_RESET	src/language.h	234;"	d
MSG_BROWNOUT_RESET	src/language.h	91;"	d
MSG_CARD_MENU	src/language.h	217;"	d
MSG_CARD_MENU	src/language.h	74;"	d
MSG_CONFIGURATION_VER	src/language.h	239;"	d
MSG_CONFIGURATION_VER	src/language.h	96;"	d
MSG_CONTROL	src/language.h	178;"	d
MSG_CONTROL	src/language.h	35;"	d
MSG_CONTROL_ARROW	src/language.h	214;"	d
MSG_CONTROL_ARROW	src/language.h	71;"	d
MSG_COOLDOWN	src/language.h	167;"	d
MSG_COOLDOWN	src/language.h	25;"	d
MSG_COUNT_X	src/language.h	117;"	d
MSG_COUNT_X	src/language.h	260;"	d
MSG_DISABLE_STEPPERS	src/language.h	162;"	d
MSG_DISABLE_STEPPERS	src/language.h	22;"	d
MSG_DWELL	src/language.h	220;"	d
MSG_DWELL	src/language.h	77;"	d
MSG_E	src/language.h	195;"	d
MSG_E	src/language.h	52;"	d
MSG_ENDSTOPS_HIT	src/language.h	147;"	d
MSG_ENDSTOPS_HIT	src/language.h	290;"	d
MSG_END_FILE_LIST	src/language.h	107;"	d
MSG_END_FILE_LIST	src/language.h	250;"	d
MSG_ERR_CHECKSUM_MISMATCH	src/language.h	102;"	d
MSG_ERR_CHECKSUM_MISMATCH	src/language.h	245;"	d
MSG_ERR_COLD_EXTRUDE_STOP	src/language.h	148;"	d
MSG_ERR_COLD_EXTRUDE_STOP	src/language.h	291;"	d
MSG_ERR_KILLED	src/language.h	118;"	d
MSG_ERR_KILLED	src/language.h	261;"	d
MSG_ERR_LINE_NO	src/language.h	101;"	d
MSG_ERR_LINE_NO	src/language.h	244;"	d
MSG_ERR_LONG_EXTRUDE_STOP	src/language.h	149;"	d
MSG_ERR_LONG_EXTRUDE_STOP	src/language.h	292;"	d
MSG_ERR_NO_CHECKSUM	src/language.h	103;"	d
MSG_ERR_NO_CHECKSUM	src/language.h	246;"	d
MSG_ERR_NO_LINENUMBER_WITH_CHECKSUM	src/language.h	104;"	d
MSG_ERR_NO_LINENUMBER_WITH_CHECKSUM	src/language.h	247;"	d
MSG_ERR_NO_THERMISTORS	src/language.h	110;"	d
MSG_ERR_NO_THERMISTORS	src/language.h	253;"	d
MSG_ESTEPS	src/language.h	203;"	d
MSG_ESTEPS	src/language.h	60;"	d
MSG_EXTERNAL_RESET	src/language.h	233;"	d
MSG_EXTERNAL_RESET	src/language.h	90;"	d
MSG_EXTRUDE	src/language.h	168;"	d
MSG_EXTRUDE	src/language.h	26;"	d
MSG_Enqueing	src/language.h	231;"	d
MSG_Enqueing	src/language.h	88;"	d
MSG_FACTOR	src/language.h	181;"	d
MSG_FACTOR	src/language.h	38;"	d
MSG_FAN_SPEED	src/language.h	176;"	d
MSG_FAN_SPEED	src/language.h	33;"	d
MSG_FILE_PRINTED	src/language.h	105;"	d
MSG_FILE_PRINTED	src/language.h	248;"	d
MSG_FILE_SAVED	src/language.h	100;"	d
MSG_FILE_SAVED	src/language.h	243;"	d
MSG_FLOW	src/language.h	177;"	d
MSG_FLOW	src/language.h	34;"	d
MSG_FREE_MEMORY	src/language.h	240;"	d
MSG_FREE_MEMORY	src/language.h	97;"	d
MSG_HEATING	src/language.h	112;"	d
MSG_HEATING	src/language.h	255;"	d
MSG_HEATING_COMPLETE	src/language.h	113;"	d
MSG_HEATING_COMPLETE	src/language.h	256;"	d
MSG_INVALID_EXTRUDER	src/language.h	122;"	d
MSG_INVALID_EXTRUDER	src/language.h	265;"	d
MSG_KILLED	src/language.h	223;"	d
MSG_KILLED	src/language.h	80;"	d
MSG_LOAD_EPROM	src/language.h	208;"	d
MSG_LOAD_EPROM	src/language.h	65;"	d
MSG_M104_INVALID_EXTRUDER	src/language.h	108;"	d
MSG_M104_INVALID_EXTRUDER	src/language.h	251;"	d
MSG_M105_INVALID_EXTRUDER	src/language.h	109;"	d
MSG_M105_INVALID_EXTRUDER	src/language.h	252;"	d
MSG_M109_INVALID_EXTRUDER	src/language.h	111;"	d
MSG_M109_INVALID_EXTRUDER	src/language.h	254;"	d
MSG_M115_REPORT	src/language.h	116;"	d
MSG_M115_REPORT	src/language.h	259;"	d
MSG_MAIN	src/language.h	160;"	d
MSG_MAIN	src/language.h	20;"	d
MSG_MAIN_WIDE	src/language.h	204;"	d
MSG_MAIN_WIDE	src/language.h	61;"	d
MSG_MARLIN	src/language.h	237;"	d
MSG_MARLIN	src/language.h	94;"	d
MSG_MAX	src/language.h	180;"	d
MSG_MAX	src/language.h	37;"	d
MSG_MIN	src/language.h	179;"	d
MSG_MIN	src/language.h	36;"	d
MSG_MOTION_WIDE	src/language.h	206;"	d
MSG_MOTION_WIDE	src/language.h	63;"	d
MSG_MOVE_AXIS	src/language.h	171;"	d
MSG_MOVE_AXIS	src/language.h	172;"	d
MSG_MOVE_AXIS	src/language.h	29;"	d
MSG_NOZZLE	src/language.h	174;"	d
MSG_NOZZLE	src/language.h	31;"	d
MSG_NO_CARD	src/language.h	218;"	d
MSG_NO_CARD	src/language.h	75;"	d
MSG_NO_MOVE	src/language.h	221;"	d
MSG_NO_MOVE	src/language.h	78;"	d
MSG_OFF	src/language.h	184;"	d
MSG_OFF	src/language.h	41;"	d
MSG_OK	src/language.h	242;"	d
MSG_OK	src/language.h	99;"	d
MSG_ON	src/language.h	183;"	d
MSG_ON	src/language.h	40;"	d
MSG_PART_RELEASE	src/language.h	222;"	d
MSG_PART_RELEASE	src/language.h	79;"	d
MSG_PID_C	src/language.h	188;"	d
MSG_PID_C	src/language.h	45;"	d
MSG_PID_D	src/language.h	187;"	d
MSG_PID_D	src/language.h	44;"	d
MSG_PID_I	src/language.h	186;"	d
MSG_PID_I	src/language.h	43;"	d
MSG_PID_P	src/language.h	185;"	d
MSG_PID_P	src/language.h	42;"	d
MSG_PLANNER_BUFFER_BYTES	src/language.h	241;"	d
MSG_PLANNER_BUFFER_BYTES	src/language.h	98;"	d
MSG_POWERUP	src/language.h	232;"	d
MSG_POWERUP	src/language.h	89;"	d
MSG_PREHEAT_ABS	src/language.h	166;"	d
MSG_PREHEAT_ABS	src/language.h	170;"	d
MSG_PREHEAT_ABS	src/language.h	225;"	d
MSG_PREHEAT_ABS	src/language.h	28;"	d
MSG_PREHEAT_ABS	src/language.h	82;"	d
MSG_PREHEAT_PLA	src/language.h	165;"	d
MSG_PREHEAT_PLA	src/language.h	169;"	d
MSG_PREHEAT_PLA	src/language.h	224;"	d
MSG_PREHEAT_PLA	src/language.h	27;"	d
MSG_PREHEAT_PLA	src/language.h	81;"	d
MSG_PREPARE	src/language.h	212;"	d
MSG_PREPARE	src/language.h	69;"	d
MSG_PREPARE_ALT	src/language.h	213;"	d
MSG_PREPARE_ALT	src/language.h	70;"	d
MSG_REFRESH	src/language.h	210;"	d
MSG_REFRESH	src/language.h	67;"	d
MSG_RESEND	src/language.h	119;"	d
MSG_RESEND	src/language.h	262;"	d
MSG_RESTORE_FAILSAFE	src/language.h	209;"	d
MSG_RESTORE_FAILSAFE	src/language.h	66;"	d
MSG_SD_CANT_ENTER_SUBDIR	src/language.h	144;"	d
MSG_SD_CANT_ENTER_SUBDIR	src/language.h	287;"	d
MSG_SD_CANT_OPEN_SUBDIR	src/language.h	130;"	d
MSG_SD_CANT_OPEN_SUBDIR	src/language.h	273;"	d
MSG_SD_CARD_OK	src/language.h	134;"	d
MSG_SD_CARD_OK	src/language.h	277;"	d
MSG_SD_ERR_WRITE_TO_FILE	src/language.h	143;"	d
MSG_SD_ERR_WRITE_TO_FILE	src/language.h	286;"	d
MSG_SD_FILE_OPENED	src/language.h	137;"	d
MSG_SD_FILE_OPENED	src/language.h	280;"	d
MSG_SD_FILE_SELECTED	src/language.h	139;"	d
MSG_SD_FILE_SELECTED	src/language.h	282;"	d
MSG_SD_INIT_FAIL	src/language.h	131;"	d
MSG_SD_INIT_FAIL	src/language.h	274;"	d
MSG_SD_INSERTED	src/language.h	158;"	d
MSG_SD_INSERTED	src/language.h	18;"	d
MSG_SD_NOT_PRINTING	src/language.h	142;"	d
MSG_SD_NOT_PRINTING	src/language.h	285;"	d
MSG_SD_OPENROOT_FAIL	src/language.h	133;"	d
MSG_SD_OPENROOT_FAIL	src/language.h	276;"	d
MSG_SD_OPEN_FILE_FAIL	src/language.h	136;"	d
MSG_SD_OPEN_FILE_FAIL	src/language.h	279;"	d
MSG_SD_PRINTING_BYTE	src/language.h	141;"	d
MSG_SD_PRINTING_BYTE	src/language.h	284;"	d
MSG_SD_REMOVED	src/language.h	159;"	d
MSG_SD_REMOVED	src/language.h	19;"	d
MSG_SD_SIZE	src/language.h	138;"	d
MSG_SD_SIZE	src/language.h	281;"	d
MSG_SD_VOL_INIT_FAIL	src/language.h	132;"	d
MSG_SD_VOL_INIT_FAIL	src/language.h	275;"	d
MSG_SD_WORKDIR_FAIL	src/language.h	135;"	d
MSG_SD_WORKDIR_FAIL	src/language.h	278;"	d
MSG_SD_WRITE_TO_FILE	src/language.h	140;"	d
MSG_SD_WRITE_TO_FILE	src/language.h	283;"	d
MSG_SERIAL_ERROR_MENU_STRUCTURE	src/language.h	219;"	d
MSG_SERIAL_ERROR_MENU_STRUCTURE	src/language.h	76;"	d
MSG_SET_ORIGIN	src/language.h	164;"	d
MSG_SET_ORIGIN	src/language.h	24;"	d
MSG_SOFTWARE_RESET	src/language.h	236;"	d
MSG_SOFTWARE_RESET	src/language.h	93;"	d
MSG_SPEED	src/language.h	173;"	d
MSG_SPEED	src/language.h	30;"	d
MSG_STEPPER_RELEASED	src/language.h	226;"	d
MSG_STEPPER_RELEASED	src/language.h	83;"	d
MSG_STEPPER_TO_HIGH	src/language.h	146;"	d
MSG_STEPPER_TO_HIGH	src/language.h	289;"	d
MSG_STOP_PRINT	src/language.h	216;"	d
MSG_STOP_PRINT	src/language.h	73;"	d
MSG_STORE_EPROM	src/language.h	207;"	d
MSG_STORE_EPROM	src/language.h	64;"	d
MSG_TEMPERATURE_WIDE	src/language.h	205;"	d
MSG_TEMPERATURE_WIDE	src/language.h	62;"	d
MSG_TUNE	src/language.h	215;"	d
MSG_TUNE	src/language.h	72;"	d
MSG_UNKNOWN_COMMAND	src/language.h	120;"	d
MSG_UNKNOWN_COMMAND	src/language.h	263;"	d
MSG_VMAX	src/language.h	191;"	d
MSG_VMAX	src/language.h	48;"	d
MSG_VMIN	src/language.h	196;"	d
MSG_VMIN	src/language.h	53;"	d
MSG_VTRAV_MIN	src/language.h	197;"	d
MSG_VTRAV_MIN	src/language.h	54;"	d
MSG_VXY_JERK	src/language.h	190;"	d
MSG_VXY_JERK	src/language.h	47;"	d
MSG_WATCH	src/language.h	211;"	d
MSG_WATCH	src/language.h	68;"	d
MSG_WATCHDOG_RESET	src/language.h	235;"	d
MSG_WATCHDOG_RESET	src/language.h	92;"	d
MSG_X	src/language.h	192;"	d
MSG_X	src/language.h	49;"	d
MSG_XSTEPS	src/language.h	200;"	d
MSG_XSTEPS	src/language.h	57;"	d
MSG_X_MAX	src/language.h	124;"	d
MSG_X_MAX	src/language.h	267;"	d
MSG_X_MIN	src/language.h	123;"	d
MSG_X_MIN	src/language.h	266;"	d
MSG_Y	src/language.h	193;"	d
MSG_Y	src/language.h	50;"	d
MSG_YSTEPS	src/language.h	201;"	d
MSG_YSTEPS	src/language.h	58;"	d
MSG_Y_MAX	src/language.h	126;"	d
MSG_Y_MAX	src/language.h	269;"	d
MSG_Y_MIN	src/language.h	125;"	d
MSG_Y_MIN	src/language.h	268;"	d
MSG_Z	src/language.h	194;"	d
MSG_Z	src/language.h	51;"	d
MSG_ZSTEPS	src/language.h	202;"	d
MSG_ZSTEPS	src/language.h	59;"	d
MSG_Z_MAX	src/language.h	128;"	d
MSG_Z_MAX	src/language.h	271;"	d
MSG_Z_MIN	src/language.h	127;"	d
MSG_Z_MIN	src/language.h	270;"	d
MSerial	src/MarlinSerial.cpp	/^MarlinSerial MSerial;$/;"	v
MYPGM	src/Marlin.h	61;"	d
MYSERIAL	src/Marlin.h	50;"	d
MYSERIAL	src/Marlin.h	52;"	d
MainMenu	src/ultralcd.h	/^  class MainMenu{$/;"	c
MainStatus	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	g
Main_Control	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Main_Menu	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Main_Prepare	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Main_SD	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Main_Status	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
MarlinSerial	src/MarlinSerial.cpp	/^MarlinSerial::MarlinSerial()$/;"	f	class:MarlinSerial
MarlinSerial	src/MarlinSerial.h	/^class MarlinSerial \/\/: public Stream$/;"	c
MarlinSerial_h	src/MarlinSerial.h	23;"	d
MultiU16X8toH16	src/stepper.cpp	96;"	d	file:
MultiU24X24toH16	src/stepper.cpp	121;"	d	file:
NORM_E_DIR	src/stepper.h	28;"	d
NORM_E_DIR	src/stepper.h	32;"	d
NORM_E_DIR	src/stepper.h	36;"	d
NUM_AXIS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	135;"	d
NUM_AXIS	src/Configuration.h	144;"	d
N_ARC_CORRECTION	src/Configuration_adv.h	157;"	d
OC0A	src/fastio.h	108;"	d
OC0A	src/fastio.h	448;"	d
OC0A	src/fastio.h	946;"	d
OC0B	src/fastio.h	109;"	d
OC0B	src/fastio.h	449;"	d
OC0B	src/fastio.h	947;"	d
OC1A	src/fastio.h	110;"	d
OC1A	src/fastio.h	450;"	d
OC1A	src/fastio.h	948;"	d
OC1B	src/fastio.h	111;"	d
OC1B	src/fastio.h	451;"	d
OC1B	src/fastio.h	949;"	d
OC2A	src/fastio.h	112;"	d
OC2A	src/fastio.h	452;"	d
OC2A	src/fastio.h	950;"	d
OC2B	src/fastio.h	113;"	d
OC2B	src/fastio.h	453;"	d
OC2B	src/fastio.h	951;"	d
OC3A	src/fastio.h	952;"	d
OC3B	src/fastio.h	953;"	d
OC3C	src/fastio.h	954;"	d
OC4A	src/fastio.h	955;"	d
OC4B	src/fastio.h	956;"	d
OC4C	src/fastio.h	957;"	d
OC5A	src/fastio.h	958;"	d
OC5B	src/fastio.h	959;"	d
OC5C	src/fastio.h	960;"	d
OCR1A_nominal	src/stepper.cpp	/^static unsigned short OCR1A_nominal;$/;"	v	file:
OCT	src/MarlinSerial.h	29;"	d
OUTPUT	src/wiring.h	44;"	d
OVERSAMPLENR	src/thermistortables.h	6;"	d
O_ACCMODE	src/SdBaseFile.h	/^uint8_t const O_ACCMODE = (O_READ | O_WRITE);$/;"	v
O_APPEND	src/SdBaseFile.h	/^uint8_t const O_APPEND = 0X04;$/;"	v
O_AT_END	src/SdBaseFile.h	/^uint8_t const O_AT_END = 0X20;$/;"	v
O_CREAT	src/SdBaseFile.h	/^uint8_t const O_CREAT = 0X40;$/;"	v
O_EXCL	src/SdBaseFile.h	/^uint8_t const O_EXCL = 0X80;$/;"	v
O_RDONLY	src/SdBaseFile.h	/^uint8_t const O_RDONLY = O_READ;$/;"	v
O_RDWR	src/SdBaseFile.h	/^uint8_t const O_RDWR = (O_READ | O_WRITE);$/;"	v
O_READ	src/SdBaseFile.h	/^uint8_t const O_READ = 0X01;$/;"	v
O_SYNC	src/SdBaseFile.h	/^uint8_t const O_SYNC = 0X08;$/;"	v
O_TRUNC	src/SdBaseFile.h	/^uint8_t const O_TRUNC = 0X10;$/;"	v
O_WRITE	src/SdBaseFile.h	/^uint8_t const O_WRITE = 0X02;$/;"	v
O_WRONLY	src/SdBaseFile.h	/^uint8_t const O_WRONLY = O_WRITE;$/;"	v
PA0	src/fastio.h	1390;"	d
PA0	src/fastio.h	2283;"	d
PA0	src/fastio.h	702;"	d
PA0_DDR	src/fastio.h	1394;"	d
PA0_DDR	src/fastio.h	2288;"	d
PA0_DDR	src/fastio.h	706;"	d
PA0_PIN	src/fastio.h	1391;"	d
PA0_PIN	src/fastio.h	2284;"	d
PA0_PIN	src/fastio.h	703;"	d
PA0_PWM	src/fastio.h	1395;"	d
PA0_PWM	src/fastio.h	2287;"	d
PA0_PWM	src/fastio.h	707;"	d
PA0_RPORT	src/fastio.h	1392;"	d
PA0_RPORT	src/fastio.h	2285;"	d
PA0_RPORT	src/fastio.h	704;"	d
PA0_WPORT	src/fastio.h	1393;"	d
PA0_WPORT	src/fastio.h	2286;"	d
PA0_WPORT	src/fastio.h	705;"	d
PA1	src/fastio.h	1396;"	d
PA1	src/fastio.h	2289;"	d
PA1	src/fastio.h	709;"	d
PA1_DDR	src/fastio.h	1400;"	d
PA1_DDR	src/fastio.h	2294;"	d
PA1_DDR	src/fastio.h	713;"	d
PA1_PIN	src/fastio.h	1397;"	d
PA1_PIN	src/fastio.h	2290;"	d
PA1_PIN	src/fastio.h	710;"	d
PA1_PWM	src/fastio.h	1401;"	d
PA1_PWM	src/fastio.h	2293;"	d
PA1_PWM	src/fastio.h	714;"	d
PA1_RPORT	src/fastio.h	1398;"	d
PA1_RPORT	src/fastio.h	2291;"	d
PA1_RPORT	src/fastio.h	711;"	d
PA1_WPORT	src/fastio.h	1399;"	d
PA1_WPORT	src/fastio.h	2292;"	d
PA1_WPORT	src/fastio.h	712;"	d
PA2	src/fastio.h	1402;"	d
PA2	src/fastio.h	2295;"	d
PA2	src/fastio.h	716;"	d
PA2_DDR	src/fastio.h	1406;"	d
PA2_DDR	src/fastio.h	2300;"	d
PA2_DDR	src/fastio.h	720;"	d
PA2_PIN	src/fastio.h	1403;"	d
PA2_PIN	src/fastio.h	2296;"	d
PA2_PIN	src/fastio.h	717;"	d
PA2_PWM	src/fastio.h	1407;"	d
PA2_PWM	src/fastio.h	2299;"	d
PA2_PWM	src/fastio.h	721;"	d
PA2_RPORT	src/fastio.h	1404;"	d
PA2_RPORT	src/fastio.h	2297;"	d
PA2_RPORT	src/fastio.h	718;"	d
PA2_WPORT	src/fastio.h	1405;"	d
PA2_WPORT	src/fastio.h	2298;"	d
PA2_WPORT	src/fastio.h	719;"	d
PA3	src/fastio.h	1408;"	d
PA3	src/fastio.h	2301;"	d
PA3	src/fastio.h	723;"	d
PA3_DDR	src/fastio.h	1412;"	d
PA3_DDR	src/fastio.h	2306;"	d
PA3_DDR	src/fastio.h	727;"	d
PA3_PIN	src/fastio.h	1409;"	d
PA3_PIN	src/fastio.h	2302;"	d
PA3_PIN	src/fastio.h	724;"	d
PA3_PWM	src/fastio.h	1413;"	d
PA3_PWM	src/fastio.h	2305;"	d
PA3_PWM	src/fastio.h	728;"	d
PA3_RPORT	src/fastio.h	1410;"	d
PA3_RPORT	src/fastio.h	2303;"	d
PA3_RPORT	src/fastio.h	725;"	d
PA3_WPORT	src/fastio.h	1411;"	d
PA3_WPORT	src/fastio.h	2304;"	d
PA3_WPORT	src/fastio.h	726;"	d
PA4	src/fastio.h	1414;"	d
PA4	src/fastio.h	2307;"	d
PA4	src/fastio.h	730;"	d
PA4_DDR	src/fastio.h	1418;"	d
PA4_DDR	src/fastio.h	2312;"	d
PA4_DDR	src/fastio.h	734;"	d
PA4_PIN	src/fastio.h	1415;"	d
PA4_PIN	src/fastio.h	2308;"	d
PA4_PIN	src/fastio.h	731;"	d
PA4_PWM	src/fastio.h	1419;"	d
PA4_PWM	src/fastio.h	2311;"	d
PA4_PWM	src/fastio.h	735;"	d
PA4_RPORT	src/fastio.h	1416;"	d
PA4_RPORT	src/fastio.h	2309;"	d
PA4_RPORT	src/fastio.h	732;"	d
PA4_WPORT	src/fastio.h	1417;"	d
PA4_WPORT	src/fastio.h	2310;"	d
PA4_WPORT	src/fastio.h	733;"	d
PA5	src/fastio.h	1420;"	d
PA5	src/fastio.h	2313;"	d
PA5	src/fastio.h	737;"	d
PA5_DDR	src/fastio.h	1424;"	d
PA5_DDR	src/fastio.h	2318;"	d
PA5_DDR	src/fastio.h	741;"	d
PA5_PIN	src/fastio.h	1421;"	d
PA5_PIN	src/fastio.h	2314;"	d
PA5_PIN	src/fastio.h	738;"	d
PA5_PWM	src/fastio.h	1425;"	d
PA5_PWM	src/fastio.h	2317;"	d
PA5_PWM	src/fastio.h	742;"	d
PA5_RPORT	src/fastio.h	1422;"	d
PA5_RPORT	src/fastio.h	2315;"	d
PA5_RPORT	src/fastio.h	739;"	d
PA5_WPORT	src/fastio.h	1423;"	d
PA5_WPORT	src/fastio.h	2316;"	d
PA5_WPORT	src/fastio.h	740;"	d
PA6	src/fastio.h	1426;"	d
PA6	src/fastio.h	2319;"	d
PA6	src/fastio.h	744;"	d
PA6_DDR	src/fastio.h	1430;"	d
PA6_DDR	src/fastio.h	2324;"	d
PA6_DDR	src/fastio.h	748;"	d
PA6_PIN	src/fastio.h	1427;"	d
PA6_PIN	src/fastio.h	2320;"	d
PA6_PIN	src/fastio.h	745;"	d
PA6_PWM	src/fastio.h	1431;"	d
PA6_PWM	src/fastio.h	2323;"	d
PA6_PWM	src/fastio.h	749;"	d
PA6_RPORT	src/fastio.h	1428;"	d
PA6_RPORT	src/fastio.h	2321;"	d
PA6_RPORT	src/fastio.h	746;"	d
PA6_WPORT	src/fastio.h	1429;"	d
PA6_WPORT	src/fastio.h	2322;"	d
PA6_WPORT	src/fastio.h	747;"	d
PA7	src/fastio.h	1432;"	d
PA7	src/fastio.h	2325;"	d
PA7	src/fastio.h	751;"	d
PA7_DDR	src/fastio.h	1436;"	d
PA7_DDR	src/fastio.h	2330;"	d
PA7_DDR	src/fastio.h	755;"	d
PA7_PIN	src/fastio.h	1433;"	d
PA7_PIN	src/fastio.h	2326;"	d
PA7_PIN	src/fastio.h	752;"	d
PA7_PWM	src/fastio.h	1437;"	d
PA7_PWM	src/fastio.h	2329;"	d
PA7_PWM	src/fastio.h	756;"	d
PA7_RPORT	src/fastio.h	1434;"	d
PA7_RPORT	src/fastio.h	2327;"	d
PA7_RPORT	src/fastio.h	753;"	d
PA7_WPORT	src/fastio.h	1435;"	d
PA7_WPORT	src/fastio.h	2328;"	d
PA7_WPORT	src/fastio.h	754;"	d
PB0	src/fastio.h	1439;"	d
PB0	src/fastio.h	2332;"	d
PB0	src/fastio.h	256;"	d
PB0	src/fastio.h	759;"	d
PB0_DDR	src/fastio.h	1443;"	d
PB0_DDR	src/fastio.h	2337;"	d
PB0_DDR	src/fastio.h	260;"	d
PB0_DDR	src/fastio.h	763;"	d
PB0_PIN	src/fastio.h	1440;"	d
PB0_PIN	src/fastio.h	2333;"	d
PB0_PIN	src/fastio.h	257;"	d
PB0_PIN	src/fastio.h	760;"	d
PB0_PWM	src/fastio.h	1444;"	d
PB0_PWM	src/fastio.h	2336;"	d
PB0_PWM	src/fastio.h	261;"	d
PB0_PWM	src/fastio.h	764;"	d
PB0_RPORT	src/fastio.h	1441;"	d
PB0_RPORT	src/fastio.h	2334;"	d
PB0_RPORT	src/fastio.h	258;"	d
PB0_RPORT	src/fastio.h	761;"	d
PB0_WPORT	src/fastio.h	1442;"	d
PB0_WPORT	src/fastio.h	2335;"	d
PB0_WPORT	src/fastio.h	259;"	d
PB0_WPORT	src/fastio.h	762;"	d
PB1	src/fastio.h	1445;"	d
PB1	src/fastio.h	2338;"	d
PB1	src/fastio.h	263;"	d
PB1	src/fastio.h	766;"	d
PB1_DDR	src/fastio.h	1449;"	d
PB1_DDR	src/fastio.h	2343;"	d
PB1_DDR	src/fastio.h	267;"	d
PB1_DDR	src/fastio.h	770;"	d
PB1_PIN	src/fastio.h	1446;"	d
PB1_PIN	src/fastio.h	2339;"	d
PB1_PIN	src/fastio.h	264;"	d
PB1_PIN	src/fastio.h	767;"	d
PB1_PWM	src/fastio.h	1450;"	d
PB1_PWM	src/fastio.h	2342;"	d
PB1_PWM	src/fastio.h	268;"	d
PB1_PWM	src/fastio.h	771;"	d
PB1_RPORT	src/fastio.h	1447;"	d
PB1_RPORT	src/fastio.h	2340;"	d
PB1_RPORT	src/fastio.h	265;"	d
PB1_RPORT	src/fastio.h	768;"	d
PB1_WPORT	src/fastio.h	1448;"	d
PB1_WPORT	src/fastio.h	2341;"	d
PB1_WPORT	src/fastio.h	266;"	d
PB1_WPORT	src/fastio.h	769;"	d
PB2	src/fastio.h	1451;"	d
PB2	src/fastio.h	2344;"	d
PB2	src/fastio.h	270;"	d
PB2	src/fastio.h	773;"	d
PB2_DDR	src/fastio.h	1455;"	d
PB2_DDR	src/fastio.h	2349;"	d
PB2_DDR	src/fastio.h	274;"	d
PB2_DDR	src/fastio.h	777;"	d
PB2_PIN	src/fastio.h	1452;"	d
PB2_PIN	src/fastio.h	2345;"	d
PB2_PIN	src/fastio.h	271;"	d
PB2_PIN	src/fastio.h	774;"	d
PB2_PWM	src/fastio.h	1456;"	d
PB2_PWM	src/fastio.h	2348;"	d
PB2_PWM	src/fastio.h	275;"	d
PB2_PWM	src/fastio.h	778;"	d
PB2_RPORT	src/fastio.h	1453;"	d
PB2_RPORT	src/fastio.h	2346;"	d
PB2_RPORT	src/fastio.h	272;"	d
PB2_RPORT	src/fastio.h	775;"	d
PB2_WPORT	src/fastio.h	1454;"	d
PB2_WPORT	src/fastio.h	2347;"	d
PB2_WPORT	src/fastio.h	273;"	d
PB2_WPORT	src/fastio.h	776;"	d
PB3	src/fastio.h	1457;"	d
PB3	src/fastio.h	2350;"	d
PB3	src/fastio.h	277;"	d
PB3	src/fastio.h	780;"	d
PB3_DDR	src/fastio.h	1461;"	d
PB3_DDR	src/fastio.h	2355;"	d
PB3_DDR	src/fastio.h	281;"	d
PB3_DDR	src/fastio.h	784;"	d
PB3_PIN	src/fastio.h	1458;"	d
PB3_PIN	src/fastio.h	2351;"	d
PB3_PIN	src/fastio.h	278;"	d
PB3_PIN	src/fastio.h	781;"	d
PB3_PWM	src/fastio.h	1462;"	d
PB3_PWM	src/fastio.h	2354;"	d
PB3_PWM	src/fastio.h	282;"	d
PB3_PWM	src/fastio.h	785;"	d
PB3_RPORT	src/fastio.h	1459;"	d
PB3_RPORT	src/fastio.h	2352;"	d
PB3_RPORT	src/fastio.h	279;"	d
PB3_RPORT	src/fastio.h	782;"	d
PB3_WPORT	src/fastio.h	1460;"	d
PB3_WPORT	src/fastio.h	2353;"	d
PB3_WPORT	src/fastio.h	280;"	d
PB3_WPORT	src/fastio.h	783;"	d
PB4	src/fastio.h	1463;"	d
PB4	src/fastio.h	2356;"	d
PB4	src/fastio.h	284;"	d
PB4	src/fastio.h	787;"	d
PB4_DDR	src/fastio.h	1467;"	d
PB4_DDR	src/fastio.h	2361;"	d
PB4_DDR	src/fastio.h	288;"	d
PB4_DDR	src/fastio.h	791;"	d
PB4_PIN	src/fastio.h	1464;"	d
PB4_PIN	src/fastio.h	2357;"	d
PB4_PIN	src/fastio.h	285;"	d
PB4_PIN	src/fastio.h	788;"	d
PB4_PWM	src/fastio.h	1468;"	d
PB4_PWM	src/fastio.h	2360;"	d
PB4_PWM	src/fastio.h	289;"	d
PB4_PWM	src/fastio.h	792;"	d
PB4_RPORT	src/fastio.h	1465;"	d
PB4_RPORT	src/fastio.h	2358;"	d
PB4_RPORT	src/fastio.h	286;"	d
PB4_RPORT	src/fastio.h	789;"	d
PB4_WPORT	src/fastio.h	1466;"	d
PB4_WPORT	src/fastio.h	2359;"	d
PB4_WPORT	src/fastio.h	287;"	d
PB4_WPORT	src/fastio.h	790;"	d
PB5	src/fastio.h	1469;"	d
PB5	src/fastio.h	2362;"	d
PB5	src/fastio.h	291;"	d
PB5	src/fastio.h	794;"	d
PB5_DDR	src/fastio.h	1473;"	d
PB5_DDR	src/fastio.h	2367;"	d
PB5_DDR	src/fastio.h	295;"	d
PB5_DDR	src/fastio.h	798;"	d
PB5_PIN	src/fastio.h	1470;"	d
PB5_PIN	src/fastio.h	2363;"	d
PB5_PIN	src/fastio.h	292;"	d
PB5_PIN	src/fastio.h	795;"	d
PB5_PWM	src/fastio.h	1474;"	d
PB5_PWM	src/fastio.h	2366;"	d
PB5_PWM	src/fastio.h	296;"	d
PB5_PWM	src/fastio.h	799;"	d
PB5_RPORT	src/fastio.h	1471;"	d
PB5_RPORT	src/fastio.h	2364;"	d
PB5_RPORT	src/fastio.h	293;"	d
PB5_RPORT	src/fastio.h	796;"	d
PB5_WPORT	src/fastio.h	1472;"	d
PB5_WPORT	src/fastio.h	2365;"	d
PB5_WPORT	src/fastio.h	294;"	d
PB5_WPORT	src/fastio.h	797;"	d
PB6	src/fastio.h	1475;"	d
PB6	src/fastio.h	2368;"	d
PB6	src/fastio.h	298;"	d
PB6	src/fastio.h	801;"	d
PB6_DDR	src/fastio.h	1479;"	d
PB6_DDR	src/fastio.h	2373;"	d
PB6_DDR	src/fastio.h	302;"	d
PB6_DDR	src/fastio.h	805;"	d
PB6_PIN	src/fastio.h	1476;"	d
PB6_PIN	src/fastio.h	2369;"	d
PB6_PIN	src/fastio.h	299;"	d
PB6_PIN	src/fastio.h	802;"	d
PB6_PWM	src/fastio.h	1480;"	d
PB6_PWM	src/fastio.h	2372;"	d
PB6_PWM	src/fastio.h	303;"	d
PB6_PWM	src/fastio.h	806;"	d
PB6_RPORT	src/fastio.h	1477;"	d
PB6_RPORT	src/fastio.h	2370;"	d
PB6_RPORT	src/fastio.h	300;"	d
PB6_RPORT	src/fastio.h	803;"	d
PB6_WPORT	src/fastio.h	1478;"	d
PB6_WPORT	src/fastio.h	2371;"	d
PB6_WPORT	src/fastio.h	301;"	d
PB6_WPORT	src/fastio.h	804;"	d
PB7	src/fastio.h	1481;"	d
PB7	src/fastio.h	2374;"	d
PB7	src/fastio.h	305;"	d
PB7	src/fastio.h	808;"	d
PB7_DDR	src/fastio.h	1485;"	d
PB7_DDR	src/fastio.h	2379;"	d
PB7_DDR	src/fastio.h	309;"	d
PB7_DDR	src/fastio.h	812;"	d
PB7_PIN	src/fastio.h	1482;"	d
PB7_PIN	src/fastio.h	2375;"	d
PB7_PIN	src/fastio.h	306;"	d
PB7_PIN	src/fastio.h	809;"	d
PB7_PWM	src/fastio.h	1486;"	d
PB7_PWM	src/fastio.h	2378;"	d
PB7_PWM	src/fastio.h	310;"	d
PB7_PWM	src/fastio.h	813;"	d
PB7_RPORT	src/fastio.h	1483;"	d
PB7_RPORT	src/fastio.h	2376;"	d
PB7_RPORT	src/fastio.h	307;"	d
PB7_RPORT	src/fastio.h	810;"	d
PB7_WPORT	src/fastio.h	1484;"	d
PB7_WPORT	src/fastio.h	2377;"	d
PB7_WPORT	src/fastio.h	308;"	d
PB7_WPORT	src/fastio.h	811;"	d
PC0	src/fastio.h	1488;"	d
PC0	src/fastio.h	2381;"	d
PC0	src/fastio.h	313;"	d
PC0	src/fastio.h	816;"	d
PC0_DDR	src/fastio.h	1492;"	d
PC0_DDR	src/fastio.h	2386;"	d
PC0_DDR	src/fastio.h	317;"	d
PC0_DDR	src/fastio.h	820;"	d
PC0_PIN	src/fastio.h	1489;"	d
PC0_PIN	src/fastio.h	2382;"	d
PC0_PIN	src/fastio.h	314;"	d
PC0_PIN	src/fastio.h	817;"	d
PC0_PWM	src/fastio.h	1493;"	d
PC0_PWM	src/fastio.h	2385;"	d
PC0_PWM	src/fastio.h	318;"	d
PC0_PWM	src/fastio.h	821;"	d
PC0_RPORT	src/fastio.h	1490;"	d
PC0_RPORT	src/fastio.h	2383;"	d
PC0_RPORT	src/fastio.h	315;"	d
PC0_RPORT	src/fastio.h	818;"	d
PC0_WPORT	src/fastio.h	1491;"	d
PC0_WPORT	src/fastio.h	2384;"	d
PC0_WPORT	src/fastio.h	316;"	d
PC0_WPORT	src/fastio.h	819;"	d
PC1	src/fastio.h	1494;"	d
PC1	src/fastio.h	2387;"	d
PC1	src/fastio.h	320;"	d
PC1	src/fastio.h	823;"	d
PC1_DDR	src/fastio.h	1498;"	d
PC1_DDR	src/fastio.h	2392;"	d
PC1_DDR	src/fastio.h	324;"	d
PC1_DDR	src/fastio.h	827;"	d
PC1_PIN	src/fastio.h	1495;"	d
PC1_PIN	src/fastio.h	2388;"	d
PC1_PIN	src/fastio.h	321;"	d
PC1_PIN	src/fastio.h	824;"	d
PC1_PWM	src/fastio.h	1499;"	d
PC1_PWM	src/fastio.h	2391;"	d
PC1_PWM	src/fastio.h	325;"	d
PC1_PWM	src/fastio.h	828;"	d
PC1_RPORT	src/fastio.h	1496;"	d
PC1_RPORT	src/fastio.h	2389;"	d
PC1_RPORT	src/fastio.h	322;"	d
PC1_RPORT	src/fastio.h	825;"	d
PC1_WPORT	src/fastio.h	1497;"	d
PC1_WPORT	src/fastio.h	2390;"	d
PC1_WPORT	src/fastio.h	323;"	d
PC1_WPORT	src/fastio.h	826;"	d
PC2	src/fastio.h	1500;"	d
PC2	src/fastio.h	2393;"	d
PC2	src/fastio.h	327;"	d
PC2	src/fastio.h	830;"	d
PC2_DDR	src/fastio.h	1504;"	d
PC2_DDR	src/fastio.h	2398;"	d
PC2_DDR	src/fastio.h	331;"	d
PC2_DDR	src/fastio.h	834;"	d
PC2_PIN	src/fastio.h	1501;"	d
PC2_PIN	src/fastio.h	2394;"	d
PC2_PIN	src/fastio.h	328;"	d
PC2_PIN	src/fastio.h	831;"	d
PC2_PWM	src/fastio.h	1505;"	d
PC2_PWM	src/fastio.h	2397;"	d
PC2_PWM	src/fastio.h	332;"	d
PC2_PWM	src/fastio.h	835;"	d
PC2_RPORT	src/fastio.h	1502;"	d
PC2_RPORT	src/fastio.h	2395;"	d
PC2_RPORT	src/fastio.h	329;"	d
PC2_RPORT	src/fastio.h	832;"	d
PC2_WPORT	src/fastio.h	1503;"	d
PC2_WPORT	src/fastio.h	2396;"	d
PC2_WPORT	src/fastio.h	330;"	d
PC2_WPORT	src/fastio.h	833;"	d
PC3	src/fastio.h	1506;"	d
PC3	src/fastio.h	2399;"	d
PC3	src/fastio.h	334;"	d
PC3	src/fastio.h	837;"	d
PC3_DDR	src/fastio.h	1510;"	d
PC3_DDR	src/fastio.h	2404;"	d
PC3_DDR	src/fastio.h	338;"	d
PC3_DDR	src/fastio.h	841;"	d
PC3_PIN	src/fastio.h	1507;"	d
PC3_PIN	src/fastio.h	2400;"	d
PC3_PIN	src/fastio.h	335;"	d
PC3_PIN	src/fastio.h	838;"	d
PC3_PWM	src/fastio.h	1511;"	d
PC3_PWM	src/fastio.h	2403;"	d
PC3_PWM	src/fastio.h	339;"	d
PC3_PWM	src/fastio.h	842;"	d
PC3_RPORT	src/fastio.h	1508;"	d
PC3_RPORT	src/fastio.h	2401;"	d
PC3_RPORT	src/fastio.h	336;"	d
PC3_RPORT	src/fastio.h	839;"	d
PC3_WPORT	src/fastio.h	1509;"	d
PC3_WPORT	src/fastio.h	2402;"	d
PC3_WPORT	src/fastio.h	337;"	d
PC3_WPORT	src/fastio.h	840;"	d
PC4	src/fastio.h	1512;"	d
PC4	src/fastio.h	2405;"	d
PC4	src/fastio.h	341;"	d
PC4	src/fastio.h	844;"	d
PC4_DDR	src/fastio.h	1516;"	d
PC4_DDR	src/fastio.h	2410;"	d
PC4_DDR	src/fastio.h	345;"	d
PC4_DDR	src/fastio.h	848;"	d
PC4_PIN	src/fastio.h	1513;"	d
PC4_PIN	src/fastio.h	2406;"	d
PC4_PIN	src/fastio.h	342;"	d
PC4_PIN	src/fastio.h	845;"	d
PC4_PWM	src/fastio.h	1517;"	d
PC4_PWM	src/fastio.h	2409;"	d
PC4_PWM	src/fastio.h	346;"	d
PC4_PWM	src/fastio.h	849;"	d
PC4_RPORT	src/fastio.h	1514;"	d
PC4_RPORT	src/fastio.h	2407;"	d
PC4_RPORT	src/fastio.h	343;"	d
PC4_RPORT	src/fastio.h	846;"	d
PC4_WPORT	src/fastio.h	1515;"	d
PC4_WPORT	src/fastio.h	2408;"	d
PC4_WPORT	src/fastio.h	344;"	d
PC4_WPORT	src/fastio.h	847;"	d
PC5	src/fastio.h	1518;"	d
PC5	src/fastio.h	2411;"	d
PC5	src/fastio.h	348;"	d
PC5	src/fastio.h	851;"	d
PC5_DDR	src/fastio.h	1522;"	d
PC5_DDR	src/fastio.h	2416;"	d
PC5_DDR	src/fastio.h	352;"	d
PC5_DDR	src/fastio.h	855;"	d
PC5_PIN	src/fastio.h	1519;"	d
PC5_PIN	src/fastio.h	2412;"	d
PC5_PIN	src/fastio.h	349;"	d
PC5_PIN	src/fastio.h	852;"	d
PC5_PWM	src/fastio.h	1523;"	d
PC5_PWM	src/fastio.h	2415;"	d
PC5_PWM	src/fastio.h	353;"	d
PC5_PWM	src/fastio.h	856;"	d
PC5_RPORT	src/fastio.h	1520;"	d
PC5_RPORT	src/fastio.h	2413;"	d
PC5_RPORT	src/fastio.h	350;"	d
PC5_RPORT	src/fastio.h	853;"	d
PC5_WPORT	src/fastio.h	1521;"	d
PC5_WPORT	src/fastio.h	2414;"	d
PC5_WPORT	src/fastio.h	351;"	d
PC5_WPORT	src/fastio.h	854;"	d
PC6	src/fastio.h	1524;"	d
PC6	src/fastio.h	2417;"	d
PC6	src/fastio.h	355;"	d
PC6	src/fastio.h	858;"	d
PC6_DDR	src/fastio.h	1528;"	d
PC6_DDR	src/fastio.h	2422;"	d
PC6_DDR	src/fastio.h	359;"	d
PC6_DDR	src/fastio.h	862;"	d
PC6_PIN	src/fastio.h	1525;"	d
PC6_PIN	src/fastio.h	2418;"	d
PC6_PIN	src/fastio.h	356;"	d
PC6_PIN	src/fastio.h	859;"	d
PC6_PWM	src/fastio.h	1529;"	d
PC6_PWM	src/fastio.h	2421;"	d
PC6_PWM	src/fastio.h	360;"	d
PC6_PWM	src/fastio.h	863;"	d
PC6_RPORT	src/fastio.h	1526;"	d
PC6_RPORT	src/fastio.h	2419;"	d
PC6_RPORT	src/fastio.h	357;"	d
PC6_RPORT	src/fastio.h	860;"	d
PC6_WPORT	src/fastio.h	1527;"	d
PC6_WPORT	src/fastio.h	2420;"	d
PC6_WPORT	src/fastio.h	358;"	d
PC6_WPORT	src/fastio.h	861;"	d
PC7	src/fastio.h	1530;"	d
PC7	src/fastio.h	2423;"	d
PC7	src/fastio.h	362;"	d
PC7	src/fastio.h	865;"	d
PC7_DDR	src/fastio.h	1534;"	d
PC7_DDR	src/fastio.h	2428;"	d
PC7_DDR	src/fastio.h	366;"	d
PC7_DDR	src/fastio.h	869;"	d
PC7_PIN	src/fastio.h	1531;"	d
PC7_PIN	src/fastio.h	2424;"	d
PC7_PIN	src/fastio.h	363;"	d
PC7_PIN	src/fastio.h	866;"	d
PC7_PWM	src/fastio.h	1535;"	d
PC7_PWM	src/fastio.h	2427;"	d
PC7_PWM	src/fastio.h	367;"	d
PC7_PWM	src/fastio.h	870;"	d
PC7_RPORT	src/fastio.h	1532;"	d
PC7_RPORT	src/fastio.h	2425;"	d
PC7_RPORT	src/fastio.h	364;"	d
PC7_RPORT	src/fastio.h	867;"	d
PC7_WPORT	src/fastio.h	1533;"	d
PC7_WPORT	src/fastio.h	2426;"	d
PC7_WPORT	src/fastio.h	365;"	d
PC7_WPORT	src/fastio.h	868;"	d
PD0	src/fastio.h	1537;"	d
PD0	src/fastio.h	2430;"	d
PD0	src/fastio.h	370;"	d
PD0	src/fastio.h	873;"	d
PD0_DDR	src/fastio.h	1541;"	d
PD0_DDR	src/fastio.h	2435;"	d
PD0_DDR	src/fastio.h	374;"	d
PD0_DDR	src/fastio.h	877;"	d
PD0_PIN	src/fastio.h	1538;"	d
PD0_PIN	src/fastio.h	2431;"	d
PD0_PIN	src/fastio.h	371;"	d
PD0_PIN	src/fastio.h	874;"	d
PD0_PWM	src/fastio.h	1542;"	d
PD0_PWM	src/fastio.h	2434;"	d
PD0_PWM	src/fastio.h	375;"	d
PD0_PWM	src/fastio.h	878;"	d
PD0_RPORT	src/fastio.h	1539;"	d
PD0_RPORT	src/fastio.h	2432;"	d
PD0_RPORT	src/fastio.h	372;"	d
PD0_RPORT	src/fastio.h	875;"	d
PD0_WPORT	src/fastio.h	1540;"	d
PD0_WPORT	src/fastio.h	2433;"	d
PD0_WPORT	src/fastio.h	373;"	d
PD0_WPORT	src/fastio.h	876;"	d
PD1	src/fastio.h	1543;"	d
PD1	src/fastio.h	2436;"	d
PD1	src/fastio.h	377;"	d
PD1	src/fastio.h	880;"	d
PD1_DDR	src/fastio.h	1547;"	d
PD1_DDR	src/fastio.h	2441;"	d
PD1_DDR	src/fastio.h	381;"	d
PD1_DDR	src/fastio.h	884;"	d
PD1_PIN	src/fastio.h	1544;"	d
PD1_PIN	src/fastio.h	2437;"	d
PD1_PIN	src/fastio.h	378;"	d
PD1_PIN	src/fastio.h	881;"	d
PD1_PWM	src/fastio.h	1548;"	d
PD1_PWM	src/fastio.h	2440;"	d
PD1_PWM	src/fastio.h	382;"	d
PD1_PWM	src/fastio.h	885;"	d
PD1_RPORT	src/fastio.h	1545;"	d
PD1_RPORT	src/fastio.h	2438;"	d
PD1_RPORT	src/fastio.h	379;"	d
PD1_RPORT	src/fastio.h	882;"	d
PD1_WPORT	src/fastio.h	1546;"	d
PD1_WPORT	src/fastio.h	2439;"	d
PD1_WPORT	src/fastio.h	380;"	d
PD1_WPORT	src/fastio.h	883;"	d
PD2	src/fastio.h	1549;"	d
PD2	src/fastio.h	2442;"	d
PD2	src/fastio.h	384;"	d
PD2	src/fastio.h	887;"	d
PD2_DDR	src/fastio.h	1553;"	d
PD2_DDR	src/fastio.h	2447;"	d
PD2_DDR	src/fastio.h	388;"	d
PD2_DDR	src/fastio.h	891;"	d
PD2_PIN	src/fastio.h	1550;"	d
PD2_PIN	src/fastio.h	2443;"	d
PD2_PIN	src/fastio.h	385;"	d
PD2_PIN	src/fastio.h	888;"	d
PD2_PWM	src/fastio.h	1554;"	d
PD2_PWM	src/fastio.h	2446;"	d
PD2_PWM	src/fastio.h	389;"	d
PD2_PWM	src/fastio.h	892;"	d
PD2_RPORT	src/fastio.h	1551;"	d
PD2_RPORT	src/fastio.h	2444;"	d
PD2_RPORT	src/fastio.h	386;"	d
PD2_RPORT	src/fastio.h	889;"	d
PD2_WPORT	src/fastio.h	1552;"	d
PD2_WPORT	src/fastio.h	2445;"	d
PD2_WPORT	src/fastio.h	387;"	d
PD2_WPORT	src/fastio.h	890;"	d
PD3	src/fastio.h	1555;"	d
PD3	src/fastio.h	2448;"	d
PD3	src/fastio.h	391;"	d
PD3	src/fastio.h	894;"	d
PD3_DDR	src/fastio.h	1559;"	d
PD3_DDR	src/fastio.h	2453;"	d
PD3_DDR	src/fastio.h	395;"	d
PD3_DDR	src/fastio.h	898;"	d
PD3_PIN	src/fastio.h	1556;"	d
PD3_PIN	src/fastio.h	2449;"	d
PD3_PIN	src/fastio.h	392;"	d
PD3_PIN	src/fastio.h	895;"	d
PD3_PWM	src/fastio.h	1560;"	d
PD3_PWM	src/fastio.h	2452;"	d
PD3_PWM	src/fastio.h	396;"	d
PD3_PWM	src/fastio.h	899;"	d
PD3_RPORT	src/fastio.h	1557;"	d
PD3_RPORT	src/fastio.h	2450;"	d
PD3_RPORT	src/fastio.h	393;"	d
PD3_RPORT	src/fastio.h	896;"	d
PD3_WPORT	src/fastio.h	1558;"	d
PD3_WPORT	src/fastio.h	2451;"	d
PD3_WPORT	src/fastio.h	394;"	d
PD3_WPORT	src/fastio.h	897;"	d
PD4	src/fastio.h	1561;"	d
PD4	src/fastio.h	2454;"	d
PD4	src/fastio.h	398;"	d
PD4	src/fastio.h	901;"	d
PD4_DDR	src/fastio.h	1565;"	d
PD4_DDR	src/fastio.h	2459;"	d
PD4_DDR	src/fastio.h	402;"	d
PD4_DDR	src/fastio.h	905;"	d
PD4_PIN	src/fastio.h	1562;"	d
PD4_PIN	src/fastio.h	2455;"	d
PD4_PIN	src/fastio.h	399;"	d
PD4_PIN	src/fastio.h	902;"	d
PD4_PWM	src/fastio.h	1566;"	d
PD4_PWM	src/fastio.h	2458;"	d
PD4_PWM	src/fastio.h	403;"	d
PD4_PWM	src/fastio.h	906;"	d
PD4_RPORT	src/fastio.h	1563;"	d
PD4_RPORT	src/fastio.h	2456;"	d
PD4_RPORT	src/fastio.h	400;"	d
PD4_RPORT	src/fastio.h	903;"	d
PD4_WPORT	src/fastio.h	1564;"	d
PD4_WPORT	src/fastio.h	2457;"	d
PD4_WPORT	src/fastio.h	401;"	d
PD4_WPORT	src/fastio.h	904;"	d
PD5	src/fastio.h	1567;"	d
PD5	src/fastio.h	2460;"	d
PD5	src/fastio.h	405;"	d
PD5	src/fastio.h	908;"	d
PD5_DDR	src/fastio.h	1571;"	d
PD5_DDR	src/fastio.h	2465;"	d
PD5_DDR	src/fastio.h	409;"	d
PD5_DDR	src/fastio.h	912;"	d
PD5_PIN	src/fastio.h	1568;"	d
PD5_PIN	src/fastio.h	2461;"	d
PD5_PIN	src/fastio.h	406;"	d
PD5_PIN	src/fastio.h	909;"	d
PD5_PWM	src/fastio.h	1572;"	d
PD5_PWM	src/fastio.h	2464;"	d
PD5_PWM	src/fastio.h	410;"	d
PD5_PWM	src/fastio.h	913;"	d
PD5_RPORT	src/fastio.h	1569;"	d
PD5_RPORT	src/fastio.h	2462;"	d
PD5_RPORT	src/fastio.h	407;"	d
PD5_RPORT	src/fastio.h	910;"	d
PD5_WPORT	src/fastio.h	1570;"	d
PD5_WPORT	src/fastio.h	2463;"	d
PD5_WPORT	src/fastio.h	408;"	d
PD5_WPORT	src/fastio.h	911;"	d
PD6	src/fastio.h	1573;"	d
PD6	src/fastio.h	2466;"	d
PD6	src/fastio.h	412;"	d
PD6	src/fastio.h	915;"	d
PD6_DDR	src/fastio.h	1577;"	d
PD6_DDR	src/fastio.h	2471;"	d
PD6_DDR	src/fastio.h	416;"	d
PD6_DDR	src/fastio.h	919;"	d
PD6_PIN	src/fastio.h	1574;"	d
PD6_PIN	src/fastio.h	2467;"	d
PD6_PIN	src/fastio.h	413;"	d
PD6_PIN	src/fastio.h	916;"	d
PD6_PWM	src/fastio.h	1578;"	d
PD6_PWM	src/fastio.h	2470;"	d
PD6_PWM	src/fastio.h	417;"	d
PD6_PWM	src/fastio.h	920;"	d
PD6_RPORT	src/fastio.h	1575;"	d
PD6_RPORT	src/fastio.h	2468;"	d
PD6_RPORT	src/fastio.h	414;"	d
PD6_RPORT	src/fastio.h	917;"	d
PD6_WPORT	src/fastio.h	1576;"	d
PD6_WPORT	src/fastio.h	2469;"	d
PD6_WPORT	src/fastio.h	415;"	d
PD6_WPORT	src/fastio.h	918;"	d
PD7	src/fastio.h	1579;"	d
PD7	src/fastio.h	2472;"	d
PD7	src/fastio.h	419;"	d
PD7	src/fastio.h	922;"	d
PD7_DDR	src/fastio.h	1583;"	d
PD7_DDR	src/fastio.h	2477;"	d
PD7_DDR	src/fastio.h	423;"	d
PD7_DDR	src/fastio.h	926;"	d
PD7_PIN	src/fastio.h	1580;"	d
PD7_PIN	src/fastio.h	2473;"	d
PD7_PIN	src/fastio.h	420;"	d
PD7_PIN	src/fastio.h	923;"	d
PD7_PWM	src/fastio.h	1584;"	d
PD7_PWM	src/fastio.h	2476;"	d
PD7_PWM	src/fastio.h	424;"	d
PD7_PWM	src/fastio.h	927;"	d
PD7_RPORT	src/fastio.h	1581;"	d
PD7_RPORT	src/fastio.h	2474;"	d
PD7_RPORT	src/fastio.h	421;"	d
PD7_RPORT	src/fastio.h	924;"	d
PD7_WPORT	src/fastio.h	1582;"	d
PD7_WPORT	src/fastio.h	2475;"	d
PD7_WPORT	src/fastio.h	422;"	d
PD7_WPORT	src/fastio.h	925;"	d
PE0	src/fastio.h	1586;"	d
PE0	src/fastio.h	2479;"	d
PE0_DDR	src/fastio.h	1590;"	d
PE0_DDR	src/fastio.h	2484;"	d
PE0_PIN	src/fastio.h	1587;"	d
PE0_PIN	src/fastio.h	2480;"	d
PE0_PWM	src/fastio.h	1591;"	d
PE0_PWM	src/fastio.h	2483;"	d
PE0_RPORT	src/fastio.h	1588;"	d
PE0_RPORT	src/fastio.h	2481;"	d
PE0_WPORT	src/fastio.h	1589;"	d
PE0_WPORT	src/fastio.h	2482;"	d
PE1	src/fastio.h	1592;"	d
PE1	src/fastio.h	2485;"	d
PE1_DDR	src/fastio.h	1596;"	d
PE1_DDR	src/fastio.h	2490;"	d
PE1_PIN	src/fastio.h	1593;"	d
PE1_PIN	src/fastio.h	2486;"	d
PE1_PWM	src/fastio.h	1597;"	d
PE1_PWM	src/fastio.h	2489;"	d
PE1_RPORT	src/fastio.h	1594;"	d
PE1_RPORT	src/fastio.h	2487;"	d
PE1_WPORT	src/fastio.h	1595;"	d
PE1_WPORT	src/fastio.h	2488;"	d
PE2	src/fastio.h	1598;"	d
PE2	src/fastio.h	2491;"	d
PE2_DDR	src/fastio.h	1602;"	d
PE2_DDR	src/fastio.h	2496;"	d
PE2_PIN	src/fastio.h	1599;"	d
PE2_PIN	src/fastio.h	2492;"	d
PE2_PWM	src/fastio.h	1603;"	d
PE2_PWM	src/fastio.h	2495;"	d
PE2_RPORT	src/fastio.h	1600;"	d
PE2_RPORT	src/fastio.h	2493;"	d
PE2_WPORT	src/fastio.h	1601;"	d
PE2_WPORT	src/fastio.h	2494;"	d
PE3	src/fastio.h	1604;"	d
PE3	src/fastio.h	2497;"	d
PE3_DDR	src/fastio.h	1608;"	d
PE3_DDR	src/fastio.h	2502;"	d
PE3_PIN	src/fastio.h	1605;"	d
PE3_PIN	src/fastio.h	2498;"	d
PE3_PWM	src/fastio.h	1609;"	d
PE3_PWM	src/fastio.h	2501;"	d
PE3_RPORT	src/fastio.h	1606;"	d
PE3_RPORT	src/fastio.h	2499;"	d
PE3_WPORT	src/fastio.h	1607;"	d
PE3_WPORT	src/fastio.h	2500;"	d
PE4	src/fastio.h	1610;"	d
PE4	src/fastio.h	2503;"	d
PE4_DDR	src/fastio.h	1614;"	d
PE4_DDR	src/fastio.h	2508;"	d
PE4_PIN	src/fastio.h	1611;"	d
PE4_PIN	src/fastio.h	2504;"	d
PE4_PWM	src/fastio.h	1615;"	d
PE4_PWM	src/fastio.h	2507;"	d
PE4_RPORT	src/fastio.h	1612;"	d
PE4_RPORT	src/fastio.h	2505;"	d
PE4_WPORT	src/fastio.h	1613;"	d
PE4_WPORT	src/fastio.h	2506;"	d
PE5	src/fastio.h	1616;"	d
PE5	src/fastio.h	2509;"	d
PE5_DDR	src/fastio.h	1620;"	d
PE5_DDR	src/fastio.h	2514;"	d
PE5_PIN	src/fastio.h	1617;"	d
PE5_PIN	src/fastio.h	2510;"	d
PE5_PWM	src/fastio.h	1621;"	d
PE5_PWM	src/fastio.h	2513;"	d
PE5_RPORT	src/fastio.h	1618;"	d
PE5_RPORT	src/fastio.h	2511;"	d
PE5_WPORT	src/fastio.h	1619;"	d
PE5_WPORT	src/fastio.h	2512;"	d
PE6	src/fastio.h	1622;"	d
PE6	src/fastio.h	2515;"	d
PE6_DDR	src/fastio.h	1626;"	d
PE6_DDR	src/fastio.h	2520;"	d
PE6_PIN	src/fastio.h	1623;"	d
PE6_PIN	src/fastio.h	2516;"	d
PE6_PWM	src/fastio.h	1627;"	d
PE6_PWM	src/fastio.h	2519;"	d
PE6_RPORT	src/fastio.h	1624;"	d
PE6_RPORT	src/fastio.h	2517;"	d
PE6_WPORT	src/fastio.h	1625;"	d
PE6_WPORT	src/fastio.h	2518;"	d
PE7	src/fastio.h	1628;"	d
PE7	src/fastio.h	2521;"	d
PE7_DDR	src/fastio.h	1632;"	d
PE7_DDR	src/fastio.h	2526;"	d
PE7_PIN	src/fastio.h	1629;"	d
PE7_PIN	src/fastio.h	2522;"	d
PE7_PWM	src/fastio.h	1633;"	d
PE7_PWM	src/fastio.h	2525;"	d
PE7_RPORT	src/fastio.h	1630;"	d
PE7_RPORT	src/fastio.h	2523;"	d
PE7_WPORT	src/fastio.h	1631;"	d
PE7_WPORT	src/fastio.h	2524;"	d
PF0	src/fastio.h	1635;"	d
PF0	src/fastio.h	2528;"	d
PF0_DDR	src/fastio.h	1639;"	d
PF0_DDR	src/fastio.h	2533;"	d
PF0_PIN	src/fastio.h	1636;"	d
PF0_PIN	src/fastio.h	2529;"	d
PF0_PWM	src/fastio.h	1640;"	d
PF0_PWM	src/fastio.h	2532;"	d
PF0_RPORT	src/fastio.h	1637;"	d
PF0_RPORT	src/fastio.h	2530;"	d
PF0_WPORT	src/fastio.h	1638;"	d
PF0_WPORT	src/fastio.h	2531;"	d
PF1	src/fastio.h	1641;"	d
PF1	src/fastio.h	2534;"	d
PF1_DDR	src/fastio.h	1645;"	d
PF1_DDR	src/fastio.h	2539;"	d
PF1_PIN	src/fastio.h	1642;"	d
PF1_PIN	src/fastio.h	2535;"	d
PF1_PWM	src/fastio.h	1646;"	d
PF1_PWM	src/fastio.h	2538;"	d
PF1_RPORT	src/fastio.h	1643;"	d
PF1_RPORT	src/fastio.h	2536;"	d
PF1_WPORT	src/fastio.h	1644;"	d
PF1_WPORT	src/fastio.h	2537;"	d
PF2	src/fastio.h	1647;"	d
PF2	src/fastio.h	2540;"	d
PF2_DDR	src/fastio.h	1651;"	d
PF2_DDR	src/fastio.h	2545;"	d
PF2_PIN	src/fastio.h	1648;"	d
PF2_PIN	src/fastio.h	2541;"	d
PF2_PWM	src/fastio.h	1652;"	d
PF2_PWM	src/fastio.h	2544;"	d
PF2_RPORT	src/fastio.h	1649;"	d
PF2_RPORT	src/fastio.h	2542;"	d
PF2_WPORT	src/fastio.h	1650;"	d
PF2_WPORT	src/fastio.h	2543;"	d
PF3	src/fastio.h	1653;"	d
PF3	src/fastio.h	2546;"	d
PF3_DDR	src/fastio.h	1657;"	d
PF3_DDR	src/fastio.h	2551;"	d
PF3_PIN	src/fastio.h	1654;"	d
PF3_PIN	src/fastio.h	2547;"	d
PF3_PWM	src/fastio.h	1658;"	d
PF3_PWM	src/fastio.h	2550;"	d
PF3_RPORT	src/fastio.h	1655;"	d
PF3_RPORT	src/fastio.h	2548;"	d
PF3_WPORT	src/fastio.h	1656;"	d
PF3_WPORT	src/fastio.h	2549;"	d
PF4	src/fastio.h	1659;"	d
PF4	src/fastio.h	2552;"	d
PF4_DDR	src/fastio.h	1663;"	d
PF4_DDR	src/fastio.h	2557;"	d
PF4_PIN	src/fastio.h	1660;"	d
PF4_PIN	src/fastio.h	2553;"	d
PF4_PWM	src/fastio.h	1664;"	d
PF4_PWM	src/fastio.h	2556;"	d
PF4_RPORT	src/fastio.h	1661;"	d
PF4_RPORT	src/fastio.h	2554;"	d
PF4_WPORT	src/fastio.h	1662;"	d
PF4_WPORT	src/fastio.h	2555;"	d
PF5	src/fastio.h	1665;"	d
PF5	src/fastio.h	2558;"	d
PF5_DDR	src/fastio.h	1669;"	d
PF5_DDR	src/fastio.h	2563;"	d
PF5_PIN	src/fastio.h	1666;"	d
PF5_PIN	src/fastio.h	2559;"	d
PF5_PWM	src/fastio.h	1670;"	d
PF5_PWM	src/fastio.h	2562;"	d
PF5_RPORT	src/fastio.h	1667;"	d
PF5_RPORT	src/fastio.h	2560;"	d
PF5_WPORT	src/fastio.h	1668;"	d
PF5_WPORT	src/fastio.h	2561;"	d
PF6	src/fastio.h	1671;"	d
PF6	src/fastio.h	2564;"	d
PF6_DDR	src/fastio.h	1675;"	d
PF6_DDR	src/fastio.h	2569;"	d
PF6_PIN	src/fastio.h	1672;"	d
PF6_PIN	src/fastio.h	2565;"	d
PF6_PWM	src/fastio.h	1676;"	d
PF6_PWM	src/fastio.h	2568;"	d
PF6_RPORT	src/fastio.h	1673;"	d
PF6_RPORT	src/fastio.h	2566;"	d
PF6_WPORT	src/fastio.h	1674;"	d
PF6_WPORT	src/fastio.h	2567;"	d
PF7	src/fastio.h	1677;"	d
PF7	src/fastio.h	2570;"	d
PF7_DDR	src/fastio.h	1681;"	d
PF7_DDR	src/fastio.h	2575;"	d
PF7_PIN	src/fastio.h	1678;"	d
PF7_PIN	src/fastio.h	2571;"	d
PF7_PWM	src/fastio.h	1682;"	d
PF7_PWM	src/fastio.h	2574;"	d
PF7_RPORT	src/fastio.h	1679;"	d
PF7_RPORT	src/fastio.h	2572;"	d
PF7_WPORT	src/fastio.h	1680;"	d
PF7_WPORT	src/fastio.h	2573;"	d
PG0	src/fastio.h	1684;"	d
PG0_DDR	src/fastio.h	1688;"	d
PG0_PIN	src/fastio.h	1685;"	d
PG0_PWM	src/fastio.h	1689;"	d
PG0_RPORT	src/fastio.h	1686;"	d
PG0_WPORT	src/fastio.h	1687;"	d
PG1	src/fastio.h	1690;"	d
PG1_DDR	src/fastio.h	1694;"	d
PG1_PIN	src/fastio.h	1691;"	d
PG1_PWM	src/fastio.h	1695;"	d
PG1_RPORT	src/fastio.h	1692;"	d
PG1_WPORT	src/fastio.h	1693;"	d
PG2	src/fastio.h	1696;"	d
PG2_DDR	src/fastio.h	1700;"	d
PG2_PIN	src/fastio.h	1697;"	d
PG2_PWM	src/fastio.h	1701;"	d
PG2_RPORT	src/fastio.h	1698;"	d
PG2_WPORT	src/fastio.h	1699;"	d
PG3	src/fastio.h	1702;"	d
PG3_DDR	src/fastio.h	1706;"	d
PG3_PIN	src/fastio.h	1703;"	d
PG3_PWM	src/fastio.h	1707;"	d
PG3_RPORT	src/fastio.h	1704;"	d
PG3_WPORT	src/fastio.h	1705;"	d
PG4	src/fastio.h	1708;"	d
PG4_DDR	src/fastio.h	1712;"	d
PG4_PIN	src/fastio.h	1709;"	d
PG4_PWM	src/fastio.h	1713;"	d
PG4_RPORT	src/fastio.h	1710;"	d
PG4_WPORT	src/fastio.h	1711;"	d
PG5	src/fastio.h	1714;"	d
PG5_DDR	src/fastio.h	1718;"	d
PG5_PIN	src/fastio.h	1715;"	d
PG5_PWM	src/fastio.h	1719;"	d
PG5_RPORT	src/fastio.h	1716;"	d
PG5_WPORT	src/fastio.h	1717;"	d
PG6	src/fastio.h	1720;"	d
PG6_DDR	src/fastio.h	1724;"	d
PG6_PIN	src/fastio.h	1721;"	d
PG6_PWM	src/fastio.h	1725;"	d
PG6_RPORT	src/fastio.h	1722;"	d
PG6_WPORT	src/fastio.h	1723;"	d
PG7	src/fastio.h	1726;"	d
PG7_DDR	src/fastio.h	1730;"	d
PG7_PIN	src/fastio.h	1727;"	d
PG7_PWM	src/fastio.h	1731;"	d
PG7_RPORT	src/fastio.h	1728;"	d
PG7_WPORT	src/fastio.h	1729;"	d
PGM_RD_W	src/temperature.cpp	377;"	d	file:
PH0	src/fastio.h	1733;"	d
PH0_DDR	src/fastio.h	1737;"	d
PH0_PIN	src/fastio.h	1734;"	d
PH0_PWM	src/fastio.h	1738;"	d
PH0_RPORT	src/fastio.h	1735;"	d
PH0_WPORT	src/fastio.h	1736;"	d
PH1	src/fastio.h	1739;"	d
PH1_DDR	src/fastio.h	1743;"	d
PH1_PIN	src/fastio.h	1740;"	d
PH1_PWM	src/fastio.h	1744;"	d
PH1_RPORT	src/fastio.h	1741;"	d
PH1_WPORT	src/fastio.h	1742;"	d
PH2	src/fastio.h	1745;"	d
PH2_DDR	src/fastio.h	1749;"	d
PH2_PIN	src/fastio.h	1746;"	d
PH2_PWM	src/fastio.h	1750;"	d
PH2_RPORT	src/fastio.h	1747;"	d
PH2_WPORT	src/fastio.h	1748;"	d
PH3	src/fastio.h	1751;"	d
PH3_DDR	src/fastio.h	1755;"	d
PH3_PIN	src/fastio.h	1752;"	d
PH3_PWM	src/fastio.h	1756;"	d
PH3_RPORT	src/fastio.h	1753;"	d
PH3_WPORT	src/fastio.h	1754;"	d
PH4	src/fastio.h	1757;"	d
PH4_DDR	src/fastio.h	1761;"	d
PH4_PIN	src/fastio.h	1758;"	d
PH4_PWM	src/fastio.h	1762;"	d
PH4_RPORT	src/fastio.h	1759;"	d
PH4_WPORT	src/fastio.h	1760;"	d
PH5	src/fastio.h	1763;"	d
PH5_DDR	src/fastio.h	1767;"	d
PH5_PIN	src/fastio.h	1764;"	d
PH5_PWM	src/fastio.h	1768;"	d
PH5_RPORT	src/fastio.h	1765;"	d
PH5_WPORT	src/fastio.h	1766;"	d
PH6	src/fastio.h	1769;"	d
PH6_DDR	src/fastio.h	1773;"	d
PH6_PIN	src/fastio.h	1770;"	d
PH6_PWM	src/fastio.h	1774;"	d
PH6_RPORT	src/fastio.h	1771;"	d
PH6_WPORT	src/fastio.h	1772;"	d
PH7	src/fastio.h	1775;"	d
PH7_DDR	src/fastio.h	1779;"	d
PH7_PIN	src/fastio.h	1776;"	d
PH7_PWM	src/fastio.h	1780;"	d
PH7_RPORT	src/fastio.h	1777;"	d
PH7_WPORT	src/fastio.h	1778;"	d
PI	src/wiring.h	49;"	d
PIDTEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	52;"	d
PIDTEMP	src/Configuration.h	52;"	d
PID_ADD_EXTRUSION_RATE	src/Configuration_adv.h	33;"	d
PID_INTEGRAL_DRIVE_MAX	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	57;"	d
PID_INTEGRAL_DRIVE_MAX	src/Configuration.h	57;"	d
PID_MAX	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	53;"	d
PID_MAX	src/Configuration.h	53;"	d
PID_autotune	src/temperature.cpp	/^void PID_autotune(float temp)$/;"	f
PID_dT	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	59;"	d
PID_dT	src/Configuration.h	59;"	d
PINS_H	src/pins.h	2;"	d
PJ0	src/fastio.h	1782;"	d
PJ0_DDR	src/fastio.h	1786;"	d
PJ0_PIN	src/fastio.h	1783;"	d
PJ0_PWM	src/fastio.h	1787;"	d
PJ0_RPORT	src/fastio.h	1784;"	d
PJ0_WPORT	src/fastio.h	1785;"	d
PJ1	src/fastio.h	1788;"	d
PJ1_DDR	src/fastio.h	1792;"	d
PJ1_PIN	src/fastio.h	1789;"	d
PJ1_PWM	src/fastio.h	1793;"	d
PJ1_RPORT	src/fastio.h	1790;"	d
PJ1_WPORT	src/fastio.h	1791;"	d
PJ2	src/fastio.h	1794;"	d
PJ2_DDR	src/fastio.h	1798;"	d
PJ2_PIN	src/fastio.h	1795;"	d
PJ2_PWM	src/fastio.h	1799;"	d
PJ2_RPORT	src/fastio.h	1796;"	d
PJ2_WPORT	src/fastio.h	1797;"	d
PJ3	src/fastio.h	1800;"	d
PJ3_DDR	src/fastio.h	1804;"	d
PJ3_PIN	src/fastio.h	1801;"	d
PJ3_PWM	src/fastio.h	1805;"	d
PJ3_RPORT	src/fastio.h	1802;"	d
PJ3_WPORT	src/fastio.h	1803;"	d
PJ4	src/fastio.h	1806;"	d
PJ4_DDR	src/fastio.h	1810;"	d
PJ4_PIN	src/fastio.h	1807;"	d
PJ4_PWM	src/fastio.h	1811;"	d
PJ4_RPORT	src/fastio.h	1808;"	d
PJ4_WPORT	src/fastio.h	1809;"	d
PJ5	src/fastio.h	1812;"	d
PJ5_DDR	src/fastio.h	1816;"	d
PJ5_PIN	src/fastio.h	1813;"	d
PJ5_PWM	src/fastio.h	1817;"	d
PJ5_RPORT	src/fastio.h	1814;"	d
PJ5_WPORT	src/fastio.h	1815;"	d
PJ6	src/fastio.h	1818;"	d
PJ6_DDR	src/fastio.h	1822;"	d
PJ6_PIN	src/fastio.h	1819;"	d
PJ6_PWM	src/fastio.h	1823;"	d
PJ6_RPORT	src/fastio.h	1820;"	d
PJ6_WPORT	src/fastio.h	1821;"	d
PJ7	src/fastio.h	1824;"	d
PJ7_DDR	src/fastio.h	1828;"	d
PJ7_PIN	src/fastio.h	1825;"	d
PJ7_PWM	src/fastio.h	1829;"	d
PJ7_RPORT	src/fastio.h	1826;"	d
PJ7_WPORT	src/fastio.h	1827;"	d
PK0	src/fastio.h	1831;"	d
PK0_DDR	src/fastio.h	1835;"	d
PK0_PIN	src/fastio.h	1832;"	d
PK0_PWM	src/fastio.h	1836;"	d
PK0_RPORT	src/fastio.h	1833;"	d
PK0_WPORT	src/fastio.h	1834;"	d
PK1	src/fastio.h	1837;"	d
PK1_DDR	src/fastio.h	1841;"	d
PK1_PIN	src/fastio.h	1838;"	d
PK1_PWM	src/fastio.h	1842;"	d
PK1_RPORT	src/fastio.h	1839;"	d
PK1_WPORT	src/fastio.h	1840;"	d
PK2	src/fastio.h	1843;"	d
PK2_DDR	src/fastio.h	1847;"	d
PK2_PIN	src/fastio.h	1844;"	d
PK2_PWM	src/fastio.h	1848;"	d
PK2_RPORT	src/fastio.h	1845;"	d
PK2_WPORT	src/fastio.h	1846;"	d
PK3	src/fastio.h	1849;"	d
PK3_DDR	src/fastio.h	1853;"	d
PK3_PIN	src/fastio.h	1850;"	d
PK3_PWM	src/fastio.h	1854;"	d
PK3_RPORT	src/fastio.h	1851;"	d
PK3_WPORT	src/fastio.h	1852;"	d
PK4	src/fastio.h	1855;"	d
PK4_DDR	src/fastio.h	1859;"	d
PK4_PIN	src/fastio.h	1856;"	d
PK4_PWM	src/fastio.h	1860;"	d
PK4_RPORT	src/fastio.h	1857;"	d
PK4_WPORT	src/fastio.h	1858;"	d
PK5	src/fastio.h	1861;"	d
PK5_DDR	src/fastio.h	1865;"	d
PK5_PIN	src/fastio.h	1862;"	d
PK5_PWM	src/fastio.h	1866;"	d
PK5_RPORT	src/fastio.h	1863;"	d
PK5_WPORT	src/fastio.h	1864;"	d
PK6	src/fastio.h	1867;"	d
PK6_DDR	src/fastio.h	1871;"	d
PK6_PIN	src/fastio.h	1868;"	d
PK6_PWM	src/fastio.h	1872;"	d
PK6_RPORT	src/fastio.h	1869;"	d
PK6_WPORT	src/fastio.h	1870;"	d
PK7	src/fastio.h	1873;"	d
PK7_DDR	src/fastio.h	1877;"	d
PK7_PIN	src/fastio.h	1874;"	d
PK7_PWM	src/fastio.h	1878;"	d
PK7_RPORT	src/fastio.h	1875;"	d
PK7_WPORT	src/fastio.h	1876;"	d
PL0	src/fastio.h	1880;"	d
PL0_DDR	src/fastio.h	1884;"	d
PL0_PIN	src/fastio.h	1881;"	d
PL0_PWM	src/fastio.h	1885;"	d
PL0_RPORT	src/fastio.h	1882;"	d
PL0_WPORT	src/fastio.h	1883;"	d
PL1	src/fastio.h	1886;"	d
PL1_DDR	src/fastio.h	1890;"	d
PL1_PIN	src/fastio.h	1887;"	d
PL1_PWM	src/fastio.h	1891;"	d
PL1_RPORT	src/fastio.h	1888;"	d
PL1_WPORT	src/fastio.h	1889;"	d
PL2	src/fastio.h	1892;"	d
PL2_DDR	src/fastio.h	1896;"	d
PL2_PIN	src/fastio.h	1893;"	d
PL2_PWM	src/fastio.h	1897;"	d
PL2_RPORT	src/fastio.h	1894;"	d
PL2_WPORT	src/fastio.h	1895;"	d
PL3	src/fastio.h	1898;"	d
PL3_DDR	src/fastio.h	1902;"	d
PL3_PIN	src/fastio.h	1899;"	d
PL3_PWM	src/fastio.h	1903;"	d
PL3_RPORT	src/fastio.h	1900;"	d
PL3_WPORT	src/fastio.h	1901;"	d
PL4	src/fastio.h	1904;"	d
PL4_DDR	src/fastio.h	1908;"	d
PL4_PIN	src/fastio.h	1905;"	d
PL4_PWM	src/fastio.h	1909;"	d
PL4_RPORT	src/fastio.h	1906;"	d
PL4_WPORT	src/fastio.h	1907;"	d
PL5	src/fastio.h	1910;"	d
PL5_DDR	src/fastio.h	1914;"	d
PL5_PIN	src/fastio.h	1911;"	d
PL5_PWM	src/fastio.h	1915;"	d
PL5_RPORT	src/fastio.h	1912;"	d
PL5_WPORT	src/fastio.h	1913;"	d
PL6	src/fastio.h	1916;"	d
PL6_DDR	src/fastio.h	1920;"	d
PL6_PIN	src/fastio.h	1917;"	d
PL6_PWM	src/fastio.h	1921;"	d
PL6_RPORT	src/fastio.h	1918;"	d
PL6_WPORT	src/fastio.h	1919;"	d
PL7	src/fastio.h	1922;"	d
PL7_DDR	src/fastio.h	1926;"	d
PL7_PIN	src/fastio.h	1923;"	d
PL7_PWM	src/fastio.h	1927;"	d
PL7_RPORT	src/fastio.h	1924;"	d
PL7_WPORT	src/fastio.h	1925;"	d
PLA_PREHEAT_FAN_SPEED	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	185;"	d
PLA_PREHEAT_FAN_SPEED	src/Configuration.h	194;"	d
PLA_PREHEAT_HOTEND_TEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	183;"	d
PLA_PREHEAT_HOTEND_TEMP	src/Configuration.h	192;"	d
PLA_PREHEAT_HPB_TEMP	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	184;"	d
PLA_PREHEAT_HPB_TEMP	src/Configuration.h	193;"	d
PREVENT_DANGEROUS_EXTRUDE	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	80;"	d
PREVENT_DANGEROUS_EXTRUDE	src/Configuration.h	87;"	d
PROGMEM	src/Marlin.h	/^const char echomagic[] PROGMEM ="echo:";$/;"	v
PROGMEM	src/Marlin.h	/^const char errormagic[] PROGMEM ="Error:";$/;"	v
PROGMEM	src/speed_lookuptable.h	/^const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {$/;"	v
PROGMEM	src/speed_lookuptable.h	/^const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {\\$/;"	v
PROGMEM	src/speed_lookuptable.h	/^const uint16_t speed_lookuptable_slow[256][2] PROGMEM = {$/;"	v
PROGMEM	src/speed_lookuptable.h	/^const uint16_t speed_lookuptable_slow[256][2] PROGMEM = {\\$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_1[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_2[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_3[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_4[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_5[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_6[][2] PROGMEM = {$/;"	v
PROGMEM	src/thermistortables.h	/^const short temptable_7[][2] PROGMEM = {$/;"	v
PS_ON_PIN	src/pins.h	122;"	d
PS_ON_PIN	src/pins.h	196;"	d
PS_ON_PIN	src/pins.h	287;"	d
PS_ON_PIN	src/pins.h	33;"	d
PS_ON_PIN	src/pins.h	399;"	d
PS_ON_PIN	src/pins.h	470;"	d
PS_ON_PIN	src/pins.h	541;"	d
PS_ON_PIN	src/pins.h	592;"	d
PS_ON_PIN	src/pins.h	681;"	d
PS_ON_PIN	src/pins.h	808;"	d
PS_ON_PIN	src/pins.h	868;"	d
PS_ON_PIN	src/pins.h	915;"	d
PgmPrint	src/SdFatUtil.h	32;"	d
PgmPrintln	src/SdFatUtil.h	34;"	d
R1_IDLE_STATE	src/SdInfo.h	/^uint8_t const R1_IDLE_STATE = 0X01;$/;"	v
R1_ILLEGAL_COMMAND	src/SdInfo.h	/^uint8_t const R1_ILLEGAL_COMMAND = 0X04;$/;"	v
R1_READY_STATE	src/SdInfo.h	/^uint8_t const R1_READY_STATE = 0X00;$/;"	v
RAD_TO_DEG	src/wiring.h	53;"	d
RAMPS_V_1_3	src/pins.h	247;"	d
READ	src/fastio.h	66;"	d
REV_E_DIR	src/stepper.h	29;"	d
REV_E_DIR	src/stepper.h	33;"	d
REV_E_DIR	src/stepper.h	37;"	d
RISING	src/wiring.h	63;"	d
RXD	src/fastio.h	429;"	d
RXD	src/fastio.h	932;"	d
RXD	src/fastio.h	94;"	d
RXD0	src/fastio.h	431;"	d
RXD1	src/fastio.h	434;"	d
RX_BUFFER_SIZE	src/MarlinSerial.h	39;"	d
RX_ENABLE_PIN	src/pins.h	135;"	d
RX_ENABLE_PIN	src/pins.h	548;"	d
SANGUINOLOLU_V_1_2	src/pins.h	560;"	d
SCK	src/fastio.h	1933;"	d
SCK	src/fastio.h	438;"	d
SCK	src/fastio.h	936;"	d
SCK	src/fastio.h	98;"	d
SCK_PIN	src/Sd2PinMap.h	/^uint8_t const SCK_PIN = 13;   \/\/ B5$/;"	v
SCK_PIN	src/Sd2PinMap.h	/^uint8_t const SCK_PIN = 1;   \/\/ B1$/;"	v
SCK_PIN	src/Sd2PinMap.h	/^uint8_t const SCK_PIN = 21;   \/\/ B1$/;"	v
SCK_PIN	src/Sd2PinMap.h	/^uint8_t const SCK_PIN = 52;   \/\/ B1$/;"	v
SCK_PIN	src/Sd2PinMap.h	/^uint8_t const SCK_PIN = 7;   \/\/ B7$/;"	v
SCK_PIN	src/pins.h	874;"	d
SCL	src/fastio.h	104;"	d
SCL	src/fastio.h	444;"	d
SCL	src/fastio.h	942;"	d
SCL_PIN	src/Sd2PinMap.h	/^uint8_t const SCL_PIN = 0;  \/\/ D0$/;"	v
SCL_PIN	src/Sd2PinMap.h	/^uint8_t const SCL_PIN = 18;  \/\/ C2$/;"	v
SCL_PIN	src/Sd2PinMap.h	/^uint8_t const SCL_PIN = 19;  \/\/ C5$/;"	v
SCL_PIN	src/Sd2PinMap.h	/^uint8_t const SCL_PIN = 21;  \/\/ D0$/;"	v
SCL_PIN	src/Sd2PinMap.h	/^uint8_t const SCL_PIN = 5;  \/\/ D0$/;"	v
SDA	src/fastio.h	105;"	d
SDA	src/fastio.h	445;"	d
SDA	src/fastio.h	943;"	d
SDA_PIN	src/Sd2PinMap.h	/^uint8_t const SDA_PIN = 17;  \/\/ C1$/;"	v
SDA_PIN	src/Sd2PinMap.h	/^uint8_t const SDA_PIN = 18;  \/\/ C4$/;"	v
SDA_PIN	src/Sd2PinMap.h	/^uint8_t const SDA_PIN = 1;  \/\/ D1$/;"	v
SDA_PIN	src/Sd2PinMap.h	/^uint8_t const SDA_PIN = 20;  \/\/ D1$/;"	v
SDA_PIN	src/Sd2PinMap.h	/^uint8_t const SDA_PIN = 6;  \/\/ D1$/;"	v
SDCARDDETECT	src/pins.h	206;"	d
SDCARDDETECT	src/pins.h	325;"	d
SDCARDDETECT	src/pins.h	707;"	d
SDCARDDETECT	src/pins.h	737;"	d
SDCARDDETECTINVERTED	src/Configuration_adv.h	165;"	d
SDPOWER	src/pins.h	112;"	d
SDPOWER	src/pins.h	191;"	d
SDPOWER	src/pins.h	278;"	d
SDPOWER	src/pins.h	29;"	d
SDPOWER	src/pins.h	396;"	d
SDPOWER	src/pins.h	466;"	d
SDPOWER	src/pins.h	537;"	d
SDPOWER	src/pins.h	621;"	d
SDPOWER	src/pins.h	677;"	d
SDPOWER	src/pins.h	804;"	d
SDPOWER	src/pins.h	865;"	d
SDPOWER	src/pins.h	929;"	d
SDSS	src/pins.h	113;"	d
SDSS	src/pins.h	192;"	d
SDSS	src/pins.h	279;"	d
SDSS	src/pins.h	30;"	d
SDSS	src/pins.h	397;"	d
SDSS	src/pins.h	467;"	d
SDSS	src/pins.h	538;"	d
SDSS	src/pins.h	622;"	d
SDSS	src/pins.h	678;"	d
SDSS	src/pins.h	805;"	d
SDSS	src/pins.h	866;"	d
SDSS	src/pins.h	930;"	d
SD_CARD_ERROR_ACMD23	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD23 = 0X9;$/;"	v
SD_CARD_ERROR_ACMD41	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD41 = 0XA;$/;"	v
SD_CARD_ERROR_BAD_CSD	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_BAD_CSD = 0XB;$/;"	v
SD_CARD_ERROR_CMD0	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD0 = 0X1;$/;"	v
SD_CARD_ERROR_CMD12	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD12 = 0X3;$/;"	v
SD_CARD_ERROR_CMD17	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD17 = 0X4;$/;"	v
SD_CARD_ERROR_CMD18	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD18 = 0X5;$/;"	v
SD_CARD_ERROR_CMD24	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD24 = 0X6;$/;"	v
SD_CARD_ERROR_CMD25	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD25 = 0X7;$/;"	v
SD_CARD_ERROR_CMD58	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD58 = 0X8;$/;"	v
SD_CARD_ERROR_CMD8	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD8 = 0X2;$/;"	v
SD_CARD_ERROR_ERASE	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE = 0XC;$/;"	v
SD_CARD_ERROR_ERASE_SINGLE_BLOCK	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_SINGLE_BLOCK = 0XD;$/;"	v
SD_CARD_ERROR_ERASE_TIMEOUT	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_TIMEOUT = 0XE;$/;"	v
SD_CARD_ERROR_INIT_NOT_CALLED	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_INIT_NOT_CALLED = 0X19;$/;"	v
SD_CARD_ERROR_READ	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ = 0XF;$/;"	v
SD_CARD_ERROR_READ_REG	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_REG = 0X10;$/;"	v
SD_CARD_ERROR_READ_TIMEOUT	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_TIMEOUT = 0X11;$/;"	v
SD_CARD_ERROR_SCK_RATE	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_SCK_RATE = 0X18;$/;"	v
SD_CARD_ERROR_STOP_TRAN	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_STOP_TRAN = 0X12;$/;"	v
SD_CARD_ERROR_WRITE	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE = 0X13;$/;"	v
SD_CARD_ERROR_WRITE_BLOCK_ZERO	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_BLOCK_ZERO = 0X14;  \/\/ REMOVE - not used$/;"	v
SD_CARD_ERROR_WRITE_MULTIPLE	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_MULTIPLE = 0X15;$/;"	v
SD_CARD_ERROR_WRITE_PROGRAMMING	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_PROGRAMMING = 0X16;$/;"	v
SD_CARD_ERROR_WRITE_TIMEOUT	src/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_TIMEOUT = 0X17;$/;"	v
SD_CARD_TYPE_SD1	src/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD1  = 1;$/;"	v
SD_CARD_TYPE_SD2	src/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD2  = 2;$/;"	v
SD_CARD_TYPE_SDHC	src/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SDHC = 3;$/;"	v
SD_CHIP_SELECT_PIN	src/Sd2Card.h	/^uint8_t const  SD_CHIP_SELECT_PIN = SS_PIN;$/;"	v
SD_CHIP_SELECT_PIN	src/Sd2Card.h	/^uint8_t const SD_CHIP_SELECT_PIN = SOFT_SPI_CS_PIN;$/;"	v
SD_ERASE_TIMEOUT	src/Sd2Card.h	/^uint16_t const SD_ERASE_TIMEOUT = 10000;$/;"	v
SD_FINISHED_RELEASECOMMAND	src/Configuration_adv.h	121;"	d
SD_FINISHED_STEPPERRELEASE	src/Configuration_adv.h	120;"	d
SD_INIT_TIMEOUT	src/Sd2Card.h	/^uint16_t const SD_INIT_TIMEOUT = 2000;$/;"	v
SD_READ_TIMEOUT	src/Sd2Card.h	/^uint16_t const SD_READ_TIMEOUT = 300;$/;"	v
SD_WRITE_TIMEOUT	src/Sd2Card.h	/^uint16_t const SD_WRITE_TIMEOUT = 600;$/;"	v
SENSITIVE_PINS	src/pins.h	961;"	d
SERIAL	src/wiring.h	55;"	d
SERIAL_ECHO	src/Marlin.h	81;"	d
SERIAL_ECHOLN	src/Marlin.h	83;"	d
SERIAL_ECHOLNPGM	src/Marlin.h	84;"	d
SERIAL_ECHOPAIR	src/Marlin.h	86;"	d
SERIAL_ECHOPGM	src/Marlin.h	82;"	d
SERIAL_ECHO_START	src/Marlin.h	80;"	d
SERIAL_ERROR	src/Marlin.h	75;"	d
SERIAL_ERRORLN	src/Marlin.h	77;"	d
SERIAL_ERRORLNPGM	src/Marlin.h	78;"	d
SERIAL_ERRORPGM	src/Marlin.h	76;"	d
SERIAL_ERROR_START	src/Marlin.h	74;"	d
SERIAL_PROTOCOL	src/Marlin.h	66;"	d
SERIAL_PROTOCOLLN	src/Marlin.h	68;"	d
SERIAL_PROTOCOLLNPGM	src/Marlin.h	69;"	d
SERIAL_PROTOCOLPGM	src/Marlin.h	67;"	d
SET_INPUT	src/fastio.h	74;"	d
SET_OUTPUT	src/fastio.h	76;"	d
SET_SPI_SS_HIGH	src/SdFatConfig.h	80;"	d
SHIFT_CLK	src/pins.h	719;"	d
SHIFT_EN	src/pins.h	722;"	d
SHIFT_LD	src/pins.h	720;"	d
SHIFT_OUT	src/pins.h	721;"	d
SIGNAL	src/MarlinSerial.cpp	/^  SIGNAL(USART0_RX_vect)$/;"	f
SLOWDOWN	src/Configuration_adv.h	103;"	d
SOFTWARE_SPI	src/Sd2Card.h	119;"	d
SOFTWARE_SPI	src/Sd2Card.h	121;"	d
SOFT_SPI_CS_PIN	src/SdFatConfig.h	/^uint8_t const SOFT_SPI_CS_PIN = 10;$/;"	v
SOFT_SPI_MISO_PIN	src/SdFatConfig.h	/^uint8_t const SOFT_SPI_MISO_PIN = 12;$/;"	v
SOFT_SPI_MOSI_PIN	src/SdFatConfig.h	/^uint8_t const SOFT_SPI_MOSI_PIN = 11;$/;"	v
SOFT_SPI_SCK_PIN	src/SdFatConfig.h	/^uint8_t const SOFT_SPI_SCK_PIN = 13;$/;"	v
SPEED_LOOKUPTABLE_H	src/speed_lookuptable.h	2;"	d
SPI_EIGHTH_SPEED	src/Sd2Card.h	/^uint8_t const SPI_EIGHTH_SPEED = 3;$/;"	v
SPI_FULL_SPEED	src/Sd2Card.h	/^uint8_t const SPI_FULL_SPEED = 0;$/;"	v
SPI_HALF_SPEED	src/Sd2Card.h	/^uint8_t const SPI_HALF_SPEED = 1;$/;"	v
SPI_MISO_PIN	src/Sd2Card.h	/^uint8_t const  SPI_MISO_PIN = MISO_PIN;$/;"	v
SPI_MISO_PIN	src/Sd2Card.h	/^uint8_t const SPI_MISO_PIN = SOFT_SPI_MISO_PIN;$/;"	v
SPI_MOSI_PIN	src/Sd2Card.h	/^uint8_t const  SPI_MOSI_PIN = MOSI_PIN;$/;"	v
SPI_MOSI_PIN	src/Sd2Card.h	/^uint8_t const SPI_MOSI_PIN = SOFT_SPI_MOSI_PIN;$/;"	v
SPI_QUARTER_SPEED	src/Sd2Card.h	/^uint8_t const SPI_QUARTER_SPEED = 2;$/;"	v
SPI_SCK_PIN	src/Sd2Card.h	/^uint8_t const  SPI_SCK_PIN = SCK_PIN;$/;"	v
SPI_SCK_PIN	src/Sd2Card.h	/^uint8_t const SPI_SCK_PIN = SOFT_SPI_SCK_PIN;$/;"	v
SPI_SD_INIT_RATE	src/SdFatConfig.h	74;"	d
SPI_SIXTEENTH_SPEED	src/Sd2Card.h	/^uint8_t const SPI_SIXTEENTH_SPEED = 4;$/;"	v
SS	src/fastio.h	101;"	d
SS	src/fastio.h	1936;"	d
SS	src/fastio.h	441;"	d
SS	src/fastio.h	939;"	d
SS_PIN	src/Sd2PinMap.h	/^uint8_t const SS_PIN = 0;    \/\/ B0$/;"	v
SS_PIN	src/Sd2PinMap.h	/^uint8_t const SS_PIN = 10;    \/\/ B2$/;"	v
SS_PIN	src/Sd2PinMap.h	/^uint8_t const SS_PIN = 20;    \/\/ B0$/;"	v
SS_PIN	src/Sd2PinMap.h	/^uint8_t const SS_PIN = 4;    \/\/ B4$/;"	v
SS_PIN	src/Sd2PinMap.h	/^uint8_t const SS_PIN = 53;    \/\/ B0$/;"	v
STATUSTIMEOUT	src/ultralcd.h	13;"	d
STEPS_MM_E	src/Configuration_adv.h	146;"	d
STEPS_PER_CUBIC_MM_E	src/Configuration_adv.h	148;"	d
STOP_TRAN_TOKEN	src/SdInfo.h	/^uint8_t const STOP_TRAN_TOKEN = 0XFD;$/;"	v
STRING_CONFIG_H_AUTHOR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	6;"	d
STRING_CONFIG_H_AUTHOR	src/Configuration.h	6;"	d
STRING_VERSION_CONFIG_H	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	5;"	d
STRING_VERSION_CONFIG_H	src/Configuration.h	5;"	d
SUICIDE_PIN	src/pins.h	207;"	d
SUICIDE_PIN	src/pins.h	683;"	d
SUICIDE_PIN	src/pins.h	810;"	d
Sd2Card	src/Sd2Card.h	/^  Sd2Card() : errorCode_(SD_CARD_ERROR_INIT_NOT_CALLED), type_(0) {}$/;"	f	class:Sd2Card
Sd2Card	src/Sd2Card.h	/^class Sd2Card {$/;"	c
Sd2Card_h	src/Sd2Card.h	25;"	d
Sd2PinMap_h	src/Sd2PinMap.h	25;"	d
SdBaseFile	src/SdBaseFile.cpp	/^SdBaseFile::SdBaseFile(const char* path, uint8_t oflag) {$/;"	f	class:SdBaseFile
SdBaseFile	src/SdBaseFile.h	/^  SdBaseFile() : writeError(false), type_(FAT_FILE_TYPE_CLOSED) {}$/;"	f	class:SdBaseFile
SdBaseFile	src/SdBaseFile.h	/^class SdBaseFile {$/;"	c
SdBaseFile_h	src/SdBaseFile.h	24;"	d
SdFatConfig_h	src/SdFatConfig.h	28;"	d
SdFatStructs_h	src/SdFatStructs.h	24;"	d
SdFatUtil	src/SdFatUtil.h	/^namespace SdFatUtil {$/;"	n
SdFatUtil_h	src/SdFatUtil.h	24;"	d
SdFile	src/SdFile.cpp	/^SdFile::SdFile(const char* path, uint8_t oflag) : SdBaseFile(path, oflag) {$/;"	f	class:SdFile
SdFile	src/SdFile.h	/^  SdFile() {}$/;"	f	class:SdFile
SdFile	src/SdFile.h	/^class SdFile : public SdBaseFile, public Print {$/;"	c
SdFile_h	src/SdFile.h	30;"	d
SdInfo_h	src/SdInfo.h	24;"	d
SdVolume	src/SdVolume.h	/^  SdVolume() : fatType_(0) {}$/;"	f	class:SdVolume
SdVolume	src/SdVolume.h	/^class SdVolume {$/;"	c
SdVolume_h	src/SdVolume.h	23;"	d
SerialPrint_P	src/SdFatUtil.cpp	/^void SdFatUtil::SerialPrint_P(PGM_P str) {$/;"	f	class:SdFatUtil
SerialPrintln_P	src/SdFatUtil.cpp	/^void SdFatUtil::SerialPrintln_P(PGM_P str) {$/;"	f	class:SdFatUtil
SerialprintPGM	src/Marlin.h	90;"	d
Sub_MotionControl	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Sub_PrepareMove	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
Sub_TempControl	src/ultralcd.h	/^  enum MainStatus{Main_Status, Main_Menu, Main_Prepare,Sub_PrepareMove, Main_Control, Main_SD,Sub_TempControl,Sub_MotionControl};$/;"	e	enum:MainStatus
TEMP_0_PIN	src/pins.h	101;"	d
TEMP_0_PIN	src/pins.h	181;"	d
TEMP_0_PIN	src/pins.h	297;"	d
TEMP_0_PIN	src/pins.h	39;"	d
TEMP_0_PIN	src/pins.h	413;"	d
TEMP_0_PIN	src/pins.h	476;"	d
TEMP_0_PIN	src/pins.h	522;"	d
TEMP_0_PIN	src/pins.h	617;"	d
TEMP_0_PIN	src/pins.h	661;"	d
TEMP_0_PIN	src/pins.h	788;"	d
TEMP_0_PIN	src/pins.h	860;"	d
TEMP_0_PIN	src/pins.h	926;"	d
TEMP_1_PIN	src/pins.h	102;"	d
TEMP_1_PIN	src/pins.h	182;"	d
TEMP_1_PIN	src/pins.h	298;"	d
TEMP_1_PIN	src/pins.h	40;"	d
TEMP_1_PIN	src/pins.h	414;"	d
TEMP_1_PIN	src/pins.h	477;"	d
TEMP_1_PIN	src/pins.h	523;"	d
TEMP_1_PIN	src/pins.h	618;"	d
TEMP_1_PIN	src/pins.h	664;"	d
TEMP_1_PIN	src/pins.h	791;"	d
TEMP_1_PIN	src/pins.h	861;"	d
TEMP_1_PIN	src/pins.h	927;"	d
TEMP_2_PIN	src/pins.h	103;"	d
TEMP_2_PIN	src/pins.h	183;"	d
TEMP_2_PIN	src/pins.h	299;"	d
TEMP_2_PIN	src/pins.h	415;"	d
TEMP_2_PIN	src/pins.h	41;"	d
TEMP_2_PIN	src/pins.h	478;"	d
TEMP_2_PIN	src/pins.h	526;"	d
TEMP_2_PIN	src/pins.h	619;"	d
TEMP_2_PIN	src/pins.h	667;"	d
TEMP_2_PIN	src/pins.h	794;"	d
TEMP_2_PIN	src/pins.h	862;"	d
TEMP_2_PIN	src/pins.h	928;"	d
TEMP_BED_PIN	src/pins.h	104;"	d
TEMP_BED_PIN	src/pins.h	184;"	d
TEMP_BED_PIN	src/pins.h	301;"	d
TEMP_BED_PIN	src/pins.h	416;"	d
TEMP_BED_PIN	src/pins.h	43;"	d
TEMP_BED_PIN	src/pins.h	480;"	d
TEMP_BED_PIN	src/pins.h	532;"	d
TEMP_BED_PIN	src/pins.h	535;"	d
TEMP_BED_PIN	src/pins.h	620;"	d
TEMP_BED_PIN	src/pins.h	658;"	d
TEMP_BED_PIN	src/pins.h	785;"	d
TEMP_BED_PIN	src/pins.h	863;"	d
TEMP_HYSTERESIS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	31;"	d
TEMP_HYSTERESIS	src/Configuration.h	31;"	d
TEMP_RESIDENCY_TIME	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	30;"	d
TEMP_RESIDENCY_TIME	src/Configuration.h	30;"	d
TEMP_SENSOR_0	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	23;"	d
TEMP_SENSOR_0	src/Configuration.h	23;"	d
TEMP_SENSOR_1	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	24;"	d
TEMP_SENSOR_1	src/Configuration.h	24;"	d
TEMP_SENSOR_2	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	25;"	d
TEMP_SENSOR_2	src/Configuration.h	25;"	d
TEMP_SENSOR_AD595_GAIN	src/Configuration_adv.h	64;"	d
TEMP_SENSOR_AD595_OFFSET	src/Configuration_adv.h	63;"	d
TEMP_SENSOR_BED	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	27;"	d
TEMP_SENSOR_BED	src/Configuration.h	27;"	d
THERMISTORBED	src/Configuration_adv.h	201;"	d
THERMISTORHEATER_0	src/Configuration_adv.h	189;"	d
THERMISTORHEATER_1	src/Configuration_adv.h	193;"	d
THERMISTORHEATER_2	src/Configuration_adv.h	197;"	d
THERMISTORTABLES_H_	src/thermistortables.h	2;"	d
TOGGLE	src/fastio.h	71;"	d
TT_NAME	src/thermistortables.h	325;"	d
TWO_PI	src/wiring.h	51;"	d
TXD	src/fastio.h	430;"	d
TXD	src/fastio.h	933;"	d
TXD	src/fastio.h	95;"	d
TXD0	src/fastio.h	432;"	d
TXD1	src/fastio.h	435;"	d
TX_ENABLE_PIN	src/pins.h	134;"	d
TX_ENABLE_PIN	src/pins.h	547;"	d
T_ACCESS	src/SdBaseFile.h	/^uint8_t const T_ACCESS = 1;$/;"	v
T_CREATE	src/SdBaseFile.h	/^uint8_t const T_CREATE = 2;$/;"	v
T_WRITE	src/SdBaseFile.h	/^uint8_t const T_WRITE = 4;$/;"	v
USE_CXA_PURE_VIRTUAL	src/SdFatConfig.h	110;"	d
USE_MULTIPLE_CARDS	src/SdFatConfig.h	38;"	d
USE_SOFTWARE_SPI	src/SdFatConfig.h	95;"	d
VERSION_STRING	.build_ano/mega/src/Marlin.ino.cpp	64;"	d	file:
WELCOME_MSG	src/language.h	156;"	d
WELCOME_MSG	src/language.h	17;"	d
WRITE	src/fastio.h	68;"	d
WRITE_E_STEP	src/stepper.h	27;"	d
WRITE_E_STEP	src/stepper.h	31;"	d
WRITE_E_STEP	src/stepper.h	35;"	d
WRITE_MULTIPLE_TOKEN	src/SdInfo.h	/^uint8_t const WRITE_MULTIPLE_TOKEN = 0XFC;$/;"	v
Wiring_h	src/wiring.h	30;"	d
X_AXIS	src/Marlin.h	/^enum AxisEnum {X_AXIS=0, Y_AXIS=1, Z_AXIS=2, E_AXIS=3};$/;"	e	enum:AxisEnum
X_DIR_PIN	src/pins.h	157;"	d
X_DIR_PIN	src/pins.h	253;"	d
X_DIR_PIN	src/pins.h	375;"	d
X_DIR_PIN	src/pins.h	445;"	d
X_DIR_PIN	src/pins.h	499;"	d
X_DIR_PIN	src/pins.h	571;"	d
X_DIR_PIN	src/pins.h	640;"	d
X_DIR_PIN	src/pins.h	767;"	d
X_DIR_PIN	src/pins.h	77;"	d
X_DIR_PIN	src/pins.h	831;"	d
X_DIR_PIN	src/pins.h	894;"	d
X_DIR_PIN	src/pins.h	8;"	d
X_ENABLE_ON	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	98;"	d
X_ENABLE_ON	src/Configuration.h	106;"	d
X_ENABLE_PIN	src/pins.h	158;"	d
X_ENABLE_PIN	src/pins.h	254;"	d
X_ENABLE_PIN	src/pins.h	376;"	d
X_ENABLE_PIN	src/pins.h	446;"	d
X_ENABLE_PIN	src/pins.h	500;"	d
X_ENABLE_PIN	src/pins.h	602;"	d
X_ENABLE_PIN	src/pins.h	610;"	d
X_ENABLE_PIN	src/pins.h	643;"	d
X_ENABLE_PIN	src/pins.h	770;"	d
X_ENABLE_PIN	src/pins.h	78;"	d
X_ENABLE_PIN	src/pins.h	832;"	d
X_ENABLE_PIN	src/pins.h	921;"	d
X_ENABLE_PIN	src/pins.h	9;"	d
X_ENDSTOPS_INVERTING	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	/^const bool X_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
X_ENDSTOPS_INVERTING	src/Configuration.h	/^const bool X_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
X_HOME_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	118;"	d
X_HOME_DIR	src/Configuration.h	126;"	d
X_HOME_POS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	130;"	d
X_HOME_POS	src/Configuration.h	139;"	d
X_HOME_RETRACT_MM	src/Configuration_adv.h	84;"	d
X_MAX_LENGTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	124;"	d
X_MAX_LENGTH	src/Configuration.h	133;"	d
X_MAX_PIN	src/pins.h	11;"	d
X_MAX_PIN	src/pins.h	160;"	d
X_MAX_PIN	src/pins.h	256;"	d
X_MAX_PIN	src/pins.h	378;"	d
X_MAX_PIN	src/pins.h	448;"	d
X_MAX_PIN	src/pins.h	502;"	d
X_MAX_PIN	src/pins.h	573;"	d
X_MAX_PIN	src/pins.h	642;"	d
X_MAX_PIN	src/pins.h	769;"	d
X_MAX_PIN	src/pins.h	80;"	d
X_MAX_PIN	src/pins.h	834;"	d
X_MAX_PIN	src/pins.h	896;"	d
X_MAX_PIN	src/pins.h	956;"	d
X_MIN_PIN	src/pins.h	10;"	d
X_MIN_PIN	src/pins.h	159;"	d
X_MIN_PIN	src/pins.h	255;"	d
X_MIN_PIN	src/pins.h	377;"	d
X_MIN_PIN	src/pins.h	447;"	d
X_MIN_PIN	src/pins.h	501;"	d
X_MIN_PIN	src/pins.h	572;"	d
X_MIN_PIN	src/pins.h	641;"	d
X_MIN_PIN	src/pins.h	768;"	d
X_MIN_PIN	src/pins.h	79;"	d
X_MIN_PIN	src/pins.h	833;"	d
X_MIN_PIN	src/pins.h	895;"	d
X_STEP_PIN	src/pins.h	156;"	d
X_STEP_PIN	src/pins.h	252;"	d
X_STEP_PIN	src/pins.h	374;"	d
X_STEP_PIN	src/pins.h	444;"	d
X_STEP_PIN	src/pins.h	498;"	d
X_STEP_PIN	src/pins.h	570;"	d
X_STEP_PIN	src/pins.h	639;"	d
X_STEP_PIN	src/pins.h	766;"	d
X_STEP_PIN	src/pins.h	76;"	d
X_STEP_PIN	src/pins.h	7;"	d
X_STEP_PIN	src/pins.h	830;"	d
X_STEP_PIN	src/pins.h	893;"	d
Y_AXIS	src/Marlin.h	/^enum AxisEnum {X_AXIS=0, Y_AXIS=1, Z_AXIS=2, E_AXIS=3};$/;"	e	enum:AxisEnum
Y_DIR_PIN	src/pins.h	14;"	d
Y_DIR_PIN	src/pins.h	164;"	d
Y_DIR_PIN	src/pins.h	259;"	d
Y_DIR_PIN	src/pins.h	381;"	d
Y_DIR_PIN	src/pins.h	451;"	d
Y_DIR_PIN	src/pins.h	506;"	d
Y_DIR_PIN	src/pins.h	576;"	d
Y_DIR_PIN	src/pins.h	646;"	d
Y_DIR_PIN	src/pins.h	773;"	d
Y_DIR_PIN	src/pins.h	837;"	d
Y_DIR_PIN	src/pins.h	84;"	d
Y_DIR_PIN	src/pins.h	899;"	d
Y_ENABLE_ON	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	99;"	d
Y_ENABLE_ON	src/Configuration.h	107;"	d
Y_ENABLE_PIN	src/pins.h	15;"	d
Y_ENABLE_PIN	src/pins.h	165;"	d
Y_ENABLE_PIN	src/pins.h	260;"	d
Y_ENABLE_PIN	src/pins.h	382;"	d
Y_ENABLE_PIN	src/pins.h	452;"	d
Y_ENABLE_PIN	src/pins.h	507;"	d
Y_ENABLE_PIN	src/pins.h	603;"	d
Y_ENABLE_PIN	src/pins.h	611;"	d
Y_ENABLE_PIN	src/pins.h	649;"	d
Y_ENABLE_PIN	src/pins.h	776;"	d
Y_ENABLE_PIN	src/pins.h	838;"	d
Y_ENABLE_PIN	src/pins.h	85;"	d
Y_ENABLE_PIN	src/pins.h	922;"	d
Y_ENDSTOPS_INVERTING	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	/^const bool Y_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
Y_ENDSTOPS_INVERTING	src/Configuration.h	/^const bool Y_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
Y_HOME_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	119;"	d
Y_HOME_DIR	src/Configuration.h	127;"	d
Y_HOME_POS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	131;"	d
Y_HOME_POS	src/Configuration.h	140;"	d
Y_HOME_RETRACT_MM	src/Configuration_adv.h	85;"	d
Y_MAX_LENGTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	125;"	d
Y_MAX_LENGTH	src/Configuration.h	134;"	d
Y_MAX_PIN	src/pins.h	167;"	d
Y_MAX_PIN	src/pins.h	17;"	d
Y_MAX_PIN	src/pins.h	262;"	d
Y_MAX_PIN	src/pins.h	384;"	d
Y_MAX_PIN	src/pins.h	454;"	d
Y_MAX_PIN	src/pins.h	509;"	d
Y_MAX_PIN	src/pins.h	578;"	d
Y_MAX_PIN	src/pins.h	648;"	d
Y_MAX_PIN	src/pins.h	775;"	d
Y_MAX_PIN	src/pins.h	840;"	d
Y_MAX_PIN	src/pins.h	87;"	d
Y_MAX_PIN	src/pins.h	901;"	d
Y_MAX_PIN	src/pins.h	957;"	d
Y_MIN_PIN	src/pins.h	166;"	d
Y_MIN_PIN	src/pins.h	16;"	d
Y_MIN_PIN	src/pins.h	261;"	d
Y_MIN_PIN	src/pins.h	383;"	d
Y_MIN_PIN	src/pins.h	453;"	d
Y_MIN_PIN	src/pins.h	508;"	d
Y_MIN_PIN	src/pins.h	577;"	d
Y_MIN_PIN	src/pins.h	647;"	d
Y_MIN_PIN	src/pins.h	774;"	d
Y_MIN_PIN	src/pins.h	839;"	d
Y_MIN_PIN	src/pins.h	86;"	d
Y_MIN_PIN	src/pins.h	900;"	d
Y_STEP_PIN	src/pins.h	13;"	d
Y_STEP_PIN	src/pins.h	163;"	d
Y_STEP_PIN	src/pins.h	258;"	d
Y_STEP_PIN	src/pins.h	380;"	d
Y_STEP_PIN	src/pins.h	450;"	d
Y_STEP_PIN	src/pins.h	505;"	d
Y_STEP_PIN	src/pins.h	575;"	d
Y_STEP_PIN	src/pins.h	645;"	d
Y_STEP_PIN	src/pins.h	772;"	d
Y_STEP_PIN	src/pins.h	836;"	d
Y_STEP_PIN	src/pins.h	83;"	d
Y_STEP_PIN	src/pins.h	898;"	d
Z_AXIS	src/Marlin.h	/^enum AxisEnum {X_AXIS=0, Y_AXIS=1, Z_AXIS=2, E_AXIS=3};$/;"	e	enum:AxisEnum
Z_DIR_PIN	src/pins.h	171;"	d
Z_DIR_PIN	src/pins.h	20;"	d
Z_DIR_PIN	src/pins.h	265;"	d
Z_DIR_PIN	src/pins.h	387;"	d
Z_DIR_PIN	src/pins.h	457;"	d
Z_DIR_PIN	src/pins.h	513;"	d
Z_DIR_PIN	src/pins.h	581;"	d
Z_DIR_PIN	src/pins.h	652;"	d
Z_DIR_PIN	src/pins.h	779;"	d
Z_DIR_PIN	src/pins.h	843;"	d
Z_DIR_PIN	src/pins.h	904;"	d
Z_DIR_PIN	src/pins.h	91;"	d
Z_ENABLE_ON	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	100;"	d
Z_ENABLE_ON	src/Configuration.h	108;"	d
Z_ENABLE_PIN	src/pins.h	172;"	d
Z_ENABLE_PIN	src/pins.h	21;"	d
Z_ENABLE_PIN	src/pins.h	266;"	d
Z_ENABLE_PIN	src/pins.h	388;"	d
Z_ENABLE_PIN	src/pins.h	458;"	d
Z_ENABLE_PIN	src/pins.h	514;"	d
Z_ENABLE_PIN	src/pins.h	604;"	d
Z_ENABLE_PIN	src/pins.h	612;"	d
Z_ENABLE_PIN	src/pins.h	655;"	d
Z_ENABLE_PIN	src/pins.h	782;"	d
Z_ENABLE_PIN	src/pins.h	844;"	d
Z_ENABLE_PIN	src/pins.h	923;"	d
Z_ENABLE_PIN	src/pins.h	92;"	d
Z_ENDSTOPS_INVERTING	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	/^const bool Z_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
Z_ENDSTOPS_INVERTING	src/Configuration.h	/^const bool Z_ENDSTOPS_INVERTING = false; \/\/ set to true to invert the logic of the endstops. $/;"	v
Z_HOME_DIR	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	120;"	d
Z_HOME_DIR	src/Configuration.h	128;"	d
Z_HOME_POS	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	132;"	d
Z_HOME_POS	src/Configuration.h	141;"	d
Z_HOME_RETRACT_MM	src/Configuration_adv.h	86;"	d
Z_MAX_LENGTH	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	127;"	d
Z_MAX_LENGTH	src/Configuration.h	136;"	d
Z_MAX_PIN	src/pins.h	174;"	d
Z_MAX_PIN	src/pins.h	23;"	d
Z_MAX_PIN	src/pins.h	268;"	d
Z_MAX_PIN	src/pins.h	390;"	d
Z_MAX_PIN	src/pins.h	460;"	d
Z_MAX_PIN	src/pins.h	516;"	d
Z_MAX_PIN	src/pins.h	583;"	d
Z_MAX_PIN	src/pins.h	654;"	d
Z_MAX_PIN	src/pins.h	781;"	d
Z_MAX_PIN	src/pins.h	846;"	d
Z_MAX_PIN	src/pins.h	906;"	d
Z_MAX_PIN	src/pins.h	94;"	d
Z_MAX_PIN	src/pins.h	958;"	d
Z_MIN_PIN	src/pins.h	173;"	d
Z_MIN_PIN	src/pins.h	22;"	d
Z_MIN_PIN	src/pins.h	267;"	d
Z_MIN_PIN	src/pins.h	389;"	d
Z_MIN_PIN	src/pins.h	459;"	d
Z_MIN_PIN	src/pins.h	515;"	d
Z_MIN_PIN	src/pins.h	582;"	d
Z_MIN_PIN	src/pins.h	653;"	d
Z_MIN_PIN	src/pins.h	780;"	d
Z_MIN_PIN	src/pins.h	845;"	d
Z_MIN_PIN	src/pins.h	905;"	d
Z_MIN_PIN	src/pins.h	93;"	d
Z_STEP_PIN	src/pins.h	170;"	d
Z_STEP_PIN	src/pins.h	19;"	d
Z_STEP_PIN	src/pins.h	264;"	d
Z_STEP_PIN	src/pins.h	386;"	d
Z_STEP_PIN	src/pins.h	456;"	d
Z_STEP_PIN	src/pins.h	512;"	d
Z_STEP_PIN	src/pins.h	580;"	d
Z_STEP_PIN	src/pins.h	651;"	d
Z_STEP_PIN	src/pins.h	778;"	d
Z_STEP_PIN	src/pins.h	842;"	d
Z_STEP_PIN	src/pins.h	903;"	d
Z_STEP_PIN	src/pins.h	90;"	d
_ARDUINO_H	src/fastio.h	7;"	d
_E0_PINS	src/pins.h	943;"	d
_E1_PINS	src/pins.h	945;"	d
_E1_PINS	src/pins.h	947;"	d
_E2_PINS	src/pins.h	950;"	d
_E2_PINS	src/pins.h	952;"	d
_GET_INPUT	src/fastio.h	56;"	d
_GET_OUTPUT	src/fastio.h	58;"	d
_GET_TIMER	src/fastio.h	61;"	d
_READ	src/fastio.h	26;"	d
_SET_INPUT	src/fastio.h	51;"	d
_SET_OUTPUT	src/fastio.h	53;"	d
_TOGGLE	src/fastio.h	48;"	d
_TT_NAME	src/thermistortables.h	324;"	d
_WRITE	src/fastio.h	45;"	d
_WRITE_C	src/fastio.h	32;"	d
_WRITE_NC	src/fastio.h	30;"	d
__CARDREADERH	src/cardreader.h	2;"	d
__CONFIGURATION_ADV_H	src/Configuration_adv.h	4;"	d
__CONFIGURATION_H	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	2;"	d
__CONFIGURATION_H	src/Configuration.h	2;"	d
__EEPROMH	src/EEPROMwrite.h	2;"	d
__MARLINH	src/Marlin.h	5;"	d
__ULTRALCDH	src/ultralcd.h	2;"	d
__WATCHDOGH	src/watchdog.h	2;"	d
abs	src/wiring.h	76;"	d
abs	src/wiring.h	81;"	d
acc_step_rate	src/stepper.cpp	/^static unsigned short acc_step_rate; \/\/ needed for deccelaration start point$/;"	v	file:
accelerate_until	src/planner.h	/^  long accelerate_until;                    \/\/ The index of the step event on which to stop acceleration$/;"	m	struct:__anon1
acceleration	src/planner.cpp	/^float acceleration;         \/\/ Normal acceleration mm\/s^2  THIS IS THE DEFAULT ACCELERATION for all moves. M204 SXXXX$/;"	v
acceleration	src/planner.h	/^  float acceleration;                                \/\/ acceleration mm\/sec^2$/;"	m	struct:__anon1
acceleration_rate	src/planner.h	/^  long acceleration_rate;                   \/\/ The acceleration rate used for acceleration calculation$/;"	m	struct:__anon1
acceleration_st	src/planner.h	/^  unsigned long acceleration_st;                     \/\/ acceleration steps\/sec^2$/;"	m	struct:__anon1
acceleration_time	src/stepper.cpp	/^static long acceleration_time, deceleration_time;$/;"	v	file:
active_extruder	.build_ano/mega/src/Marlin.ino.cpp	/^uint8_t active_extruder = 0;$/;"	v
active_extruder	src/planner.h	/^  unsigned char active_extruder;            \/\/ Selects the active extruder$/;"	m	struct:__anon1
activeline	src/ultralcd.h	/^    int8_t activeline;$/;"	m	class:MainMenu
addCluster	src/SdBaseFile.cpp	/^bool SdBaseFile::addCluster() {$/;"	f	class:SdBaseFile
addDirCluster	src/SdBaseFile.cpp	/^bool SdBaseFile::addDirCluster() {$/;"	f	class:SdBaseFile
add_homeing	.build_ano/mega/src/Marlin.ino.cpp	/^float add_homeing[3]={0,0,0};$/;"	v
advance	src/planner.h	/^    float advance;$/;"	m	struct:__anon1
advance	src/stepper.cpp	/^  static long advance_rate, advance, final_advance = 0;$/;"	v	file:
advance_rate	src/planner.h	/^    long advance_rate;$/;"	m	struct:__anon1
advance_rate	src/stepper.cpp	/^  static long advance_rate, advance, final_advance = 0;$/;"	v	file:
allocContiguous	src/SdVolume.cpp	/^bool SdVolume::allocContiguous(uint32_t count, uint32_t* curCluster) {$/;"	f	class:SdVolume
allocSearchStart_	src/SdVolume.h	/^  uint32_t allocSearchStart_;   \/\/ start cluster for alloc search$/;"	m	class:SdVolume
allow_cold_extrude	src/planner.cpp	/^  bool allow_cold_extrude=false;$/;"	v
allow_cold_extrudes	src/planner.cpp	/^void allow_cold_extrudes(bool allow)$/;"	f
always1	src/SdInfo.h	/^  unsigned char always1 : 1;$/;"	m	struct:CID
always1	src/SdInfo.h	/^  unsigned char always1 : 1;$/;"	m	struct:CSDV1
always1	src/SdInfo.h	/^  unsigned char always1 : 1;$/;"	m	struct:CSDV2
analog2temp	src/temperature.cpp	/^float analog2temp(int raw, uint8_t e) {$/;"	f
analog2tempBed	src/temperature.cpp	/^float analog2tempBed(int raw) {$/;"	f
attributes	src/SdFatStructs.h	/^  uint8_t  attributes;$/;"	m	struct:directoryEntry
autostart_atmillis	src/cardreader.h	/^  unsigned long autostart_atmillis;$/;"	m	class:CardReader
autostart_stilltocheck	src/cardreader.h	/^  bool autostart_stilltocheck; \/\/the sd start is delayed, because otherwise the serial cannot answer fast enought to make contact with the hostsoftware.$/;"	m	class:CardReader
autotempShutdown	src/temperature.h	/^FORCE_INLINE void autotempShutdown(){$/;"	f
autotemp_enabled	src/planner.cpp	/^    bool autotemp_enabled=false;$/;"	v
autotemp_factor	src/planner.cpp	/^    float autotemp_factor=0.1;$/;"	v
autotemp_max	src/planner.cpp	/^    float autotemp_max=250;$/;"	v
autotemp_min	src/planner.cpp	/^    float autotemp_min=210;$/;"	v
available	src/MarlinSerial.h	/^    FORCE_INLINE int available(void)$/;"	f	class:MarlinSerial
axis_codes	.build_ano/mega/src/Marlin.ino.cpp	/^const char axis_codes[NUM_AXIS] = {'X', 'Y', 'Z', 'E'};$/;"	v
axis_relative_modes	.build_ano/mega/src/Marlin.ino.cpp	/^bool axis_relative_modes[] = AXIS_RELATIVE_MODES;$/;"	v
axis_steps_per_sqr_second	src/planner.cpp	/^unsigned long axis_steps_per_sqr_second[NUM_AXIS];$/;"	v
axis_steps_per_unit	src/planner.cpp	/^float axis_steps_per_unit[4];$/;"	v
bed_max_temp_error	src/temperature.cpp	/^void bed_max_temp_error(void) {$/;"	f
bed_maxttemp	src/temperature.cpp	/^  static int bed_maxttemp = 16383;$/;"	v	file:
bed_minttemp	src/temperature.cpp	/^  static int bed_minttemp = 0;$/;"	v	file:
bedtemptable	src/thermistortables.h	364;"	d
bedtemptable_len	src/thermistortables.h	365;"	d
begin	src/MarlinSerial.cpp	/^void MarlinSerial::begin(long baud)$/;"	f	class:MarlinSerial
beginCylinderHigh	src/SdFatStructs.h	/^  unsigned beginCylinderHigh : 2;$/;"	m	struct:partitionTable
beginCylinderLow	src/SdFatStructs.h	/^  uint8_t  beginCylinderLow;$/;"	m	struct:partitionTable
beginHead	src/SdFatStructs.h	/^  uint8_t  beginHead;$/;"	m	struct:partitionTable
beginSector	src/SdFatStructs.h	/^  unsigned beginSector : 6;$/;"	m	struct:partitionTable
bit	src/Sd2PinMap.h	/^  uint8_t bit;$/;"	m	struct:pin_map_t
bit	src/wiring.h	108;"	d
bitClear	src/wiring.h	102;"	d
bitRead	src/wiring.h	100;"	d
bitSet	src/wiring.h	101;"	d
bitWrite	src/wiring.h	103;"	d
blockNumber	src/SdVolume.h	/^  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {$/;"	f	class:SdVolume
blockOfCluster	src/SdVolume.h	/^  uint8_t blockOfCluster(uint32_t position) const {$/;"	f	class:SdVolume
block_buffer	src/planner.cpp	/^block_t block_buffer[BLOCK_BUFFER_SIZE];            \/\/ A ring buffer for motion instfructions$/;"	v
block_buffer_head	src/planner.cpp	/^volatile unsigned char block_buffer_head;           \/\/ Index of the next block to be pushed$/;"	v
block_buffer_tail	src/planner.cpp	/^volatile unsigned char block_buffer_tail;           \/\/ Index of the block to process now$/;"	v
block_t	src/planner.h	/^} block_t;$/;"	t	typeref:struct:__anon1
blocksPerCluster	src/SdVolume.h	/^  uint8_t blocksPerCluster() const {return blocksPerCluster_;}$/;"	f	class:SdVolume
blocksPerCluster_	src/SdVolume.h	/^  uint8_t blocksPerCluster_;    \/\/ cluster size in blocks$/;"	m	class:SdVolume
blocksPerFat	src/SdVolume.h	/^  uint32_t blocksPerFat()  const {return blocksPerFat_;}$/;"	f	class:SdVolume
blocksPerFat_	src/SdVolume.h	/^  uint32_t blocksPerFat_;       \/\/ FAT size in blocks$/;"	m	class:SdVolume
blocks_queued	src/planner.h	/^FORCE_INLINE bool blocks_queued() $/;"	f
blocktime	src/ultralcd.h	49;"	d
boolean	src/wiring.h	/^typedef uint8_t boolean;$/;"	t
boot	src/SdFatStructs.h	/^  uint8_t  boot;$/;"	m	struct:partitionTable
bootCode	src/SdFatStructs.h	/^  uint8_t  bootCode[420];$/;"	m	struct:fat32_boot
bootCode	src/SdFatStructs.h	/^  uint8_t  bootCode[448];$/;"	m	struct:fat_boot
bootSectorSig0	src/SdFatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat32_boot
bootSectorSig0	src/SdFatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat_boot
bootSectorSig1	src/SdFatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat32_boot
bootSectorSig1	src/SdFatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat_boot
bootSignature	src/SdFatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat32_boot
bootSignature	src/SdFatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat_boot
buffer	src/MarlinSerial.h	/^  unsigned char buffer[RX_BUFFER_SIZE];$/;"	m	struct:ring_buffer
bufindr	.build_ano/mega/src/Marlin.ino.cpp	/^static int bufindr = 0;$/;"	v	file:
bufindw	.build_ano/mega/src/Marlin.ino.cpp	/^static int bufindw = 0;$/;"	v	file:
buflen	.build_ano/mega/src/Marlin.ino.cpp	/^static int buflen = 0;$/;"	v	file:
busy	src/planner.h	/^  volatile char busy;$/;"	m	struct:__anon1
busy	src/stepper.cpp	/^static unsigned char busy = false; \/\/ TRUE when SIG_OUTPUT_COMPARE1A is being serviced. Used to avoid retriggering that handler.$/;"	v	file:
byte	src/wiring.h	/^typedef uint8_t byte;$/;"	t
bytesPerSector	src/SdFatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:fat32_boot
bytesPerSector	src/SdFatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:fat_boot
c_size_high	src/SdInfo.h	/^  unsigned char c_size_high : 2;$/;"	m	struct:CSDV1
c_size_high	src/SdInfo.h	/^  unsigned char c_size_high : 6;$/;"	m	struct:CSDV2
c_size_low	src/SdInfo.h	/^  unsigned char c_size_low :2;$/;"	m	struct:CSDV1
c_size_low	src/SdInfo.h	/^  unsigned char c_size_low;$/;"	m	struct:CSDV2
c_size_mid	src/SdInfo.h	/^  unsigned char c_size_mid;$/;"	m	struct:CSDV1
c_size_mid	src/SdInfo.h	/^  unsigned char c_size_mid;$/;"	m	struct:CSDV2
c_size_mult_high	src/SdInfo.h	/^  unsigned char c_size_mult_high : 2;$/;"	m	struct:CSDV1
c_size_mult_low	src/SdInfo.h	/^  unsigned char c_size_mult_low : 1;$/;"	m	struct:CSDV1
cache	src/SdVolume.h	/^  cache_t *cache() {return &cacheBuffer_;}$/;"	f	class:SdVolume
cacheBlockNumber	src/SdVolume.h	/^  uint32_t cacheBlockNumber() {return cacheBlockNumber_;}$/;"	f	class:SdVolume
cacheBlockNumber_	src/SdVolume.cpp	/^uint32_t SdVolume::cacheBlockNumber_;  \/\/ current block number$/;"	m	class:SdVolume	file:
cacheBlockNumber_	src/SdVolume.h	/^  static uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:SdVolume
cacheBlockNumber_	src/SdVolume.h	/^  uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:SdVolume
cacheBuffer_	src/SdVolume.cpp	/^cache_t  SdVolume::cacheBuffer_;       \/\/ 512 byte cache for Sd2Card$/;"	m	class:SdVolume	file:
cacheBuffer_	src/SdVolume.h	/^  cache_t cacheBuffer_;        \/\/ 512 byte cache for device blocks$/;"	m	class:SdVolume
cacheBuffer_	src/SdVolume.h	/^  static cache_t cacheBuffer_;        \/\/ 512 byte cache for device blocks$/;"	m	class:SdVolume
cacheClear	src/SdVolume.h	/^  cache_t* cacheClear() {$/;"	f	class:SdVolume
cacheDirEntry	src/SdBaseFile.cpp	/^dir_t* SdBaseFile::cacheDirEntry(uint8_t action) {$/;"	f	class:SdBaseFile
cacheDirty_	src/SdVolume.cpp	/^bool     SdVolume::cacheDirty_;        \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume	file:
cacheDirty_	src/SdVolume.h	/^  bool cacheDirty_;            \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume
cacheDirty_	src/SdVolume.h	/^  static bool cacheDirty_;            \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume
cacheFlush	src/SdVolume.cpp	/^bool SdVolume::cacheFlush() {$/;"	f	class:SdVolume
cacheMirrorBlock_	src/SdVolume.cpp	/^uint32_t SdVolume::cacheMirrorBlock_;  \/\/ mirror  block for second FAT$/;"	m	class:SdVolume	file:
cacheMirrorBlock_	src/SdVolume.h	/^  static uint32_t cacheMirrorBlock_;  \/\/ block number for mirror FAT$/;"	m	class:SdVolume
cacheMirrorBlock_	src/SdVolume.h	/^  uint32_t cacheMirrorBlock_;  \/\/ block number for mirror FAT$/;"	m	class:SdVolume
cacheRawBlock	src/SdVolume.cpp	/^bool SdVolume::cacheRawBlock(uint32_t blockNumber, bool dirty) {$/;"	f	class:SdVolume
cacheSetBlockNumber	src/SdVolume.h	/^  void cacheSetBlockNumber(uint32_t blockNumber, bool dirty) {$/;"	f	class:SdVolume
cacheSetDirty	src/SdVolume.h	/^  void cacheSetDirty() {cacheDirty_ |= CACHE_FOR_WRITE;}$/;"	f	class:SdVolume
cache_t	src/SdVolume.h	/^union cache_t {$/;"	u
calc_timer	src/stepper.cpp	/^FORCE_INLINE unsigned short calc_timer(unsigned short step_rate) {$/;"	f
calculate_trapezoid_for_block	src/planner.cpp	/^void calculate_trapezoid_for_block(block_t *block, float entry_factor, float exit_factor) {$/;"	f
card	.build_ano/mega/src/Marlin.ino.cpp	/^CardReader card;$/;"	v
card	src/cardreader.h	/^  Sd2Card card;$/;"	m	class:CardReader
cardAcmd	src/Sd2Card.h	/^  uint8_t cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardCommand	src/Sd2Card.cpp	/^uint8_t Sd2Card::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardOK	src/cardreader.h	/^  bool cardOK ;$/;"	m	class:CardReader
cardSize	src/Sd2Card.cpp	/^uint32_t Sd2Card::cardSize() {$/;"	f	class:Sd2Card
cbi	src/Marlin.h	41;"	d
ccc_high	src/SdInfo.h	/^  unsigned char ccc_high;$/;"	m	struct:CSDV1
ccc_high	src/SdInfo.h	/^  unsigned char ccc_high;$/;"	m	struct:CSDV2
ccc_low	src/SdInfo.h	/^  unsigned char ccc_low : 4;$/;"	m	struct:CSDV1
ccc_low	src/SdInfo.h	/^  unsigned char ccc_low : 4;$/;"	m	struct:CSDV2
chainSize	src/SdVolume.cpp	/^bool SdVolume::chainSize(uint32_t cluster, uint32_t* size) {$/;"	f	class:SdVolume
chdir	src/cardreader.cpp	/^void CardReader::chdir(const char * relpath)$/;"	f	class:CardReader
checkHitEndstops	src/stepper.cpp	/^void checkHitEndstops()$/;"	f
checkRx	src/MarlinSerial.h	/^    FORCE_INLINE void checkRx(void)$/;"	f	class:MarlinSerial
check_axes_activity	src/planner.cpp	/^void check_axes_activity() {$/;"	f
check_endstops	src/stepper.cpp	/^static bool check_endstops = true;$/;"	v	file:
checkautostart	src/cardreader.cpp	/^void CardReader::checkautostart(bool force)$/;"	f	class:CardReader
chipSelectHigh	src/Sd2Card.cpp	/^void Sd2Card::chipSelectHigh() {$/;"	f	class:Sd2Card
chipSelectLow	src/Sd2Card.cpp	/^void Sd2Card::chipSelectLow() {$/;"	f	class:Sd2Card
chipSelectPin_	src/Sd2Card.h	/^  uint8_t chipSelectPin_;$/;"	m	class:Sd2Card
cid_t	src/SdInfo.h	/^}cid_t;$/;"	t	typeref:struct:CID
clearIfNecessary	src/ultralcd.h	/^    FORCE_INLINE void clearIfNecessary()$/;"	f	class:MainMenu
clockCyclesPerMicrosecond	src/wiring.h	93;"	d
clockCyclesToMicroseconds	src/wiring.h	94;"	d
close	src/SdBaseFile.cpp	/^bool SdBaseFile::close() {$/;"	f	class:SdBaseFile
closefile	src/cardreader.cpp	/^void CardReader::closefile()$/;"	f	class:CardReader
cluster	src/SdBaseFile.h	/^  uint32_t cluster;$/;"	m	struct:fpos_t
clusterCount	src/SdVolume.h	/^  uint32_t clusterCount() const {return clusterCount_;}$/;"	f	class:SdVolume
clusterCount_	src/SdVolume.h	/^  uint32_t clusterCount_;       \/\/ clusters in one FAT$/;"	m	class:SdVolume
clusterSizeShift	src/SdVolume.h	/^  uint8_t clusterSizeShift() const {return clusterSizeShift_;}$/;"	f	class:SdVolume
clusterSizeShift_	src/SdVolume.h	/^  uint8_t clusterSizeShift_;    \/\/ shift to convert cluster count to block count$/;"	m	class:SdVolume
clusterStartBlock	src/SdVolume.h	/^  uint32_t clusterStartBlock(uint32_t cluster) const {$/;"	f	class:SdVolume
cmdbuffer	.build_ano/mega/src/Marlin.ino.cpp	/^static char cmdbuffer[BUFSIZE][MAX_CMD_SIZE];$/;"	v	file:
codeArea	src/SdFatStructs.h	/^  uint8_t  codeArea[440];$/;"	m	struct:masterBootRecord
code_seen	.build_ano/mega/src/Marlin.ino.cpp	/^bool code_seen(char code)$/;"	f
code_seen	.build_ano/mega/src/Marlin.ino.cpp	/^bool code_seen(char code_string[]) \/\/Return True if the string was found$/;"	f
code_value	.build_ano/mega/src/Marlin.ino.cpp	/^float code_value() $/;"	f
code_value_long	.build_ano/mega/src/Marlin.ino.cpp	/^long code_value_long() $/;"	f
comment_mode	.build_ano/mega/src/Marlin.ino.cpp	/^static boolean comment_mode = false;$/;"	v	file:
constrain	src/wiring.h	82;"	d
contiguousRange	src/SdBaseFile.cpp	/^bool SdBaseFile::contiguousRange(uint32_t* bgnBlock, uint32_t* endBlock) {$/;"	f	class:SdBaseFile
contiguousRange	src/SdBaseFile.h	/^  bool contiguousRange(uint32_t& bgnBlock, uint32_t& endBlock) {  \/\/ NOLINT$/;"	f	class:SdBaseFile
controllerFan	.build_ano/mega/src/Marlin.ino.cpp	/^void controllerFan()$/;"	f
copy	src/SdInfo.h	/^  unsigned char copy : 1;$/;"	m	struct:CSDV1
copy	src/SdInfo.h	/^  unsigned char copy : 1;$/;"	m	struct:CSDV2
count_direction	src/stepper.cpp	/^volatile char count_direction[NUM_AXIS] = { 1, 1, 1, 1};$/;"	v
count_position	src/stepper.cpp	/^volatile long count_position[NUM_AXIS] = { 0, 0, 0, 0};$/;"	v
counter_e	src/stepper.cpp	/^            counter_e;$/;"	v	file:
counter_x	src/stepper.cpp	/^static long counter_x,       \/\/ Counter variables for the bresenham line tracer$/;"	v	file:
counter_y	src/stepper.cpp	/^            counter_y, $/;"	v	file:
counter_z	src/stepper.cpp	/^            counter_z,       $/;"	v	file:
crc	src/SdInfo.h	/^  unsigned char crc : 7;$/;"	m	struct:CID
crc	src/SdInfo.h	/^  unsigned char crc : 7;$/;"	m	struct:CSDV1
crc	src/SdInfo.h	/^  unsigned char crc : 7;$/;"	m	struct:CSDV2
createContiguous	src/SdBaseFile.cpp	/^bool SdBaseFile::createContiguous(SdBaseFile* dirFile,$/;"	f	class:SdBaseFile
createContiguous	src/SdBaseFile.h	/^  bool createContiguous(SdBaseFile& dirFile,  \/\/ NOLINT$/;"	f	class:SdBaseFile
createFilename	src/cardreader.cpp	/^char *createFilename(char *buffer,const dir_t &p) \/\/buffer>12characters$/;"	f
creationDate	src/SdFatStructs.h	/^  uint16_t creationDate;$/;"	m	struct:directoryEntry
creationTime	src/SdFatStructs.h	/^  uint16_t creationTime;$/;"	m	struct:directoryEntry
creationTimeTenths	src/SdFatStructs.h	/^  uint8_t  creationTimeTenths;$/;"	m	struct:directoryEntry
csd1_t	src/SdInfo.h	/^}csd1_t;$/;"	t	typeref:struct:CSDV1
csd2_t	src/SdInfo.h	/^}csd2_t;$/;"	t	typeref:struct:CSDV2
csd_t	src/SdInfo.h	/^union csd_t {$/;"	u
csd_ver	src/SdInfo.h	/^  unsigned char csd_ver : 2;$/;"	m	struct:CSDV1
csd_ver	src/SdInfo.h	/^  unsigned char csd_ver : 2;$/;"	m	struct:CSDV2
curCluster	src/SdBaseFile.h	/^  uint32_t curCluster() const {return curCluster_;}$/;"	f	class:SdBaseFile
curCluster_	src/SdBaseFile.h	/^  uint32_t  curCluster_;    \/\/ cluster for current file position$/;"	m	class:SdBaseFile
curDir	src/cardreader.h	/^  SdFile root,*curDir,workDir,workDirParent,workDirParentParent;$/;"	m	class:CardReader
curPosition	src/SdBaseFile.h	/^  uint32_t curPosition() const {return curPosition_;}$/;"	f	class:SdBaseFile
curPosition_	src/SdBaseFile.h	/^  uint32_t  curPosition_;   \/\/ current file position in bytes from beginning$/;"	m	class:SdBaseFile
current_block	src/stepper.cpp	/^block_t *current_block;  \/\/ A pointer to the block currently being traced$/;"	v
current_position	.build_ano/mega/src/Marlin.ino.cpp	/^float current_position[NUM_AXIS] = { 0.0, 0.0, 0.0, 0.0 };$/;"	v
current_raw	src/temperature.cpp	/^int current_raw[EXTRUDERS] = { 0 };$/;"	v
current_raw_bed	src/temperature.cpp	/^int current_raw_bed = 0;$/;"	v
cwd	src/SdBaseFile.h	/^  static SdBaseFile* cwd() {return cwd_;}$/;"	f	class:SdBaseFile
cwd_	src/SdBaseFile.cpp	/^SdBaseFile* SdBaseFile::cwd_ = 0;$/;"	m	class:SdBaseFile	file:
cwd_	src/SdBaseFile.h	/^  static SdBaseFile* cwd_;$/;"	m	class:SdBaseFile
dTerm	src/temperature.cpp	/^  static float dTerm[EXTRUDERS];$/;"	v	file:
data	src/SdVolume.h	/^  uint8_t  data[512];$/;"	m	union:cache_t
dataStartBlock	src/SdVolume.h	/^  uint32_t dataStartBlock() const {return dataStartBlock_;}$/;"	f	class:SdVolume
dataStartBlock_	src/SdVolume.h	/^  uint32_t dataStartBlock_;     \/\/ first data block number$/;"	m	class:SdVolume
dateTimeCallback	src/SdBaseFile.h	/^  static void dateTimeCallback($/;"	f	class:SdBaseFile
dateTimeCallbackCancel	src/SdBaseFile.h	/^  static void dateTimeCallbackCancel() {dateTime_ = 0;}$/;"	f	class:SdBaseFile
dateTime_	src/SdBaseFile.cpp	/^void (*SdBaseFile::dateTime_)(uint16_t* date, uint16_t* time) = 0;$/;"	v
dateTime_	src/SdBaseFile.h	/^  static void (*dateTime_)(uint16_t* date, uint16_t* time);$/;"	m	class:SdBaseFile
dbgFat	src/SdVolume.h	/^  bool dbgFat(uint32_t n, uint32_t* v) {return fatGet(n, v);}$/;"	f	class:SdVolume
ddr	src/Sd2PinMap.h	/^  volatile uint8_t* ddr;$/;"	m	struct:pin_map_t
decelerate_after	src/planner.h	/^  long decelerate_after;                    \/\/ The index of the step event on which to start decelerating$/;"	m	struct:__anon1
deceleration_time	src/stepper.cpp	/^static long acceleration_time, deceleration_time;$/;"	v	file:
degBed	src/temperature.h	/^FORCE_INLINE float degBed() {$/;"	f
degHotend	src/temperature.h	/^FORCE_INLINE float degHotend(uint8_t extruder) {  $/;"	f
degHotend0	src/temperature.h	121;"	d
degHotend1	src/temperature.h	127;"	d
degHotend2	src/temperature.h	134;"	d
degTargetBed	src/temperature.h	/^FORCE_INLINE float degTargetBed() {   $/;"	f
degTargetHotend	src/temperature.h	/^FORCE_INLINE float degTargetHotend(uint8_t extruder) {  $/;"	f
degTargetHotend0	src/temperature.h	122;"	d
degTargetHotend1	src/temperature.h	128;"	d
degTargetHotend2	src/temperature.h	135;"	d
degrees	src/wiring.h	87;"	d
destination	.build_ano/mega/src/Marlin.ino.cpp	/^static float destination[NUM_AXIS] = {  0.0, 0.0, 0.0, 0.0};$/;"	v	file:
digitalPinCount	src/Sd2PinMap.h	/^static const uint8_t digitalPinCount = sizeof(digitalPinMap)\/sizeof(pin_map_t);$/;"	v
digitalPinMap	src/Sd2PinMap.h	/^static const pin_map_t digitalPinMap[] = {$/;"	v
dir	src/SdVolume.h	/^  dir_t    dir[16];$/;"	m	union:cache_t
dirBlock_	src/SdBaseFile.h	/^  uint32_t  dirBlock_;      \/\/ block for this files directory entry$/;"	m	class:SdBaseFile
dirEntry	src/SdBaseFile.cpp	/^bool SdBaseFile::dirEntry(dir_t* dir) {$/;"	f	class:SdBaseFile
dirEntry	src/SdBaseFile.h	/^  bool dirEntry(dir_t& dir) {return dirEntry(&dir);}  \/\/ NOLINT$/;"	f	class:SdBaseFile
dirIndex_	src/SdBaseFile.h	/^  uint8_t   dirIndex_;      \/\/ index of directory entry in dirBlock$/;"	m	class:SdBaseFile
dirName	src/SdBaseFile.cpp	/^void SdBaseFile::dirName(const dir_t& dir, char* name) {$/;"	f	class:SdBaseFile
dir_t	src/SdFatStructs.h	/^typedef struct directoryEntry dir_t;$/;"	t	typeref:struct:directoryEntry
direction_bits	src/planner.h	/^  unsigned char direction_bits;             \/\/ The direction bit set for this block (refers to *_DIRECTION_BIT in config.h)$/;"	m	struct:__anon1
directoryEntry	src/SdFatStructs.h	/^struct directoryEntry {$/;"	s
disable_e0	src/Marlin.h	133;"	d
disable_e0	src/Marlin.h	136;"	d
disable_e1	src/Marlin.h	141;"	d
disable_e1	src/Marlin.h	144;"	d
disable_e2	src/Marlin.h	149;"	d
disable_e2	src/Marlin.h	152;"	d
disable_heater	src/temperature.cpp	/^void disable_heater()$/;"	f
disable_x	src/Marlin.h	109;"	d
disable_x	src/Marlin.h	112;"	d
disable_y	src/Marlin.h	117;"	d
disable_y	src/Marlin.h	120;"	d
disable_z	src/Marlin.h	125;"	d
disable_z	src/Marlin.h	128;"	d
diskSignature	src/SdFatStructs.h	/^  uint32_t diskSignature;$/;"	m	struct:masterBootRecord
displayStartingRow	src/ultralcd.h	/^    uint8_t displayStartingRow;$/;"	m	class:MainMenu
diveDirName	src/cardreader.h	/^  char* diveDirName;$/;"	m	class:CardReader
driveNumber	src/SdFatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat32_boot
driveNumber	src/SdFatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat_boot
dropsegments	src/Configuration_adv.h	/^const int dropsegments=5; \/\/everything with less than this number of steps will be ignored as move and joined with the next movement$/;"	v
dsr_imp	src/SdInfo.h	/^  unsigned char dsr_imp : 1;$/;"	m	struct:CSDV1
dsr_imp	src/SdInfo.h	/^  unsigned char dsr_imp : 1;$/;"	m	struct:CSDV2
e_steps	src/stepper.cpp	/^static long e_steps[3];$/;"	v	file:
enable_e0	src/Marlin.h	132;"	d
enable_e0	src/Marlin.h	135;"	d
enable_e1	src/Marlin.h	140;"	d
enable_e1	src/Marlin.h	143;"	d
enable_e2	src/Marlin.h	148;"	d
enable_e2	src/Marlin.h	151;"	d
enable_endstops	src/stepper.cpp	/^void enable_endstops(bool check)$/;"	f
enable_x	src/Marlin.h	108;"	d
enable_x	src/Marlin.h	111;"	d
enable_y	src/Marlin.h	116;"	d
enable_y	src/Marlin.h	119;"	d
enable_z	src/Marlin.h	124;"	d
enable_z	src/Marlin.h	127;"	d
encrot0	src/pins.h	226;"	d
encrot0	src/pins.h	328;"	d
encrot0	src/pins.h	352;"	d
encrot0	src/pins.h	710;"	d
encrot0	src/pins.h	732;"	d
encrot1	src/pins.h	227;"	d
encrot1	src/pins.h	329;"	d
encrot1	src/pins.h	353;"	d
encrot1	src/pins.h	711;"	d
encrot1	src/pins.h	733;"	d
encrot2	src/pins.h	228;"	d
encrot2	src/pins.h	330;"	d
encrot2	src/pins.h	354;"	d
encrot2	src/pins.h	712;"	d
encrot2	src/pins.h	734;"	d
encrot3	src/pins.h	229;"	d
encrot3	src/pins.h	331;"	d
encrot3	src/pins.h	355;"	d
encrot3	src/pins.h	713;"	d
encrot3	src/pins.h	735;"	d
end	src/MarlinSerial.cpp	/^void MarlinSerial::end()$/;"	f	class:MarlinSerial
endCylinderHigh	src/SdFatStructs.h	/^  unsigned endCylinderHigh : 2;$/;"	m	struct:partitionTable
endCylinderLow	src/SdFatStructs.h	/^  uint8_t  endCylinderLow;$/;"	m	struct:partitionTable
endHead	src/SdFatStructs.h	/^  uint8_t  endHead;$/;"	m	struct:partitionTable
endSector	src/SdFatStructs.h	/^  unsigned endSector : 6;$/;"	m	struct:partitionTable
endstop_x_hit	src/stepper.cpp	/^static volatile bool endstop_x_hit=false;$/;"	v	file:
endstop_y_hit	src/stepper.cpp	/^static volatile bool endstop_y_hit=false;$/;"	v	file:
endstop_z_hit	src/stepper.cpp	/^static volatile bool endstop_z_hit=false;$/;"	v	file:
endstops_hit_on_purpose	src/stepper.cpp	/^void endstops_hit_on_purpose()$/;"	f
endstops_stepsDone	src/stepper.cpp	/^volatile long endstops_stepsTotal,endstops_stepsDone;$/;"	v
endstops_stepsTotal	src/stepper.cpp	/^volatile long endstops_stepsTotal,endstops_stepsDone;$/;"	v
endstops_trigsteps	src/stepper.cpp	/^volatile long endstops_trigsteps[3]={0,0,0};$/;"	v
enquecommand	.build_ano/mega/src/Marlin.ino.cpp	/^void enquecommand(const char *cmd)$/;"	f
entry_speed	src/planner.h	/^  float entry_speed;                                 \/\/ Entry speed at previous-current junction in mm\/min$/;"	m	struct:__anon1
eof	src/cardreader.h	/^  FORCE_INLINE bool eof() { return sdpos>=filesize ;};$/;"	f	class:CardReader
erase	src/Sd2Card.cpp	/^bool Sd2Card::erase(uint32_t firstBlock, uint32_t lastBlock) {$/;"	f	class:Sd2Card
eraseSingleBlockEnable	src/Sd2Card.cpp	/^bool Sd2Card::eraseSingleBlockEnable() {$/;"	f	class:Sd2Card
erase_blk_en	src/SdInfo.h	/^  unsigned char erase_blk_en : 1;$/;"	m	struct:CSDV1
erase_blk_en	src/SdInfo.h	/^  unsigned char erase_blk_en : 1;$/;"	m	struct:CSDV2
error	src/Sd2Card.h	/^  void error(uint8_t code) {errorCode_ = code;}$/;"	f	class:Sd2Card
errorCode	src/Sd2Card.h	/^  int errorCode() const {return errorCode_;}$/;"	f	class:Sd2Card
errorCode_	src/Sd2Card.h	/^  uint8_t errorCode_;$/;"	m	class:Sd2Card
errorData	src/Sd2Card.h	/^  int errorData() const {return status_;}$/;"	f	class:Sd2Card
estimate_acceleration_distance	src/planner.cpp	/^FORCE_INLINE float estimate_acceleration_distance(float initial_rate, float target_rate, float acceleration)$/;"	f
exists	src/SdBaseFile.cpp	/^bool SdBaseFile::exists(const char* name) {$/;"	f	class:SdBaseFile
extrudemultiply	.build_ano/mega/src/Marlin.ino.cpp	/^volatile int extrudemultiply=100; \/\/100->1 200->2$/;"	v
false	src/wiring.h	47;"	d
fan_speed	src/planner.h	/^  unsigned long fan_speed;$/;"	m	struct:__anon1
fastDigitalRead	src/Sd2PinMap.h	/^  bool fastDigitalRead(uint8_t pin) {$/;"	f
fastDigitalWrite	src/Sd2PinMap.h	/^  void fastDigitalWrite(uint8_t pin, uint8_t value) {$/;"	f
fat16	src/SdVolume.h	/^  uint16_t fat16[256];$/;"	m	union:cache_t
fat32	src/SdVolume.h	/^  uint32_t fat32[128];$/;"	m	union:cache_t
fat32BackBootBlock	src/SdFatStructs.h	/^  uint16_t fat32BackBootBlock;$/;"	m	struct:fat32_boot
fat32FSInfo	src/SdFatStructs.h	/^  uint16_t fat32FSInfo;$/;"	m	struct:fat32_boot
fat32Flags	src/SdFatStructs.h	/^  uint16_t fat32Flags;$/;"	m	struct:fat32_boot
fat32Reserved	src/SdFatStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:fat32_boot
fat32RootCluster	src/SdFatStructs.h	/^  uint32_t fat32RootCluster;$/;"	m	struct:fat32_boot
fat32Version	src/SdFatStructs.h	/^  uint16_t fat32Version;$/;"	m	struct:fat32_boot
fat32_boot	src/SdFatStructs.h	/^struct fat32_boot {$/;"	s
fat32_boot_t	src/SdFatStructs.h	/^typedef struct fat32_boot fat32_boot_t;$/;"	t	typeref:struct:fat32_boot
fat32_fsinfo	src/SdFatStructs.h	/^struct fat32_fsinfo {$/;"	s
fat32_fsinfo_t	src/SdFatStructs.h	/^typedef struct fat32_fsinfo fat32_fsinfo_t;$/;"	t	typeref:struct:fat32_fsinfo
fatCount	src/SdFatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:fat32_boot
fatCount	src/SdFatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:fat_boot
fatCount	src/SdVolume.h	/^  uint8_t fatCount() const {return fatCount_;}$/;"	f	class:SdVolume
fatCount_	src/SdVolume.h	/^  uint8_t fatCount_;            \/\/ number of FATs on volume$/;"	m	class:SdVolume
fatGet	src/SdVolume.cpp	/^bool SdVolume::fatGet(uint32_t cluster, uint32_t* value) {$/;"	f	class:SdVolume
fatPut	src/SdVolume.cpp	/^bool SdVolume::fatPut(uint32_t cluster, uint32_t value) {$/;"	f	class:SdVolume
fatPutEOC	src/SdVolume.h	/^  bool fatPutEOC(uint32_t cluster) {$/;"	f	class:SdVolume
fatStartBlock	src/SdVolume.h	/^  uint32_t fatStartBlock() const {return fatStartBlock_;}$/;"	f	class:SdVolume
fatStartBlock_	src/SdVolume.h	/^  uint32_t fatStartBlock_;      \/\/ start block for first FAT$/;"	m	class:SdVolume
fatType	src/SdVolume.h	/^  uint8_t fatType() const {return fatType_;}$/;"	f	class:SdVolume
fatType_	src/SdVolume.h	/^  uint8_t fatType_;             \/\/ volume type (12, 16, OR 32)$/;"	m	class:SdVolume
fat_boot	src/SdFatStructs.h	/^struct fat_boot {$/;"	s
fat_boot_t	src/SdFatStructs.h	/^typedef struct fat_boot fat_boot_t;$/;"	t	typeref:struct:fat_boot
fbs	src/SdVolume.h	/^  fat_boot_t fbs;$/;"	m	union:cache_t
fbs32	src/SdVolume.h	/^  fat32_boot_t fbs32;$/;"	m	union:cache_t
feedmultiply	.build_ano/mega/src/Marlin.ino.cpp	/^volatile int feedmultiply=100; \/\/100->1 200->2$/;"	v
feedmultiplychanged	.build_ano/mega/src/Marlin.ino.cpp	/^volatile bool feedmultiplychanged=false;$/;"	v
feedrate	.build_ano/mega/src/Marlin.ino.cpp	/^static float feedrate = 1500.0, next_feedrate, saved_feedrate;$/;"	v	file:
fgets	src/SdBaseFile.cpp	/^int16_t SdBaseFile::fgets(char* str, int16_t num, char* delim) {$/;"	f	class:SdBaseFile
file	src/cardreader.h	/^  SdFile file;$/;"	m	class:CardReader
fileSize	src/SdBaseFile.h	/^  uint32_t fileSize() const {return fileSize_;}$/;"	f	class:SdBaseFile
fileSize	src/SdFatStructs.h	/^  uint32_t fileSize;$/;"	m	struct:directoryEntry
fileSize_	src/SdBaseFile.h	/^  uint32_t  fileSize_;      \/\/ file size in bytes$/;"	m	class:SdBaseFile
fileSystemType	src/SdFatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat32_boot
fileSystemType	src/SdFatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat_boot
file_format	src/SdInfo.h	/^  unsigned char file_format : 2;$/;"	m	struct:CSDV1
file_format	src/SdInfo.h	/^  unsigned char file_format : 2;$/;"	m	struct:CSDV2
file_format_grp	src/SdInfo.h	/^  unsigned char file_format_grp : 1;$/;"	m	struct:CSDV1
file_format_grp	src/SdInfo.h	/^  unsigned char file_format_grp : 1;$/;"	m	struct:CSDV2
filename	src/cardreader.h	/^  char filename[11];$/;"	m	class:CardReader
filenameIsDir	src/cardreader.h	/^  bool filenameIsDir;$/;"	m	class:CardReader
filesize	src/cardreader.h	/^  uint32_t filesize;$/;"	m	class:CardReader
final_advance	src/planner.h	/^    volatile long final_advance;$/;"	m	struct:__anon1
final_advance	src/stepper.cpp	/^  static long advance_rate, advance, final_advance = 0;$/;"	v	file:
final_rate	src/planner.h	/^  unsigned long final_rate;                          \/\/ The minimal rate at exit$/;"	m	struct:__anon1
finishAndDisableSteppers	src/stepper.cpp	/^void finishAndDisableSteppers()$/;"	f
firstCluster	src/SdBaseFile.h	/^  uint32_t firstCluster() const {return firstCluster_;}$/;"	f	class:SdBaseFile
firstClusterHigh	src/SdFatStructs.h	/^  uint16_t firstClusterHigh;$/;"	m	struct:directoryEntry
firstClusterLow	src/SdFatStructs.h	/^  uint16_t firstClusterLow;$/;"	m	struct:directoryEntry
firstCluster_	src/SdBaseFile.h	/^  uint32_t  firstCluster_;  \/\/ first cluster of file$/;"	m	class:SdBaseFile
firstSector	src/SdFatStructs.h	/^  uint32_t firstSector;$/;"	m	struct:partitionTable
flags_	src/SdBaseFile.h	/^  uint8_t   flags_;         \/\/ See above for definition of flags_ bits$/;"	m	class:SdBaseFile
flush	src/MarlinSerial.cpp	/^void MarlinSerial::flush()$/;"	f	class:MarlinSerial
force_lcd_update	src/ultralcd.h	/^    bool force_lcd_update;$/;"	m	class:MainMenu
fpos_t	src/SdBaseFile.h	/^  fpos_t() : position(0), cluster(0) {}$/;"	f	struct:fpos_t
fpos_t	src/SdBaseFile.h	/^struct fpos_t {$/;"	s
freeChain	src/SdVolume.cpp	/^bool SdVolume::freeChain(uint32_t cluster) {$/;"	f	class:SdVolume
freeClusterCount	src/SdVolume.cpp	/^int32_t SdVolume::freeClusterCount() {$/;"	f	class:SdVolume
freeCount	src/SdFatStructs.h	/^  uint32_t freeCount;$/;"	m	struct:fat32_fsinfo
freeMemory	.build_ano/mega/src/Marlin.ino.cpp	/^  int freeMemory() {$/;"	f
fromsd	.build_ano/mega/src/Marlin.ino.cpp	/^static bool fromsd[BUFSIZE];$/;"	v	file:
fsinfo	src/SdVolume.h	/^  fat32_fsinfo_t fsinfo;$/;"	m	union:cache_t
fstate_	src/SdBaseFile.h	/^  uint8_t   fstate_;        \/\/ error and eof indicator$/;"	m	class:SdBaseFile
gcode_LastN	.build_ano/mega/src/Marlin.ino.cpp	/^static long gcode_N, gcode_LastN;$/;"	v	file:
gcode_N	.build_ano/mega/src/Marlin.ino.cpp	/^static long gcode_N, gcode_LastN;$/;"	v	file:
get	src/cardreader.h	/^  FORCE_INLINE int16_t get() {  sdpos = file.curPosition();return (int16_t)file.read();};$/;"	f	class:CardReader
getFilename	src/SdBaseFile.cpp	/^bool SdBaseFile::getFilename(char* name) {$/;"	f	class:SdBaseFile
getHeaterPower	src/temperature.cpp	/^int getHeaterPower(int heater) {$/;"	f
getHighESpeed	src/planner.cpp	/^void getHighESpeed()$/;"	f
getPinMode	src/Sd2PinMap.h	/^  bool getPinMode(uint8_t pin) {$/;"	f
getStatus	src/cardreader.cpp	/^void CardReader::getStatus()$/;"	f	class:CardReader
getWorkDirName	src/cardreader.h	/^  FORCE_INLINE char* getWorkDirName(){workDir.getFilename(filename);return filename;};$/;"	f	class:CardReader
get_arc_coordinates	.build_ano/mega/src/Marlin.ino.cpp	/^void get_arc_coordinates()$/;"	f
get_command	.build_ano/mega/src/Marlin.ino.cpp	/^void get_command() $/;"	f
get_coordinates	.build_ano/mega/src/Marlin.ino.cpp	/^void get_coordinates()$/;"	f
getfilename	src/cardreader.cpp	/^void CardReader::getfilename(const uint8_t nr)$/;"	f	class:CardReader
getnrfilenames	src/cardreader.cpp	/^uint16_t CardReader::getnrfilenames()$/;"	f	class:CardReader
getpos	src/SdBaseFile.cpp	/^void SdBaseFile::getpos(fpos_t* pos) {$/;"	f	class:SdBaseFile
head	src/MarlinSerial.h	/^  int head;$/;"	m	struct:ring_buffer
headCount	src/SdFatStructs.h	/^  uint16_t headCount;$/;"	m	struct:fat32_boot
headCount	src/SdFatStructs.h	/^  uint16_t headCount;$/;"	m	struct:fat_boot
heater_0_temptable	src/thermistortables.h	328;"	d
heater_0_temptable	src/thermistortables.h	334;"	d
heater_0_temptable_len	src/thermistortables.h	329;"	d
heater_0_temptable_len	src/thermistortables.h	335;"	d
heater_1_temptable	src/thermistortables.h	340;"	d
heater_1_temptable	src/thermistortables.h	346;"	d
heater_1_temptable_len	src/thermistortables.h	341;"	d
heater_1_temptable_len	src/thermistortables.h	347;"	d
heater_2_temptable	src/thermistortables.h	352;"	d
heater_2_temptable	src/thermistortables.h	358;"	d
heater_2_temptable_len	src/thermistortables.h	353;"	d
heater_2_temptable_len	src/thermistortables.h	359;"	d
heater_pin_map	src/temperature.cpp	/^  static int heater_pin_map[EXTRUDERS] = { HEATER_0_PIN$/;"	v	file:
heater_ttbl_map	src/temperature.cpp	/^  static void *heater_ttbl_map[EXTRUDERS] = { (void *)heater_0_temptable$/;"	v	file:
heater_ttbllen_map	src/temperature.cpp	/^  static int heater_ttbllen_map[EXTRUDERS] = { heater_0_temptable_len$/;"	v	file:
hidddenSectors	src/SdFatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:fat32_boot
hidddenSectors	src/SdFatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:fat_boot
highByte	src/wiring.h	98;"	d
home_all_axis	.build_ano/mega/src/Marlin.ino.cpp	/^static bool home_all_axis = true;$/;"	v	file:
homing_feedrate	.build_ano/mega/src/Marlin.ino.cpp	/^float homing_feedrate[] = HOMING_FEEDRATE;$/;"	v
iTerm	src/temperature.cpp	/^  static float iTerm[EXTRUDERS];$/;"	v	file:
init	src/Sd2Card.cpp	/^bool Sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin) {$/;"	f	class:Sd2Card
init	src/SdVolume.cpp	/^bool SdVolume::init(Sd2Card* dev, uint8_t part) {$/;"	f	class:SdVolume
init	src/SdVolume.h	/^  bool init(Sd2Card& dev) {return init(&dev);}  \/\/ NOLINT$/;"	f	class:SdVolume
init	src/SdVolume.h	/^  bool init(Sd2Card& dev, uint8_t part) {  \/\/ NOLINT$/;"	f	class:SdVolume
init	src/SdVolume.h	/^  bool init(Sd2Card* dev) { return init(dev, 1) ? true : init(dev, 0);}$/;"	f	class:SdVolume
initial_advance	src/planner.h	/^    volatile long initial_advance;$/;"	m	struct:__anon1
initial_rate	src/planner.h	/^  unsigned long initial_rate;                        \/\/ The jerk-adjusted step rate at start of block  $/;"	m	struct:__anon1
initsd	src/cardreader.cpp	/^void CardReader::initsd()$/;"	f	class:CardReader
interrupts	src/wiring.h	90;"	d
intersection_distance	src/planner.cpp	/^FORCE_INLINE float intersection_distance(float initial_rate, float final_rate, float acceleration, float distance) $/;"	f
isCoolingBed	src/temperature.h	/^FORCE_INLINE bool isCoolingBed() {$/;"	f
isCoolingHotend	src/temperature.h	/^FORCE_INLINE bool isCoolingHotend(uint8_t extruder) {  $/;"	f
isCoolingHotend0	src/temperature.h	125;"	d
isCoolingHotend1	src/temperature.h	131;"	d
isCoolingHotend2	src/temperature.h	138;"	d
isDir	src/SdBaseFile.h	/^  bool isDir() const {return type_ >= FAT_FILE_TYPE_MIN_DIR;}$/;"	f	class:SdBaseFile
isEOC	src/SdVolume.h	/^  bool isEOC(uint32_t cluster) const {$/;"	f	class:SdVolume
isFile	src/SdBaseFile.h	/^  bool isFile() const {return type_ == FAT_FILE_TYPE_NORMAL;}$/;"	f	class:SdBaseFile
isHeatingBed	src/temperature.h	/^FORCE_INLINE bool isHeatingBed() {$/;"	f
isHeatingHotend	src/temperature.h	/^FORCE_INLINE bool isHeatingHotend(uint8_t extruder){  $/;"	f
isHeatingHotend0	src/temperature.h	124;"	d
isHeatingHotend1	src/temperature.h	130;"	d
isHeatingHotend2	src/temperature.h	137;"	d
isOpen	src/SdBaseFile.h	/^  bool isOpen() const {return type_ != FAT_FILE_TYPE_CLOSED;}$/;"	f	class:SdBaseFile
isRoot	src/SdBaseFile.h	/^  bool isRoot() const {$/;"	f	class:SdBaseFile
isSubDir	src/SdBaseFile.h	/^  bool isSubDir() const {return type_ == FAT_FILE_TYPE_SUBDIR;}$/;"	f	class:SdBaseFile
jump	src/SdFatStructs.h	/^  uint8_t jump[3];$/;"	m	struct:fat32_boot
jump	src/SdFatStructs.h	/^  uint8_t jump[3];$/;"	m	struct:fat_boot
junction_deviation	src/planner.cpp	/^float junction_deviation = 0.1;$/;"	v
kill	.build_ano/mega/src/Marlin.ino.cpp	/^void kill()$/;"	f
lastAccessDate	src/SdFatStructs.h	/^  uint16_t lastAccessDate;$/;"	m	struct:directoryEntry
lastMotor	.build_ano/mega/src/Marlin.ino.cpp	/^unsigned long lastMotor = 0; \/\/Save the time for when a motor was turned on last$/;"	v
lastMotorCheck	.build_ano/mega/src/Marlin.ino.cpp	/^unsigned long lastMotorCheck = 0;$/;"	v
lastWriteDate	src/SdFatStructs.h	/^  uint16_t lastWriteDate;$/;"	m	struct:directoryEntry
lastWriteTime	src/SdFatStructs.h	/^  uint16_t lastWriteTime;$/;"	m	struct:directoryEntry
lastencoderpos	src/ultralcd.h	/^    int lastencoderpos;$/;"	m	class:MainMenu
lastlineoffset	src/ultralcd.h	/^    int8_t lastlineoffset;$/;"	m	class:MainMenu
lastnr	src/cardreader.h	/^  int lastnr; \/\/last number of the autostart;$/;"	m	class:CardReader
lcd_status	src/ultralcd.h	/^  FORCE_INLINE void lcd_status() {};$/;"	f
lcdslow	src/ultralcd.h	50;"	d
leadSignature	src/SdFatStructs.h	/^  uint32_t  leadSignature;$/;"	m	struct:fat32_fsinfo
linechanging	src/ultralcd.h	/^    bool linechanging;$/;"	m	class:MainMenu
lineoffset	src/ultralcd.h	/^    int8_t lineoffset;$/;"	m	class:MainMenu
loop	.build_ano/mega/src/Marlin.ino.cpp	/^void loop()$/;"	f
lowByte	src/wiring.h	97;"	d
ls	src/SdBaseFile.cpp	/^void SdBaseFile::ls(uint8_t flags, uint8_t indent) {$/;"	f	class:SdBaseFile
ls	src/cardreader.cpp	/^void CardReader::ls() $/;"	f	class:CardReader
lsAction	src/cardreader.h	/^  LsAction lsAction; \/\/stored for recursion.$/;"	m	class:CardReader
lsDive	src/cardreader.cpp	/^void  CardReader::lsDive(const char *prepend,SdFile parent)$/;"	f	class:CardReader
lsPrintNext	src/SdBaseFile.cpp	/^int8_t SdBaseFile::lsPrintNext( uint8_t flags, uint8_t indent) {$/;"	f	class:SdBaseFile
make83Name	src/SdBaseFile.cpp	/^bool SdBaseFile::make83Name(const char* str, uint8_t* name, const char** ptr) {$/;"	f	class:SdBaseFile
makeDir	src/SdBaseFile.h	/^  bool makeDir(SdBaseFile* dir, const char* path) {$/;"	f	class:SdBaseFile
manage_heater	src/temperature.cpp	/^void manage_heater()$/;"	f
manage_inactivity	.build_ano/mega/src/Marlin.ino.cpp	/^void manage_inactivity(byte debug) $/;"	f
masterBootRecord	src/SdFatStructs.h	/^struct masterBootRecord {$/;"	s
max	src/wiring.h	80;"	d
max6675_previous_millis	src/temperature.cpp	/^long max6675_previous_millis = -HEAT_INTERVAL;$/;"	v
max6675_temp	src/temperature.cpp	/^int max6675_temp = 2000;$/;"	v
max_acceleration_units_per_sq_second	src/planner.cpp	/^unsigned long max_acceleration_units_per_sq_second[4]; \/\/ Use M201 to override by software$/;"	v
max_allowable_speed	src/planner.cpp	/^FORCE_INLINE float max_allowable_speed(float acceleration, float target_velocity, float distance) {$/;"	f
max_e_jerk	src/planner.cpp	/^float max_e_jerk;$/;"	v
max_entry_speed	src/planner.h	/^  float max_entry_speed;                             \/\/ Maximum allowable junction entry speed in mm\/min$/;"	m	struct:__anon1
max_feedrate	src/planner.cpp	/^float max_feedrate[4]; \/\/ set the max speeds$/;"	v
max_inactive_time	.build_ano/mega/src/Marlin.ino.cpp	/^static unsigned long max_inactive_time = 0;$/;"	v	file:
max_software_endstops	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	123;"	d
max_software_endstops	src/Configuration.h	131;"	d
max_temp_error	src/temperature.cpp	/^void max_temp_error(uint8_t e) {$/;"	f
max_xy_jerk	src/planner.cpp	/^float max_xy_jerk; \/\/speed than can be stopped at once, if i understand correctly.$/;"	v
max_z_jerk	src/planner.cpp	/^float max_z_jerk;$/;"	v
maxttemp	src/temperature.cpp	/^  static int maxttemp[EXTRUDERS] = { 16383 }; \/\/ the first value used for all$/;"	v	file:
mbr	src/SdVolume.h	/^  mbr_t    mbr;$/;"	m	union:cache_t
mbrSig0	src/SdFatStructs.h	/^  uint8_t  mbrSig0;$/;"	m	struct:masterBootRecord
mbrSig1	src/SdFatStructs.h	/^  uint8_t  mbrSig1;$/;"	m	struct:masterBootRecord
mbr_t	src/SdFatStructs.h	/^typedef struct masterBootRecord mbr_t;$/;"	t	typeref:struct:masterBootRecord
mc_arc	src/motion_control.cpp	/^void mc_arc(float *position, float *target, float *offset, uint8_t axis_0, uint8_t axis_1, $/;"	f
mdt_month	src/SdInfo.h	/^  unsigned char mdt_month : 4;$/;"	m	struct:CID
mdt_year_high	src/SdInfo.h	/^  unsigned char mdt_year_high : 4;$/;"	m	struct:CID
mdt_year_low	src/SdInfo.h	/^  unsigned char mdt_year_low :4;$/;"	m	struct:CID
mediaType	src/SdFatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:fat32_boot
mediaType	src/SdFatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:fat_boot
microsecondsToClockCycles	src/wiring.h	95;"	d
mid	src/SdInfo.h	/^  unsigned char mid;$/;"	m	struct:CID
millimeters	src/planner.h	/^  float millimeters;                                 \/\/ The total travel of this block in mm$/;"	m	struct:__anon1
min	src/wiring.h	79;"	d
min_software_endstops	src/Configuration (Sandstone's conflicted copy 2014-03-26).h	122;"	d
min_software_endstops	src/Configuration.h	130;"	d
min_temp_error	src/temperature.cpp	/^void min_temp_error(uint8_t e) {$/;"	f
minimumfeedrate	src/planner.cpp	/^float minimumfeedrate;$/;"	v
minsegmenttime	src/planner.cpp	/^unsigned long minsegmenttime;$/;"	v
mintravelfeedrate	src/planner.cpp	/^float mintravelfeedrate;$/;"	v
minttemp	src/temperature.cpp	/^  static int minttemp[EXTRUDERS] = { 0 };$/;"	v	file:
mkdir	src/SdBaseFile.cpp	/^bool SdBaseFile::mkdir(SdBaseFile* parent, const char* path, bool pFlag) {$/;"	f	class:SdBaseFile
mkdir	src/SdBaseFile.cpp	/^bool SdBaseFile::mkdir(SdBaseFile* parent, const uint8_t dname[11]) {$/;"	f	class:SdBaseFile
mkdir	src/SdBaseFile.h	/^  bool mkdir(SdBaseFile& dir, const char* path) {  \/\/ NOLINT$/;"	f	class:SdBaseFile
motion_control_h	src/motion_control.h	23;"	d
movesplanned	src/planner.cpp	/^uint8_t movesplanned()$/;"	f
name	src/SdFatStructs.h	/^  uint8_t  name[11];$/;"	m	struct:directoryEntry
nextFree	src/SdFatStructs.h	/^  uint32_t nextFree;$/;"	m	struct:fat32_fsinfo
next_block_index	src/planner.cpp	/^static int8_t next_block_index(int8_t block_index) {$/;"	f	file:
next_feedrate	.build_ano/mega/src/Marlin.ino.cpp	/^static float feedrate = 1500.0, next_feedrate, saved_feedrate;$/;"	v	file:
noInterrupts	src/wiring.h	91;"	d
nominal_length_flag	src/planner.h	/^  unsigned char nominal_length_flag;                 \/\/ Planner flag for nominal speed always reached$/;"	m	struct:__anon1
nominal_rate	src/planner.h	/^  unsigned long nominal_rate;                        \/\/ The nominal step rate for this block in step_events\/sec $/;"	m	struct:__anon1
nominal_speed	src/planner.h	/^  float nominal_speed;                               \/\/ The nominal speed for this block in mm\/min  $/;"	m	struct:__anon1
nop	src/Sd2Card.cpp	85;"	d	file:
nrFiles	src/cardreader.h	/^  int16_t nrFiles; \/\/counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.$/;"	m	class:CardReader
nsac	src/SdInfo.h	/^  unsigned char nsac;$/;"	m	struct:CSDV1
nsac	src/SdInfo.h	/^  unsigned char nsac;$/;"	m	struct:CSDV2
oemId	src/SdFatStructs.h	/^  char    oemId[8];$/;"	m	struct:fat32_boot
oemId	src/SdFatStructs.h	/^  char    oemId[8];$/;"	m	struct:fat_boot
offset	.build_ano/mega/src/Marlin.ino.cpp	/^static float offset[3] = {0.0, 0.0, 0.0};$/;"	v	file:
oid	src/SdInfo.h	/^  char oid[2];$/;"	m	struct:CID
oldDateTime_	src/SdBaseFile.cpp	/^void (*SdBaseFile::oldDateTime_)(uint16_t& date, uint16_t& time) = 0;  \/\/ NOLINT$/;"	v
oldDateTime_	src/SdBaseFile.h	/^  static void (*oldDateTime_)(uint16_t& date, uint16_t& time);  \/\/ NOLINT$/;"	m	class:SdBaseFile
oldToNew	src/SdBaseFile.h	/^  static void oldToNew(uint16_t* date, uint16_t* time) {$/;"	f	class:SdBaseFile
old_OCR0A	src/stepper.cpp	/^  unsigned char old_OCR0A;$/;"	v
old_advance	src/stepper.cpp	/^  static long old_advance = 0;$/;"	v	file:
old_direction_bits	src/planner.cpp	/^  static unsigned char old_direction_bits = 0;               \/\/ Old direction bits. Used for speed calculations$/;"	v	file:
old_x_max_endstop	src/stepper.cpp	/^static bool old_x_max_endstop=false;$/;"	v	file:
old_x_min_endstop	src/stepper.cpp	/^static bool old_x_min_endstop=false;$/;"	v	file:
old_y_max_endstop	src/stepper.cpp	/^static bool old_y_max_endstop=false;$/;"	v	file:
old_y_min_endstop	src/stepper.cpp	/^static bool old_y_min_endstop=false;$/;"	v	file:
old_z_max_endstop	src/stepper.cpp	/^static bool old_z_max_endstop=false;$/;"	v	file:
old_z_min_endstop	src/stepper.cpp	/^static bool old_z_min_endstop=false;$/;"	v	file:
open	src/SdBaseFile.cpp	/^  bool SdBaseFile::open(const char* path, uint8_t oflag) {$/;"	f	class:SdBaseFile
open	src/SdBaseFile.cpp	/^bool SdBaseFile::open(SdBaseFile* dirFile, const char* path, uint8_t oflag) {$/;"	f	class:SdBaseFile
open	src/SdBaseFile.cpp	/^bool SdBaseFile::open(SdBaseFile* dirFile, uint16_t index, uint8_t oflag) {$/;"	f	class:SdBaseFile
open	src/SdBaseFile.cpp	/^bool SdBaseFile::open(SdBaseFile* dirFile,$/;"	f	class:SdBaseFile
open	src/SdBaseFile.h	/^  bool open(SdBaseFile& dirFile, \/\/ NOLINT$/;"	f	class:SdBaseFile
open	src/SdBaseFile.h	/^  bool open(SdBaseFile& dirFile, const char* path) {  \/\/ NOLINT$/;"	f	class:SdBaseFile
open	src/SdBaseFile.h	/^  bool open(SdBaseFile& dirFile, uint16_t index, uint8_t oflag) {  \/\/ NOLINT$/;"	f	class:SdBaseFile
openCachedEntry	src/SdBaseFile.cpp	/^bool SdBaseFile::openCachedEntry(uint8_t dirIndex, uint8_t oflag) {$/;"	f	class:SdBaseFile
openFile	src/cardreader.cpp	/^void CardReader::openFile(char* name,bool read)$/;"	f	class:CardReader
openNext	src/SdBaseFile.cpp	/^bool SdBaseFile::openNext(SdBaseFile* dirFile, uint8_t oflag) {$/;"	f	class:SdBaseFile
openParent	src/SdBaseFile.cpp	/^bool SdBaseFile::openParent(SdBaseFile* dir) {$/;"	f	class:SdBaseFile
openRoot	src/SdBaseFile.cpp	/^bool SdBaseFile::openRoot(SdVolume* vol) {$/;"	f	class:SdBaseFile
openRoot	src/SdBaseFile.h	/^  bool openRoot(SdVolume& vol) {return openRoot(&vol);}  \/\/ NOLINT$/;"	f	class:SdBaseFile
out_bits	src/stepper.cpp	/^static unsigned char out_bits;        \/\/ The next stepping-bits to be output$/;"	v	file:
pTerm	src/temperature.cpp	/^  static float pTerm[EXTRUDERS];$/;"	v	file:
part	src/SdFatStructs.h	/^  part_t   part[4];$/;"	m	struct:masterBootRecord
part_t	src/SdFatStructs.h	/^typedef struct partitionTable part_t;$/;"	t	typeref:struct:partitionTable
partitionTable	src/SdFatStructs.h	/^struct partitionTable {$/;"	s
pauseSDPrint	src/cardreader.cpp	/^void CardReader::pauseSDPrint()$/;"	f	class:CardReader
peek	src/MarlinSerial.cpp	/^int MarlinSerial::peek(void)$/;"	f	class:MarlinSerial
peek	src/SdBaseFile.cpp	/^int SdBaseFile::peek() {$/;"	f	class:SdBaseFile
percentDone	src/cardreader.h	/^  FORCE_INLINE uint8_t percentDone(){if(!sdprinting) return 0; if(filesize) return sdpos*100\/filesize; else return 0;};$/;"	f	class:CardReader
perm_write_protect	src/SdInfo.h	/^  unsigned char perm_write_protect : 1;$/;"	m	struct:CSDV1
perm_write_protect	src/SdInfo.h	/^  unsigned char perm_write_protect : 1;$/;"	m	struct:CSDV2
pid_error	src/temperature.cpp	/^  static float pid_error[EXTRUDERS];$/;"	v	file:
pid_reset	src/temperature.cpp	/^  static bool pid_reset[EXTRUDERS];$/;"	v	file:
pid_setpoint	src/temperature.cpp	/^  float pid_setpoint[EXTRUDERS] = { 0.0 };$/;"	v
pin	src/Sd2PinMap.h	/^  volatile uint8_t* pin;$/;"	m	struct:pin_map_t
pin_map_t	src/Sd2PinMap.h	/^struct pin_map_t {$/;"	s
plan_buffer_line	src/planner.cpp	/^void plan_buffer_line(const float &x, const float &y, const float &z, const float &e, float feed_rate, const uint8_t &extruder)$/;"	f
plan_discard_current_block	src/planner.h	/^FORCE_INLINE void plan_discard_current_block()  $/;"	f
plan_get_current_block	src/planner.h	/^FORCE_INLINE block_t *plan_get_current_block() $/;"	f
plan_init	src/planner.cpp	/^void plan_init() {$/;"	f
plan_set_e_position	src/planner.cpp	/^void plan_set_e_position(const float &e)$/;"	f
plan_set_position	src/planner.cpp	/^void plan_set_position(const float &x, const float &y, const float &z, const float &e)$/;"	f
planner_forward_pass	src/planner.cpp	/^void planner_forward_pass() {$/;"	f
planner_forward_pass_kernel	src/planner.cpp	/^void planner_forward_pass_kernel(block_t *previous, block_t *current, block_t *next) {$/;"	f
planner_h	src/planner.h	25;"	d
planner_recalculate	src/planner.cpp	/^void planner_recalculate() {   $/;"	f
planner_recalculate_trapezoids	src/planner.cpp	/^void planner_recalculate_trapezoids() {$/;"	f
planner_reverse_pass	src/planner.cpp	/^void planner_reverse_pass() {$/;"	f
planner_reverse_pass_kernel	src/planner.cpp	/^void planner_reverse_pass_kernel(block_t *previous, block_t *current, block_t *next) {$/;"	f
pnm	src/SdInfo.h	/^  char pnm[5];$/;"	m	struct:CID
port	src/Sd2PinMap.h	/^  volatile uint8_t* port;$/;"	m	struct:pin_map_t
position	src/SdBaseFile.h	/^  uint32_t position;$/;"	m	struct:fpos_t
position	src/planner.cpp	/^long position[4];   \/\/rescaled from extern when axis_steps_per_unit are changed by gcode$/;"	v
prepare_arc_move	.build_ano/mega/src/Marlin.ino.cpp	/^void prepare_arc_move(char isclockwise) {$/;"	f
prepare_move	.build_ano/mega/src/Marlin.ino.cpp	/^void prepare_move()$/;"	f
prev_block_index	src/planner.cpp	/^static int8_t prev_block_index(int8_t block_index) {$/;"	f	file:
previous_millis_bed_heater	src/temperature.cpp	/^static unsigned long  previous_millis_bed_heater;$/;"	v	file:
previous_millis_cmd	.build_ano/mega/src/Marlin.ino.cpp	/^static unsigned long previous_millis_cmd = 0;$/;"	v	file:
previous_nominal_speed	src/planner.cpp	/^static float previous_nominal_speed; \/\/ Nominal speed of previous path line segment$/;"	v	file:
previous_speed	src/planner.cpp	/^static float previous_speed[4]; \/\/ Speed of previous path line segment$/;"	v	file:
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(char c, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(double n, int digits)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(int n, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(long n, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(unsigned char b, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(unsigned int n, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.cpp	/^void MarlinSerial::print(unsigned long n, int base)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.h	/^    FORCE_INLINE void print(const String &s)$/;"	f	class:MarlinSerial
print	src/MarlinSerial.h	/^    FORCE_INLINE void print(const char *str)$/;"	f	class:MarlinSerial
print2u	src/SdBaseFile.cpp	/^static void print2u( uint8_t v) {$/;"	f	file:
printDirName	src/SdBaseFile.cpp	/^void SdBaseFile::printDirName(const dir_t& dir,$/;"	f	class:SdBaseFile
printFatDate	src/SdBaseFile.cpp	/^void SdBaseFile::printFatDate(uint16_t fatDate) {$/;"	f	class:SdBaseFile
printFatTime	src/SdBaseFile.cpp	/^void SdBaseFile::printFatTime( uint16_t fatTime) {$/;"	f	class:SdBaseFile
printFloat	src/MarlinSerial.cpp	/^void MarlinSerial::printFloat(double number, uint8_t digits) $/;"	f	class:MarlinSerial
printName	src/SdBaseFile.cpp	/^bool SdBaseFile::printName() {$/;"	f	class:SdBaseFile
printNumber	src/MarlinSerial.cpp	/^void MarlinSerial::printNumber(unsigned long n, uint8_t base)$/;"	f	class:MarlinSerial
print_P	src/SdFatUtil.cpp	/^void SdFatUtil::print_P( PGM_P str) {$/;"	f	class:SdFatUtil
printingHasFinished	src/cardreader.cpp	/^void CardReader::printingHasFinished()$/;"	f	class:CardReader
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(char c, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(const String &s)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(const char c[])$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(double n, int digits)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(int n, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(long n, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(unsigned char b, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(unsigned int n, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(unsigned long n, int base)$/;"	f	class:MarlinSerial
println	src/MarlinSerial.cpp	/^void MarlinSerial::println(void)$/;"	f	class:MarlinSerial
println_P	src/SdFatUtil.cpp	/^void SdFatUtil::println_P( PGM_P str) {$/;"	f	class:SdFatUtil
process_commands	.build_ano/mega/src/Marlin.ino.cpp	/^void process_commands()$/;"	f
prv_m	src/SdInfo.h	/^  unsigned char prv_m : 4;$/;"	m	struct:CID
prv_n	src/SdInfo.h	/^  unsigned char prv_n : 4;$/;"	m	struct:CID
psn	src/SdInfo.h	/^  uint32_t psn;$/;"	m	struct:CID
quickStop	src/stepper.cpp	/^void quickStop()$/;"	f
r2w_factor	src/SdInfo.h	/^  unsigned char r2w_factor : 3;$/;"	m	struct:CSDV1
r2w_factor	src/SdInfo.h	/^  unsigned char r2w_factor : 3;$/;"	m	struct:CSDV2
radians	src/wiring.h	86;"	d
read	src/MarlinSerial.cpp	/^int MarlinSerial::read(void)$/;"	f	class:MarlinSerial
read	src/SdBaseFile.cpp	/^int16_t SdBaseFile::read() {$/;"	f	class:SdBaseFile
read	src/SdBaseFile.cpp	/^int16_t SdBaseFile::read(void* buf, uint16_t nbyte) {$/;"	f	class:SdBaseFile
readBlock	src/Sd2Card.cpp	/^bool Sd2Card::readBlock(uint32_t blockNumber, uint8_t* dst) {$/;"	f	class:Sd2Card
readBlock	src/SdVolume.h	/^  bool readBlock(uint32_t block, uint8_t* dst) {$/;"	f	class:SdVolume
readCID	src/Sd2Card.h	/^  bool readCID(cid_t* cid) {$/;"	f	class:Sd2Card
readCSD	src/Sd2Card.h	/^  bool readCSD(csd_t* csd) {$/;"	f	class:Sd2Card
readData	src/Sd2Card.cpp	/^bool Sd2Card::readData(uint8_t *dst) {$/;"	f	class:Sd2Card
readData	src/Sd2Card.cpp	/^bool Sd2Card::readData(uint8_t* dst, uint16_t count) {$/;"	f	class:Sd2Card
readDir	src/SdBaseFile.cpp	/^int8_t SdBaseFile::readDir(dir_t* dir) {$/;"	f	class:SdBaseFile
readDir	src/SdBaseFile.h	/^  int8_t readDir(dir_t& dir) {return readDir(&dir);}  \/\/ NOLINT$/;"	f	class:SdBaseFile
readDirCache	src/SdBaseFile.cpp	/^dir_t* SdBaseFile::readDirCache() {$/;"	f	class:SdBaseFile
readRegister	src/Sd2Card.cpp	/^bool Sd2Card::readRegister(uint8_t cmd, void* buf) {$/;"	f	class:Sd2Card
readStart	src/Sd2Card.cpp	/^bool Sd2Card::readStart(uint32_t blockNumber) {$/;"	f	class:Sd2Card
readStop	src/Sd2Card.cpp	/^bool Sd2Card::readStop() {$/;"	f	class:Sd2Card
read_bl_len	src/SdInfo.h	/^  unsigned char read_bl_len : 4;$/;"	m	struct:CSDV1
read_bl_len	src/SdInfo.h	/^  unsigned char read_bl_len : 4;$/;"	m	struct:CSDV2
read_bl_partial	src/SdInfo.h	/^  unsigned char read_bl_partial : 1;$/;"	m	struct:CSDV1
read_bl_partial	src/SdInfo.h	/^  unsigned char read_bl_partial : 1;$/;"	m	struct:CSDV2
read_blk_misalign	src/SdInfo.h	/^  unsigned char read_blk_misalign :1;$/;"	m	struct:CSDV1
read_blk_misalign	src/SdInfo.h	/^  unsigned char read_blk_misalign :1;$/;"	m	struct:CSDV2
read_max6675	src/temperature.cpp	/^int read_max6675()$/;"	f
recalculate_flag	src/planner.h	/^  unsigned char recalculate_flag;                    \/\/ Planner flag to recalculate trapezoids on entry junction$/;"	m	struct:__anon1
relative_mode	.build_ano/mega/src/Marlin.ino.cpp	/^static bool relative_mode = false;  \/\/Determines Absolute or Relative Coordinates$/;"	v	file:
relative_mode_e	.build_ano/mega/src/Marlin.ino.cpp	/^static bool relative_mode_e = false;  \/\/Determines Absolute or Relative E Codes while in Absolute Coordinates mode. E is always relative in Relative Coordinates mode.$/;"	v	file:
release	src/cardreader.cpp	/^void CardReader::release()$/;"	f	class:CardReader
remove	src/SdBaseFile.cpp	/^bool SdBaseFile::remove() {$/;"	f	class:SdBaseFile
remove	src/SdBaseFile.cpp	/^bool SdBaseFile::remove(SdBaseFile* dirFile, const char* path) {$/;"	f	class:SdBaseFile
remove	src/SdBaseFile.h	/^  static bool remove(SdBaseFile& dirFile, const char* path) {  \/\/ NOLINT$/;"	f	class:SdBaseFile
removeFile	src/cardreader.cpp	/^void CardReader::removeFile(char* name)$/;"	f	class:CardReader
rename	src/SdBaseFile.cpp	/^bool SdBaseFile::rename(SdBaseFile* dirFile, const char* newPath) {$/;"	f	class:SdBaseFile
reserved	src/SdInfo.h	/^  unsigned char reserved : 4;$/;"	m	struct:CID
reserved1	src/SdFatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat32_boot
reserved1	src/SdFatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat_boot
reserved1	src/SdFatStructs.h	/^  uint8_t  reserved1[480];$/;"	m	struct:fat32_fsinfo
reserved1	src/SdInfo.h	/^  unsigned char reserved1 : 6;$/;"	m	struct:CSDV1
reserved1	src/SdInfo.h	/^  unsigned char reserved1 : 6;$/;"	m	struct:CSDV2
reserved2	src/SdFatStructs.h	/^  uint8_t  reserved2[12];$/;"	m	struct:fat32_fsinfo
reserved2	src/SdInfo.h	/^  unsigned char reserved2 : 2;$/;"	m	struct:CSDV1
reserved2	src/SdInfo.h	/^  unsigned char reserved2 : 4;$/;"	m	struct:CSDV2
reserved3	src/SdInfo.h	/^  unsigned char reserved3 : 2;$/;"	m	struct:CSDV1
reserved3	src/SdInfo.h	/^  unsigned char reserved3 : 2;$/;"	m	struct:CSDV2
reserved4	src/SdInfo.h	/^  unsigned char reserved4 : 1;$/;"	m	struct:CSDV2
reserved4	src/SdInfo.h	/^  unsigned char reserved4 : 5;$/;"	m	struct:CSDV1
reserved5	src/SdInfo.h	/^  unsigned char reserved5 : 2;$/;"	m	struct:CSDV2
reserved5	src/SdInfo.h	/^  unsigned char reserved5: 2;$/;"	m	struct:CSDV1
reserved6	src/SdInfo.h	/^  unsigned char reserved6 : 5;$/;"	m	struct:CSDV2
reserved7	src/SdInfo.h	/^  unsigned char reserved7: 2;$/;"	m	struct:CSDV2
reservedNT	src/SdFatStructs.h	/^  uint8_t  reservedNT;$/;"	m	struct:directoryEntry
reservedSectorCount	src/SdFatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:fat32_boot
reservedSectorCount	src/SdFatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:fat_boot
retract_acceleration	src/planner.cpp	/^float retract_acceleration; \/\/  mm\/s^2   filament pull-pack and push-forward  while standing still in the other axis M204 TXXXX$/;"	v
rewind	src/SdBaseFile.h	/^  void rewind() {seekSet(0);}$/;"	f	class:SdBaseFile
ring_buffer	src/MarlinSerial.h	/^struct ring_buffer$/;"	s
rmDir	src/SdBaseFile.h	/^  bool rmDir() {return rmdir();}$/;"	f	class:SdBaseFile
rmRfStar	src/SdBaseFile.cpp	/^bool SdBaseFile::rmRfStar() {$/;"	f	class:SdBaseFile
rmdir	src/SdBaseFile.cpp	/^bool SdBaseFile::rmdir() {$/;"	f	class:SdBaseFile
root	src/cardreader.h	/^  SdFile root,*curDir,workDir,workDirParent,workDirParentParent;$/;"	m	class:CardReader
rootDirEntryCount	src/SdFatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:fat32_boot
rootDirEntryCount	src/SdFatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:fat_boot
rootDirEntryCount	src/SdVolume.h	/^  uint32_t rootDirEntryCount() const {return rootDirEntryCount_;}$/;"	f	class:SdVolume
rootDirEntryCount_	src/SdVolume.h	/^  uint16_t rootDirEntryCount_;  \/\/ number of entries in FAT16 root dir$/;"	m	class:SdVolume
rootDirStart	src/SdVolume.h	/^  uint32_t rootDirStart() const {return rootDirStart_;}$/;"	f	class:SdVolume
rootDirStart_	src/SdVolume.h	/^  uint32_t rootDirStart_;       \/\/ root start block for FAT16, cluster for FAT32$/;"	m	class:SdVolume
round	src/wiring.h	84;"	d
rx_buffer	src/MarlinSerial.cpp	/^  ring_buffer rx_buffer  =  { { 0 }, 0, 0 };$/;"	v
saved_feedmultiply	.build_ano/mega/src/Marlin.ino.cpp	/^int saved_feedmultiply;$/;"	v
saved_feedrate	.build_ano/mega/src/Marlin.ino.cpp	/^static float feedrate = 1500.0, next_feedrate, saved_feedrate;$/;"	v	file:
saving	src/cardreader.h	/^  bool saving;$/;"	m	class:CardReader
sbi	src/Marlin.h	44;"	d
sdCard	src/SdVolume.h	/^  Sd2Card* sdCard() {return sdCard_;}$/;"	f	class:SdVolume
sdCard_	src/SdVolume.cpp	/^Sd2Card* SdVolume::sdCard_;            \/\/ pointer to SD card object$/;"	m	class:SdVolume	file:
sdCard_	src/SdVolume.h	/^  Sd2Card* sdCard_;            \/\/ Sd2Card object for cache$/;"	m	class:SdVolume
sdCard_	src/SdVolume.h	/^  static Sd2Card* sdCard_;            \/\/ Sd2Card object for cache$/;"	m	class:SdVolume
sdpos	src/cardreader.h	/^  uint32_t sdpos ;$/;"	m	class:CardReader
sdprinting	src/cardreader.h	/^  bool sdprinting ;  $/;"	m	class:CardReader
sector_size_high	src/SdInfo.h	/^  unsigned char sector_size_high : 6;$/;"	m	struct:CSDV1
sector_size_high	src/SdInfo.h	/^  unsigned char sector_size_high : 6;$/;"	m	struct:CSDV2
sector_size_low	src/SdInfo.h	/^  unsigned char sector_size_low : 1;$/;"	m	struct:CSDV1
sector_size_low	src/SdInfo.h	/^  unsigned char sector_size_low : 1;$/;"	m	struct:CSDV2
sectorsPerCluster	src/SdFatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:fat32_boot
sectorsPerCluster	src/SdFatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:fat_boot
sectorsPerFat16	src/SdFatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:fat32_boot
sectorsPerFat16	src/SdFatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:fat_boot
sectorsPerFat32	src/SdFatStructs.h	/^  uint32_t sectorsPerFat32;$/;"	m	struct:fat32_boot
sectorsPerTrack	src/SdFatStructs.h	/^  uint16_t sectorsPerTrack;$/;"	m	struct:fat32_boot
sectorsPerTrack	src/SdFatStructs.h	/^  uint16_t sectorsPerTrack;$/;"	m	struct:fat_boot
seekCur	src/SdBaseFile.h	/^  bool seekCur(int32_t offset) {$/;"	f	class:SdBaseFile
seekEnd	src/SdBaseFile.h	/^  bool seekEnd(int32_t offset = 0) {return seekSet(fileSize_ + offset);}$/;"	f	class:SdBaseFile
seekSet	src/SdBaseFile.cpp	/^bool SdBaseFile::seekSet(uint32_t pos) {$/;"	f	class:SdBaseFile
sensitive_pins	.build_ano/mega/src/Marlin.ino.cpp	/^const int sensitive_pins[] = SENSITIVE_PINS; \/\/ Sensitive pin list for M42$/;"	v
serial_char	.build_ano/mega/src/Marlin.ino.cpp	/^static char serial_char;$/;"	v	file:
serial_count	.build_ano/mega/src/Marlin.ino.cpp	/^static int serial_count = 0;$/;"	v	file:
serialprintPGM	src/Marlin.h	/^FORCE_INLINE void serialprintPGM(const char *str)$/;"	f
setIndex	src/cardreader.h	/^  FORCE_INLINE void setIndex(long index) {sdpos = index;file.seekSet(index);};$/;"	f	class:CardReader
setPinMode	src/Sd2PinMap.h	/^  void setPinMode(uint8_t pin, uint8_t mode) {$/;"	f
setSckRate	src/Sd2Card.cpp	/^bool Sd2Card::setSckRate(uint8_t sckRateID) {$/;"	f	class:Sd2Card
setTargetBed	src/temperature.h	/^FORCE_INLINE void setTargetBed(const float &celsius) {  $/;"	f
setTargetHotend	src/temperature.h	/^FORCE_INLINE void setTargetHotend(const float &celsius, uint8_t extruder) {  $/;"	f
setTargetHotend0	src/temperature.h	123;"	d
setTargetHotend1	src/temperature.h	129;"	d
setTargetHotend2	src/temperature.h	136;"	d
setWatch	src/temperature.cpp	/^void setWatch() $/;"	f
setpos	src/SdBaseFile.cpp	/^void SdBaseFile::setpos(fpos_t* pos) {$/;"	f	class:SdBaseFile
setroot	src/cardreader.cpp	/^void CardReader::setroot()$/;"	f	class:CardReader
setup	.build_ano/mega/src/Marlin.ino.cpp	/^void setup()$/;"	f
setup_photpin	.build_ano/mega/src/Marlin.ino.cpp	/^void setup_photpin()$/;"	f
setup_powerhold	.build_ano/mega/src/Marlin.ino.cpp	/^void setup_powerhold()$/;"	f
soft_pwm	src/temperature.cpp	/^  static unsigned char soft_pwm[EXTRUDERS];$/;"	v	file:
spiInit	src/Sd2Card.cpp	/^static void spiInit(uint8_t spiRate) {$/;"	f	file:
spiRate_	src/Sd2Card.h	/^  uint8_t spiRate_;$/;"	m	class:Sd2Card
spiRead	src/Sd2Card.cpp	/^  void spiRead(uint8_t* buf, uint16_t nbyte) {$/;"	f	file:
spiRead	src/Sd2Card.cpp	/^static void spiRead(uint8_t* buf, uint16_t nbyte) {$/;"	f	file:
spiRec	src/Sd2Card.cpp	/^static uint8_t spiRec() {$/;"	f	file:
spiSend	src/Sd2Card.cpp	/^static void spiSend(uint8_t b) {$/;"	f	file:
spiSend	src/Sd2Card.cpp	/^static void spiSend(uint8_t data) {$/;"	f	file:
spiSendBlock	src/Sd2Card.cpp	/^  void spiSendBlock(uint8_t token, const uint8_t* buf) {$/;"	f	file:
spiSendBlock	src/Sd2Card.cpp	/^  void spiSendBlock(uint8_t token, const uint8_t* buf) {$/;"	f
sq	src/wiring.h	88;"	d
st_get_position	src/stepper.cpp	/^long st_get_position(uint8_t axis)$/;"	f
st_init	src/stepper.cpp	/^void st_init()$/;"	f
st_set_e_position	src/stepper.cpp	/^void st_set_e_position(const long &e)$/;"	f
st_set_position	src/stepper.cpp	/^void st_set_position(const long &x, const long &y, const long &z, const long &e)$/;"	f
st_synchronize	src/stepper.cpp	/^void st_synchronize()$/;"	f
st_wake_up	src/stepper.cpp	/^void st_wake_up() {$/;"	f
startFileprint	src/cardreader.cpp	/^void CardReader::startFileprint()$/;"	f	class:CardReader
starttime	.build_ano/mega/src/Marlin.ino.cpp	/^static unsigned long starttime=0;$/;"	v	file:
status	src/ultralcd.h	/^    MainStatus status;$/;"	m	class:MainMenu
status_	src/Sd2Card.h	/^  uint8_t status_;$/;"	m	class:Sd2Card
step_event_count	src/planner.h	/^  unsigned long step_event_count;           \/\/ The number of step events required to complete this block$/;"	m	struct:__anon1
step_events_completed	src/stepper.cpp	/^volatile static unsigned long step_events_completed; \/\/ The number of step events executed in the current block$/;"	v	file:
step_loops	src/stepper.cpp	/^static char step_loops;$/;"	v	file:
stepper_h	src/stepper.h	22;"	d
stepper_inactive_time	.build_ano/mega/src/Marlin.ino.cpp	/^static unsigned long stepper_inactive_time = DEFAULT_STEPPER_DEACTIVE_TIME*1000l;$/;"	v	file:
steps_e	src/planner.h	/^  long steps_x, steps_y, steps_z, steps_e;  \/\/ Step count along each axis$/;"	m	struct:__anon1
steps_x	src/planner.h	/^  long steps_x, steps_y, steps_z, steps_e;  \/\/ Step count along each axis$/;"	m	struct:__anon1
steps_y	src/planner.h	/^  long steps_x, steps_y, steps_z, steps_e;  \/\/ Step count along each axis$/;"	m	struct:__anon1
steps_z	src/planner.h	/^  long steps_x, steps_y, steps_z, steps_e;  \/\/ Step count along each axis$/;"	m	struct:__anon1
stoptime	.build_ano/mega/src/Marlin.ino.cpp	/^static unsigned long stoptime=0;$/;"	v	file:
store_char	src/MarlinSerial.cpp	/^FORCE_INLINE void store_char(unsigned char c)$/;"	f
strchr_pointer	.build_ano/mega/src/Marlin.ino.cpp	/^static char *strchr_pointer; \/\/ just a pointer to find chars in the cmd string like X, Y, Z, E, etc$/;"	v	file:
structSignature	src/SdFatStructs.h	/^  uint32_t  structSignature;$/;"	m	struct:fat32_fsinfo
suicide	.build_ano/mega/src/Marlin.ino.cpp	/^void suicide()$/;"	f
sync	src/SdBaseFile.cpp	/^bool SdBaseFile::sync() {$/;"	f	class:SdBaseFile
taac	src/SdInfo.h	/^  unsigned char taac;$/;"	m	struct:CSDV1
taac	src/SdInfo.h	/^  unsigned char taac;$/;"	m	struct:CSDV2
tail	src/MarlinSerial.h	/^  int tail;$/;"	m	struct:ring_buffer
tailSignature	src/SdFatStructs.h	/^  uint8_t  tailSignature[4];$/;"	m	struct:fat32_fsinfo
target_bed_high_temp	src/temperature.cpp	/^int target_bed_high_temp =0;$/;"	v
target_bed_low_temp	src/temperature.cpp	/^int target_bed_low_temp =0;  $/;"	v
target_raw	src/temperature.cpp	/^int target_raw[EXTRUDERS] = { 0 };$/;"	v
target_raw_bed	src/temperature.cpp	/^int target_raw_bed = 0;$/;"	v
temp2analog	src/temperature.cpp	/^int temp2analog(int celsius, uint8_t e) {$/;"	f
temp2analogBed	src/temperature.cpp	/^int temp2analogBed(int celsius) {$/;"	f
temp_dState	src/temperature.cpp	/^  static float temp_dState[EXTRUDERS] = { 0 };$/;"	v	file:
temp_iState	src/temperature.cpp	/^  static float temp_iState[EXTRUDERS] = { 0 };$/;"	v	file:
temp_iState_max	src/temperature.cpp	/^  static float temp_iState_max[EXTRUDERS];$/;"	v	file:
temp_iState_min	src/temperature.cpp	/^  static float temp_iState_min[EXTRUDERS];$/;"	v	file:
temp_meas_ready	src/temperature.cpp	/^static volatile bool temp_meas_ready = false;$/;"	v	file:
temperature_h	src/temperature.h	22;"	d
timestamp	src/SdBaseFile.cpp	/^bool SdBaseFile::timestamp(SdBaseFile* file) {$/;"	f	class:SdBaseFile
timestamp	src/SdBaseFile.cpp	/^bool SdBaseFile::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:SdBaseFile
tmp_extruder	.build_ano/mega/src/Marlin.ino.cpp	/^static uint8_t tmp_extruder;$/;"	v	file:
tmp_write_protect	src/SdInfo.h	/^  unsigned char tmp_write_protect : 1;$/;"	m	struct:CSDV1
tmp_write_protect	src/SdInfo.h	/^  unsigned char tmp_write_protect : 1;$/;"	m	struct:CSDV2
totalSectors	src/SdFatStructs.h	/^  uint32_t totalSectors;$/;"	m	struct:partitionTable
totalSectors16	src/SdFatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:fat32_boot
totalSectors16	src/SdFatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:fat_boot
totalSectors32	src/SdFatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:fat32_boot
totalSectors32	src/SdFatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:fat_boot
tp_init	src/temperature.cpp	/^void tp_init()$/;"	f
tran_speed	src/SdInfo.h	/^  unsigned char tran_speed;$/;"	m	struct:CSDV1
tran_speed	src/SdInfo.h	/^  unsigned char tran_speed;$/;"	m	struct:CSDV2
trapezoid_generator_reset	src/stepper.cpp	/^FORCE_INLINE void trapezoid_generator_reset() {$/;"	f
true	src/wiring.h	46;"	d
truncate	src/SdBaseFile.cpp	/^bool SdBaseFile::truncate(uint32_t length) {$/;"	f	class:SdBaseFile
tune	src/ultralcd.h	/^    bool tune;$/;"	m	class:MainMenu
type	src/Sd2Card.h	/^  int type() const {return type_;}$/;"	f	class:Sd2Card
type	src/Sd2Card.h	/^  void type(uint8_t value) {type_ = value;}$/;"	f	class:Sd2Card
type	src/SdBaseFile.h	/^  uint8_t type() const {return type_;}$/;"	f	class:SdBaseFile
type	src/SdFatStructs.h	/^  uint8_t  type;$/;"	m	struct:partitionTable
type_	src/Sd2Card.h	/^  uint8_t type_;$/;"	m	class:Sd2Card
type_	src/SdBaseFile.h	/^  uint8_t   type_;          \/\/ type of file see above for values$/;"	m	class:SdBaseFile
updateActiveLines	src/ultralcd.h	/^    FORCE_INLINE void updateActiveLines(const uint8_t &maxlines,volatile int &encoderpos)$/;"	f	class:MainMenu
updatePID	src/temperature.cpp	/^void updatePID()$/;"	f
updir	src/cardreader.cpp	/^void CardReader::updir()$/;"	f	class:CardReader
usuallyZero	src/SdFatStructs.h	/^  uint16_t usuallyZero;$/;"	m	struct:masterBootRecord
v1	src/SdInfo.h	/^  csd1_t v1;$/;"	m	union:csd_t
v2	src/SdInfo.h	/^  csd2_t v2;$/;"	m	union:csd_t
vdd_r_curr_max	src/SdInfo.h	/^  unsigned char vdd_r_curr_max : 3;$/;"	m	struct:CSDV1
vdd_r_curr_min	src/SdInfo.h	/^  unsigned char vdd_r_curr_min : 3;$/;"	m	struct:CSDV1
vdd_w_cur_max	src/SdInfo.h	/^  unsigned char vdd_w_cur_max : 3;$/;"	m	struct:CSDV1
vdd_w_curr_min	src/SdInfo.h	/^  unsigned char vdd_w_curr_min : 3;$/;"	m	struct:CSDV1
vol_	src/SdBaseFile.h	/^  SdVolume* vol_;           \/\/ volume where file is located$/;"	m	class:SdBaseFile
volume	src/SdBaseFile.h	/^  SdVolume* volume() const {return vol_;}$/;"	f	class:SdBaseFile
volume	src/cardreader.h	/^  SdVolume volume;$/;"	m	class:CardReader
volumeLabel	src/SdFatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat32_boot
volumeLabel	src/SdFatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat_boot
volumeSerialNumber	src/SdFatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat32_boot
volumeSerialNumber	src/SdFatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat_boot
waitNotBusy	src/Sd2Card.cpp	/^bool Sd2Card::waitNotBusy(uint16_t timeoutMillis) {$/;"	f	class:Sd2Card
watch_oldtemp	src/temperature.cpp	/^  int watch_oldtemp[3] = {0,0,0};$/;"	v
watch_raw	src/temperature.cpp	/^  int watch_raw[EXTRUDERS] = { -1000 }; \/\/ the first value used for all$/;"	v
watchmillis	src/temperature.cpp	/^  unsigned long watchmillis = 0;$/;"	v
wd_init	src/watchdog.h	/^  FORCE_INLINE void wd_init() {};$/;"	f
wd_reset	src/watchdog.h	/^  FORCE_INLINE void wd_reset() {};$/;"	f
word	src/wiring.h	/^typedef unsigned int word;$/;"	t
workDir	src/cardreader.h	/^  SdFile root,*curDir,workDir,workDirParent,workDirParentParent;$/;"	m	class:CardReader
workDirParent	src/cardreader.h	/^  SdFile root,*curDir,workDir,workDirParent,workDirParentParent;$/;"	m	class:CardReader
workDirParentParent	src/cardreader.h	/^  SdFile root,*curDir,workDir,workDirParent,workDirParentParent;$/;"	m	class:CardReader
wp_grp_enable	src/SdInfo.h	/^  unsigned char wp_grp_enable : 1;$/;"	m	struct:CSDV1
wp_grp_enable	src/SdInfo.h	/^  unsigned char wp_grp_enable : 1;$/;"	m	struct:CSDV2
wp_grp_size	src/SdInfo.h	/^  unsigned char wp_grp_size : 7;$/;"	m	struct:CSDV1
wp_grp_size	src/SdInfo.h	/^  unsigned char wp_grp_size : 7;$/;"	m	struct:CSDV2
write	src/MarlinSerial.h	/^    FORCE_INLINE void write(const char *str)$/;"	f	class:MarlinSerial
write	src/MarlinSerial.h	/^    FORCE_INLINE void write(const uint8_t *buffer, size_t size)$/;"	f	class:MarlinSerial
write	src/MarlinSerial.h	/^    FORCE_INLINE void write(uint8_t c)$/;"	f	class:MarlinSerial
write	src/SdBaseFile.cpp	/^int16_t SdBaseFile::write(const void* buf, uint16_t nbyte) {$/;"	f	class:SdBaseFile
write	src/SdFile.cpp	/^    size_t SdFile::write(uint8_t b)$/;"	f	class:SdFile
write	src/SdFile.cpp	/^int16_t SdFile::write(const void* buf, uint16_t nbyte) {$/;"	f	class:SdFile
write	src/SdFile.cpp	/^void SdFile::write(const char* str) {$/;"	f	class:SdFile
writeBlock	src/Sd2Card.cpp	/^bool Sd2Card::writeBlock(uint32_t blockNumber, const uint8_t* src) {$/;"	f	class:Sd2Card
writeBlock	src/SdVolume.h	/^  bool writeBlock(uint32_t block, const uint8_t* dst) {$/;"	f	class:SdVolume
writeData	src/Sd2Card.cpp	/^bool Sd2Card::writeData(const uint8_t* src) {$/;"	f	class:Sd2Card
writeData	src/Sd2Card.cpp	/^bool Sd2Card::writeData(uint8_t token, const uint8_t* src) {$/;"	f	class:Sd2Card
writeError	src/SdBaseFile.h	/^  bool writeError;$/;"	m	class:SdBaseFile
writeStart	src/Sd2Card.cpp	/^bool Sd2Card::writeStart(uint32_t blockNumber, uint32_t eraseCount) {$/;"	f	class:Sd2Card
writeStop	src/Sd2Card.cpp	/^bool Sd2Card::writeStop() {$/;"	f	class:Sd2Card
write_P	src/SdFile.cpp	/^void SdFile::write_P(PGM_P str) {$/;"	f	class:SdFile
write_bl_len_high	src/SdInfo.h	/^  unsigned char write_bl_len_high : 2;$/;"	m	struct:CSDV1
write_bl_len_high	src/SdInfo.h	/^  unsigned char write_bl_len_high : 2;$/;"	m	struct:CSDV2
write_bl_len_low	src/SdInfo.h	/^  unsigned char write_bl_len_low : 2;$/;"	m	struct:CSDV1
write_bl_len_low	src/SdInfo.h	/^  unsigned char write_bl_len_low : 2;$/;"	m	struct:CSDV2
write_blk_misalign	src/SdInfo.h	/^  unsigned char write_blk_misalign : 1;$/;"	m	struct:CSDV1
write_blk_misalign	src/SdInfo.h	/^  unsigned char write_blk_misalign : 1;$/;"	m	struct:CSDV2
write_command	src/cardreader.cpp	/^void CardReader::write_command(char *buf)$/;"	f	class:CardReader
write_partial	src/SdInfo.h	/^  unsigned char write_partial : 1;$/;"	m	struct:CSDV1
write_partial	src/SdInfo.h	/^  unsigned char write_partial : 1;$/;"	m	struct:CSDV2
writeln_P	src/SdFile.cpp	/^void SdFile::writeln_P(PGM_P str) {$/;"	f	class:SdFile
x_segment_time	src/planner.cpp	/^  static long x_segment_time[3]={0,0,0};                     \/\/ Segment times (in us). Used for speed calculations$/;"	v	file:
y_segment_time	src/planner.cpp	/^  static long y_segment_time[3]={0,0,0};$/;"	v	file:
~SdBaseFile	src/SdBaseFile.h	/^  ~SdBaseFile() {if(isOpen()) close();}$/;"	f	class:SdBaseFile
